{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"to\", \"action\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport useLinkProps from \"./useLinkProps\";\nexport default function Link(_ref) {\n  var to = _ref.to,\n      action = _ref.action,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var props = useLinkProps({\n    to: to,\n    action: action\n  });\n\n  var onPress = function onPress(e) {\n    if ('onPress' in rest) {\n      var _rest$onPress;\n\n      (_rest$onPress = rest.onPress) === null || _rest$onPress === void 0 ? void 0 : _rest$onPress.call(rest, e);\n    }\n\n    props.onPress(e);\n  };\n\n  return React.createElement(Text, _objectSpread(_objectSpread(_objectSpread({}, props), rest), Platform.select({\n    web: {\n      onClick: onPress\n    },\n    default: {\n      onPress: onPress\n    }\n  })));\n}","map":{"version":3,"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,YAAP;AAUA,eAAe,SAASC,IAAT,CAAcC,IAAd,EAAoB;AACjC,MACEC,EADF,GAIID,IAJJ,CACEC,EADF;AAAA,MAEEC,MAFF,GAIIF,IAJJ,CAEEE,MAFF;AAAA,MAGKC,IAHL,4BAIIH,IAJJ;;AAKA,MAAMI,KAAK,GAAGN,YAAY,CAAC;AACzBG,MAAE,EAAFA,EADyB;AAEzBC,UAAM,EAANA;AAFyB,GAAD,CAA1B;;AAKA,MAAMG,OAAO,GAAG,SAAVA,OAAU,EAAC,EAAI;AACnB,QAAI,aAAaF,IAAjB,EAAuB;AACrB,UAAIG,aAAJ;;AAEA,OAACA,aAAa,GAAGH,IAAI,CAACE,OAAtB,MAAmC,IAAnC,IAA2CC,aAAa,KAAK,KAAK,CAAlE,GAAsE,KAAK,CAA3E,GAA+EA,aAAa,CAACC,IAAd,CAAmBJ,IAAnB,EAAyBK,CAAzB,CAA/E;AACD;;AAEDJ,SAAK,CAACC,OAAN,CAAcG,CAAd;AACD,GARD;;AAUA,SAAoBX,KAAK,CAACY,aAAN,CAAoBC,IAApB,gDAA+BN,KAA/B,GACfD,IADe,GAEfQ,QAAQ,CAACC,MAAT,CAAgB;AACjBC,OAAG,EAAE;AACHC,aAAO,EAAET;AADN,KADY;AAIjBU,WAAO,EAAE;AACPV,aAAO,EAAPA;AADO;AAJQ,GAAhB,CAFe,EAApB;AAWD","names":["React","useLinkProps","Link","_ref","to","action","rest","props","onPress","_rest$onPress","call","e","createElement","Text","Platform","select","web","onClick","default"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-navigation/native/lib/module/Link.js"],"sourcesContent":["import * as React from 'react';\nimport { Platform, Text } from 'react-native';\nimport useLinkProps from './useLinkProps';\n\n/**\n * Component to render link to another screen using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n * @param props.children Child elements to render the content.\n */\nexport default function Link(_ref) {\n  let {\n    to,\n    action,\n    ...rest\n  } = _ref;\n  const props = useLinkProps({\n    to,\n    action\n  });\n\n  const onPress = e => {\n    if ('onPress' in rest) {\n      var _rest$onPress;\n\n      (_rest$onPress = rest.onPress) === null || _rest$onPress === void 0 ? void 0 : _rest$onPress.call(rest, e);\n    }\n\n    props.onPress(e);\n  };\n\n  return /*#__PURE__*/React.createElement(Text, { ...props,\n    ...rest,\n    ...Platform.select({\n      web: {\n        onClick: onPress\n      },\n      default: {\n        onPress\n      }\n    })\n  });\n}\n//# sourceMappingURL=Link.js.map"]},"metadata":{},"sourceType":"module"}