{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nexport default function useThenable(create) {\n  var _React$useState = React.useState(create),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      promise = _React$useState2[0];\n\n  var initialState = [false, undefined];\n  promise.then(function (result) {\n    initialState = [true, result];\n  });\n\n  var _React$useState3 = React.useState(initialState),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var _state = _slicedToArray(state, 1),\n      resolved = _state[0];\n\n  React.useEffect(function () {\n    var cancelled = false;\n\n    var resolve = function resolve() {\n      var result;\n      return _regeneratorRuntime.async(function resolve$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(promise);\n\n            case 3:\n              result = _context.sent;\n\n            case 4:\n              _context.prev = 4;\n\n              if (!cancelled) {\n                setState([true, result]);\n              }\n\n              return _context.finish(4);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0,, 4, 7]], Promise);\n    };\n\n    if (!resolved) {\n      resolve();\n    }\n\n    return function () {\n      cancelled = true;\n    };\n  }, [promise, resolved]);\n  return state;\n}","map":{"version":3,"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,eAAe,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC1C,wBAAkBF,KAAK,CAACG,QAAN,CAAeD,MAAf,CAAlB;AAAA;AAAA,MAAOE,OAAP;;AACA,MAAIC,YAAY,GAAG,CAAC,KAAD,EAAQC,SAAR,CAAnB;AAEAF,SAAO,CAACG,IAAR,CAAa,gBAAM,EAAI;AACrBF,gBAAY,GAAG,CAAC,IAAD,EAAOG,MAAP,CAAf;AACD,GAFD;;AAGA,yBAA0BR,KAAK,CAACG,QAAN,CAAeE,YAAf,CAA1B;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AACA,8BAAmBD,KAAnB;AAAA,MAAOE,QAAP;;AACAX,OAAK,CAACY,SAAN,CAAgB,YAAM;AACpB,QAAIC,SAAS,GAAG,KAAhB;;AAEA,QAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAIGV,OAJH;;AAAA;AAIZI,oBAJY;;AAAA;AAAA;;AAMZ,kBAAI,CAACK,SAAL,EAAgB;AACdH,wBAAQ,CAAC,CAAC,IAAD,EAAOF,MAAP,CAAD,CAAR;AACD;;AARW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAYA,QAAI,CAACG,QAAL,EAAe;AACbG,aAAO;AACR;;AAED,WAAO,YAAM;AACXD,eAAS,GAAG,IAAZ;AACD,KAFD;AAGD,GAtBD,EAsBG,CAACT,OAAD,EAAUO,QAAV,CAtBH;AAuBA,SAAOF,KAAP;AACD","names":["React","useThenable","create","useState","promise","initialState","undefined","then","result","state","setState","resolved","useEffect","cancelled","resolve"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-navigation/native/lib/module/useThenable.js"],"sourcesContent":["import * as React from 'react';\nexport default function useThenable(create) {\n  const [promise] = React.useState(create);\n  let initialState = [false, undefined]; // Check if our thenable is synchronous\n\n  promise.then(result => {\n    initialState = [true, result];\n  });\n  const [state, setState] = React.useState(initialState);\n  const [resolved] = state;\n  React.useEffect(() => {\n    let cancelled = false;\n\n    const resolve = async () => {\n      let result;\n\n      try {\n        result = await promise;\n      } finally {\n        if (!cancelled) {\n          setState([true, result]);\n        }\n      }\n    };\n\n    if (!resolved) {\n      resolve();\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  }, [promise, resolved]);\n  return state;\n}\n//# sourceMappingURL=useThenable.js.map"]},"metadata":{},"sourceType":"module"}