{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"onPress\", \"to\", \"accessibilityRole\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TabBarIcon from \"./TabBarIcon\";\nexport default function BottomTabBarItem(_ref) {\n  var focused = _ref.focused,\n      route = _ref.route,\n      label = _ref.label,\n      icon = _ref.icon,\n      badge = _ref.badge,\n      badgeStyle = _ref.badgeStyle,\n      to = _ref.to,\n      _ref$button = _ref.button,\n      button = _ref$button === void 0 ? function (_ref2) {\n    var children = _ref2.children,\n        style = _ref2.style,\n        _onPress = _ref2.onPress,\n        to = _ref2.to,\n        accessibilityRole = _ref2.accessibilityRole,\n        rest = _objectWithoutProperties(_ref2, _excluded);\n\n    if (Platform.OS === 'web' && to) {\n      return React.createElement(Link, _extends({}, rest, {\n        to: to,\n        style: [styles.button, style],\n        onPress: function onPress(e) {\n          if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0)) {\n            e.preventDefault();\n            _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n          }\n        }\n      }), children);\n    } else {\n      return React.createElement(Pressable, _extends({}, rest, {\n        accessibilityRole: accessibilityRole,\n        onPress: _onPress,\n        style: style\n      }), children);\n    }\n  } : _ref$button,\n      accessibilityLabel = _ref.accessibilityLabel,\n      testID = _ref.testID,\n      onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      horizontal = _ref.horizontal,\n      customActiveTintColor = _ref.activeTintColor,\n      customInactiveTintColor = _ref.inactiveTintColor,\n      _ref$activeBackground = _ref.activeBackgroundColor,\n      activeBackgroundColor = _ref$activeBackground === void 0 ? 'transparent' : _ref$activeBackground,\n      _ref$inactiveBackgrou = _ref.inactiveBackgroundColor,\n      inactiveBackgroundColor = _ref$inactiveBackgrou === void 0 ? 'transparent' : _ref$inactiveBackgrou,\n      _ref$showLabel = _ref.showLabel,\n      showLabel = _ref$showLabel === void 0 ? true : _ref$showLabel,\n      allowFontScaling = _ref.allowFontScaling,\n      labelStyle = _ref.labelStyle,\n      iconStyle = _ref.iconStyle,\n      style = _ref.style;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var activeTintColor = customActiveTintColor === undefined ? colors.primary : customActiveTintColor;\n  var inactiveTintColor = customInactiveTintColor === undefined ? Color(colors.text).mix(Color(colors.card), 0.5).hex() : customInactiveTintColor;\n\n  var renderLabel = function renderLabel(_ref3) {\n    var focused = _ref3.focused;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    var color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return React.createElement(Text, {\n        numberOfLines: 1,\n        style: [styles.label, {\n          color: color\n        }, horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n        allowFontScaling: allowFontScaling\n      }, label);\n    }\n\n    return label({\n      focused: focused,\n      color: color,\n      position: horizontal ? 'beside-icon' : 'below-icon'\n    });\n  };\n\n  var renderIcon = function renderIcon(_ref4) {\n    var focused = _ref4.focused;\n\n    if (icon === undefined) {\n      return null;\n    }\n\n    var activeOpacity = focused ? 1 : 0;\n    var inactiveOpacity = focused ? 0 : 1;\n    return React.createElement(TabBarIcon, {\n      route: route,\n      horizontal: horizontal,\n      badge: badge,\n      badgeStyle: badgeStyle,\n      activeOpacity: activeOpacity,\n      inactiveOpacity: inactiveOpacity,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      renderIcon: icon,\n      style: iconStyle\n    });\n  };\n\n  var scene = {\n    route: route,\n    focused: focused\n  };\n  var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  return button({\n    to: to,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: Platform.select({\n      ios: 'button',\n      default: 'tab'\n    }),\n    accessibilityState: {\n      selected: focused\n    },\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [styles.tab, {\n      backgroundColor: backgroundColor\n    }, horizontal ? styles.tabLandscape : styles.tabPortrait, style],\n    children: React.createElement(React.Fragment, null, renderIcon(scene), renderLabel(scene))\n  });\n}\nvar styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 10\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3\n  },\n  button: {\n    display: 'flex'\n  }\n});","map":{"version":3,"mappings":";;;AAAA,SAASA,QAAT,GAAoB;AAAEA,UAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,gBAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,IAAT,EAAeC,QAAf,QAA+B,0BAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,UAAP;AACA,eAAe,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC7C,MACEC,OADF,GAuDID,IAvDJ,CACEC,OADF;AAAA,MAEEC,KAFF,GAuDIF,IAvDJ,CAEEE,KAFF;AAAA,MAGEC,KAHF,GAuDIH,IAvDJ,CAGEG,KAHF;AAAA,MAIEC,IAJF,GAuDIJ,IAvDJ,CAIEI,IAJF;AAAA,MAKEC,KALF,GAuDIL,IAvDJ,CAKEK,KALF;AAAA,MAMEC,UANF,GAuDIN,IAvDJ,CAMEM,UANF;AAAA,MAOEC,EAPF,GAuDIP,IAvDJ,CAOEO,EAPF;AAAA,oBAuDIP,IAvDJ,CAQEQ,MARF;AAAA,MAQEA,MARF,4BAQW,eAAK,EAAI;AAChB,QACEC,QADF,GAOIC,KAPJ,CACED,QADF;AAAA,QAEEE,KAFF,GAOID,KAPJ,CAEEC,KAFF;AAAA,QAGEC,QAHF,GAOIF,KAPJ,CAGEE,OAHF;AAAA,QAIEL,EAJF,GAOIG,KAPJ,CAIEH,EAJF;AAAA,QAKEM,iBALF,GAOIH,KAPJ,CAKEG,iBALF;AAAA,QAMKC,IANL,4BAOIJ,KAPJ;;AASA,QAAIK,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyBT,EAA7B,EAAiC;AAG/B,aAAoBV,KAAK,CAACoB,aAAN,CAAoBvB,IAApB,EAA0Bb,QAAQ,CAAC,EAAD,EAAKiC,IAAL,EAAW;AAC/DP,UAAE,EAAEA,EAD2D;AAE/DI,aAAK,EAAE,CAACO,MAAM,CAACV,MAAR,EAAgBG,KAAhB,CAFwD;AAG/DC,eAAO,EAAE,kBAAC,EAAI;AACZ,cAAI,EAAEO,CAAC,CAACC,OAAF,IAAaD,CAAC,CAACE,MAAf,IAAyBF,CAAC,CAACG,OAA3B,IAAsCH,CAAC,CAACI,QAA1C,MACJJ,CAAC,CAACX,MAAF,IAAY,IAAZ,IAAoBW,CAAC,CAACX,MAAF,KAAa,CAD7B,CAAJ,EAEE;AACAW,aAAC,CAACK,cAAF;AACAZ,oBAAO,KAAK,IAAZ,IAAoBA,QAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,QAAO,CAACO,CAAD,CAAzD;AACD;AACF;AAV8D,OAAX,CAAlC,EAWhBV,QAXgB,CAApB;AAYD,KAfD,MAeO;AACL,aAAoBZ,KAAK,CAACoB,aAAN,CAAoBQ,SAApB,EAA+B5C,QAAQ,CAAC,EAAD,EAAKiC,IAAL,EAAW;AACpED,yBAAiB,EAAEA,iBADiD;AAEpED,eAAO,EAAEA,QAF2D;AAGpED,aAAK,EAAEA;AAH6D,OAAX,CAAvC,EAIhBF,QAJgB,CAApB;AAKD;AACF,GAxCH;AAAA,MAyCEiB,kBAzCF,GAuDI1B,IAvDJ,CAyCE0B,kBAzCF;AAAA,MA0CEC,MA1CF,GAuDI3B,IAvDJ,CA0CE2B,MA1CF;AAAA,MA2CEf,OA3CF,GAuDIZ,IAvDJ,CA2CEY,OA3CF;AAAA,MA4CEgB,WA5CF,GAuDI5B,IAvDJ,CA4CE4B,WA5CF;AAAA,MA6CEC,UA7CF,GAuDI7B,IAvDJ,CA6CE6B,UA7CF;AAAA,MA8CmBC,qBA9CnB,GAuDI9B,IAvDJ,CA8CE+B,eA9CF;AAAA,MA+CqBC,uBA/CrB,GAuDIhC,IAvDJ,CA+CEiC,iBA/CF;AAAA,8BAuDIjC,IAvDJ,CAgDEkC,qBAhDF;AAAA,MAgDEA,qBAhDF,sCAgD0B,aAhD1B;AAAA,8BAuDIlC,IAvDJ,CAiDEmC,uBAjDF;AAAA,MAiDEA,uBAjDF,sCAiD4B,aAjD5B;AAAA,uBAuDInC,IAvDJ,CAkDEoC,SAlDF;AAAA,MAkDEA,SAlDF,+BAkDc,IAlDd;AAAA,MAmDEC,gBAnDF,GAuDIrC,IAvDJ,CAmDEqC,gBAnDF;AAAA,MAoDEC,UApDF,GAuDItC,IAvDJ,CAoDEsC,UApDF;AAAA,MAqDEC,SArDF,GAuDIvC,IAvDJ,CAqDEuC,SArDF;AAAA,MAsDE5B,KAtDF,GAuDIX,IAvDJ,CAsDEW,KAtDF;;AAwDA,kBAEIhB,QAAQ,EAFZ;AAAA,MACE6C,MADF,aACEA,MADF;;AAGA,MAAMT,eAAe,GAAGD,qBAAqB,KAAKW,SAA1B,GAAsCD,MAAM,CAACE,OAA7C,GAAuDZ,qBAA/E;AACA,MAAMG,iBAAiB,GAAGD,uBAAuB,KAAKS,SAA5B,GAAwC7C,KAAK,CAAC4C,MAAM,CAACG,IAAR,CAAL,CAAmBC,GAAnB,CAAuBhD,KAAK,CAAC4C,MAAM,CAACK,IAAR,CAA5B,EAA2C,GAA3C,EAAgDC,GAAhD,EAAxC,GAAgGd,uBAA1H;;AAEA,MAAMe,WAAW,GAAG,SAAdA,WAAc,MAAK,EAAI;AAC3B,QACE9C,OADF,GAEI+C,KAFJ,CACE/C,OADF;;AAIA,QAAImC,SAAS,KAAK,KAAlB,EAAyB;AACvB,aAAO,IAAP;AACD;;AAED,QAAMa,KAAK,GAAGhD,OAAO,GAAG8B,eAAH,GAAqBE,iBAA1C;;AAEA,QAAI,OAAO9B,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAoBN,KAAK,CAACoB,aAAN,CAAoBiC,IAApB,EAA0B;AAC5CC,qBAAa,EAAE,CAD6B;AAE5CxC,aAAK,EAAE,CAACO,MAAM,CAACf,KAAR,EAAe;AACpB8C,eAAK,EAALA;AADoB,SAAf,EAEJpB,UAAU,GAAGX,MAAM,CAACkC,WAAV,GAAwBlC,MAAM,CAACmC,YAFrC,EAEmDf,UAFnD,CAFqC;AAK5CD,wBAAgB,EAAEA;AAL0B,OAA1B,EAMjBlC,KANiB,CAApB;AAOD;;AAED,WAAOA,KAAK,CAAC;AACXF,aAAO,EAAPA,OADW;AAEXgD,WAAK,EAALA,KAFW;AAGXK,cAAQ,EAAEzB,UAAU,GAAG,aAAH,GAAmB;AAH5B,KAAD,CAAZ;AAKD,GA1BD;;AA4BA,MAAM0B,UAAU,GAAG,SAAbA,UAAa,MAAK,EAAI;AAC1B,QACEtD,OADF,GAEIuD,KAFJ,CACEvD,OADF;;AAIA,QAAIG,IAAI,KAAKqC,SAAb,EAAwB;AACtB,aAAO,IAAP;AACD;;AAED,QAAMgB,aAAa,GAAGxD,OAAO,GAAG,CAAH,GAAO,CAApC;AACA,QAAMyD,eAAe,GAAGzD,OAAO,GAAG,CAAH,GAAO,CAAtC;AACA,WAAoBJ,KAAK,CAACoB,aAAN,CAAoBnB,UAApB,EAAgC;AAClDI,WAAK,EAAEA,KAD2C;AAElD2B,gBAAU,EAAEA,UAFsC;AAGlDxB,WAAK,EAAEA,KAH2C;AAIlDC,gBAAU,EAAEA,UAJsC;AAKlDmD,mBAAa,EAAEA,aALmC;AAMlDC,qBAAe,EAAEA,eANiC;AAOlD3B,qBAAe,EAAEA,eAPiC;AAQlDE,uBAAiB,EAAEA,iBAR+B;AASlDsB,gBAAU,EAAEnD,IATsC;AAUlDO,WAAK,EAAE4B;AAV2C,KAAhC,CAApB;AAYD,GAvBD;;AAyBA,MAAMoB,KAAK,GAAG;AACZzD,SAAK,EAALA,KADY;AAEZD,WAAO,EAAPA;AAFY,GAAd;AAIA,MAAM2D,eAAe,GAAG3D,OAAO,GAAGiC,qBAAH,GAA2BC,uBAA1D;AACA,SAAO3B,MAAM,CAAC;AACZD,MAAE,EAAFA,EADY;AAEZK,WAAO,EAAPA,OAFY;AAGZgB,eAAW,EAAXA,WAHY;AAIZD,UAAM,EAANA,MAJY;AAKZD,sBAAkB,EAAlBA,kBALY;AAOZb,qBAAiB,EAAEE,QAAQ,CAAC8C,MAAT,CAAgB;AACjCC,SAAG,EAAE,QAD4B;AAEjCC,aAAO,EAAE;AAFwB,KAAhB,CAPP;AAWZC,sBAAkB,EAAE;AAClBC,cAAQ,EAAEhE;AADQ,KAXR;AAeZiE,uBAAmB,EAAEjE,OAAO,GAAG,CAAC,UAAD,CAAH,GAAkB,EAflC;AAgBZU,SAAK,EAAE,CAACO,MAAM,CAACiD,GAAR,EAAa;AAClBP,qBAAe,EAAfA;AADkB,KAAb,EAEJ/B,UAAU,GAAGX,MAAM,CAACkD,YAAV,GAAyBlD,MAAM,CAACmD,WAFtC,EAEmD1D,KAFnD,CAhBK;AAmBZF,YAAQ,EAAeZ,KAAK,CAACoB,aAAN,CAAoBpB,KAAK,CAACyE,QAA1B,EAAoC,IAApC,EAA0Cf,UAAU,CAACI,KAAD,CAApD,EAA6DZ,WAAW,CAACY,KAAD,CAAxE;AAnBX,GAAD,CAAb;AAqBD;AACD,IAAMzC,MAAM,GAAGqD,UAAU,CAACC,MAAX,CAAkB;AAC/BL,KAAG,EAAE;AACHM,QAAI,EAAE,CADH;AAEHC,cAAU,EAAE;AAFT,GAD0B;AAK/BL,aAAW,EAAE;AACXM,kBAAc,EAAE,UADL;AAEXC,iBAAa,EAAE;AAFJ,GALkB;AAS/BR,cAAY,EAAE;AACZO,kBAAc,EAAE,QADJ;AAEZC,iBAAa,EAAE;AAFH,GATiB;AAa/BzE,OAAK,EAAE;AACL0E,aAAS,EAAE,QADN;AAELjB,mBAAe,EAAE;AAFZ,GAbwB;AAiB/BP,cAAY,EAAE;AACZyB,YAAQ,EAAE;AADE,GAjBiB;AAoB/B1B,aAAW,EAAE;AACX0B,YAAQ,EAAE,EADC;AAEXC,cAAU,EAAE,EAFD;AAGXC,aAAS,EAAE;AAHA,GApBkB;AAyB/BxE,QAAM,EAAE;AACNyE,WAAO,EAAE;AADH;AAzBuB,CAAlB,CAAf","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","Link","useTheme","Color","React","TabBarIcon","BottomTabBarItem","_ref","focused","route","label","icon","badge","badgeStyle","to","button","children","_ref2","style","onPress","accessibilityRole","rest","Platform","OS","createElement","styles","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","Pressable","accessibilityLabel","testID","onLongPress","horizontal","customActiveTintColor","activeTintColor","customInactiveTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","allowFontScaling","labelStyle","iconStyle","colors","undefined","primary","text","mix","card","hex","renderLabel","_ref3","color","Text","numberOfLines","labelBeside","labelBeneath","position","renderIcon","_ref4","activeOpacity","inactiveOpacity","scene","backgroundColor","select","ios","default","accessibilityState","selected","accessibilityStates","tab","tabLandscape","tabPortrait","Fragment","StyleSheet","create","flex","alignItems","justifyContent","flexDirection","textAlign","fontSize","marginLeft","marginTop","display"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-navigation/bottom-tabs/lib/module/views/BottomTabItem.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport { Platform, Pressable, StyleSheet, Text } from 'react-native';\nimport TabBarIcon from './TabBarIcon';\nexport default function BottomTabBarItem(_ref) {\n  let {\n    focused,\n    route,\n    label,\n    icon,\n    badge,\n    badgeStyle,\n    to,\n    button = _ref2 => {\n      let {\n        children,\n        style,\n        onPress,\n        to,\n        accessibilityRole,\n        ...rest\n      } = _ref2;\n\n      if (Platform.OS === 'web' && to) {\n        // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n        // We need to use `onClick` to be able to prevent default browser handling of links.\n        return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n          to: to,\n          style: [styles.button, style],\n          onPress: e => {\n            if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && ( // ignore clicks with modifier keys\n            e.button == null || e.button === 0) // ignore everything but left clicks\n            ) {\n              e.preventDefault();\n              onPress === null || onPress === void 0 ? void 0 : onPress(e);\n            }\n          }\n        }), children);\n      } else {\n        return /*#__PURE__*/React.createElement(Pressable, _extends({}, rest, {\n          accessibilityRole: accessibilityRole,\n          onPress: onPress,\n          style: style\n        }), children);\n      }\n    },\n    accessibilityLabel,\n    testID,\n    onPress,\n    onLongPress,\n    horizontal,\n    activeTintColor: customActiveTintColor,\n    inactiveTintColor: customInactiveTintColor,\n    activeBackgroundColor = 'transparent',\n    inactiveBackgroundColor = 'transparent',\n    showLabel = true,\n    allowFontScaling,\n    labelStyle,\n    iconStyle,\n    style\n  } = _ref;\n  const {\n    colors\n  } = useTheme();\n  const activeTintColor = customActiveTintColor === undefined ? colors.primary : customActiveTintColor;\n  const inactiveTintColor = customInactiveTintColor === undefined ? Color(colors.text).mix(Color(colors.card), 0.5).hex() : customInactiveTintColor;\n\n  const renderLabel = _ref3 => {\n    let {\n      focused\n    } = _ref3;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return /*#__PURE__*/React.createElement(Text, {\n        numberOfLines: 1,\n        style: [styles.label, {\n          color\n        }, horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n        allowFontScaling: allowFontScaling\n      }, label);\n    }\n\n    return label({\n      focused,\n      color,\n      position: horizontal ? 'beside-icon' : 'below-icon'\n    });\n  };\n\n  const renderIcon = _ref4 => {\n    let {\n      focused\n    } = _ref4;\n\n    if (icon === undefined) {\n      return null;\n    }\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n    return /*#__PURE__*/React.createElement(TabBarIcon, {\n      route: route,\n      horizontal: horizontal,\n      badge: badge,\n      badgeStyle: badgeStyle,\n      activeOpacity: activeOpacity,\n      inactiveOpacity: inactiveOpacity,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      renderIcon: icon,\n      style: iconStyle\n    });\n  };\n\n  const scene = {\n    route,\n    focused\n  };\n  const backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  return button({\n    to,\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    // FIXME: accessibilityRole: 'tab' doesn't seem to work as expected on iOS\n    accessibilityRole: Platform.select({\n      ios: 'button',\n      default: 'tab'\n    }),\n    accessibilityState: {\n      selected: focused\n    },\n    // @ts-expect-error: keep for compatibility with older React Native versions\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [styles.tab, {\n      backgroundColor\n    }, horizontal ? styles.tabLandscape : styles.tabPortrait, style],\n    children: /*#__PURE__*/React.createElement(React.Fragment, null, renderIcon(scene), renderLabel(scene))\n  });\n}\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 10\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3\n  },\n  button: {\n    display: 'flex'\n  }\n});\n//# sourceMappingURL=BottomTabItem.js.map"]},"metadata":{},"sourceType":"module"}