{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { getPathFromState, NavigationHelpersContext } from '@react-navigation/core';\nimport * as React from 'react';\nimport LinkingContext from \"./LinkingContext\";\n\nvar getRootStateForNavigate = function getRootStateForNavigate(navigation, state) {\n  var parent = navigation.getParent();\n\n  if (parent) {\n    var parentState = parent.getState();\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [_objectSpread(_objectSpread({}, parentState.routes[parentState.index]), {}, {\n        state: state\n      })]\n    });\n  }\n\n  return state;\n};\n\nexport default function useLinkBuilder() {\n  var navigation = React.useContext(NavigationHelpersContext);\n  var linking = React.useContext(LinkingContext);\n  var buildLink = React.useCallback(function (name, params) {\n    var options = linking.options;\n\n    if ((options === null || options === void 0 ? void 0 : options.enabled) === false) {\n      return undefined;\n    }\n\n    var state = navigation ? getRootStateForNavigate(navigation, {\n      index: 0,\n      routes: [{\n        name: name,\n        params: params\n      }]\n    }) : {\n      index: 0,\n      routes: [{\n        name: name,\n        params: params\n      }]\n    };\n    var path = options !== null && options !== void 0 && options.getPathFromState ? options.getPathFromState(state, options === null || options === void 0 ? void 0 : options.config) : getPathFromState(state, options === null || options === void 0 ? void 0 : options.config);\n    return path;\n  }, [linking, navigation]);\n  return buildLink;\n}","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,gBAAT,EAA2BC,wBAA3B,QAA2D,wBAA3D;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,UAAD,EAAaC,KAAb,EAAuB;AACrD,MAAMC,MAAM,GAAGF,UAAU,CAACG,SAAX,EAAf;;AAEA,MAAID,MAAJ,EAAY;AACV,QAAME,WAAW,GAAGF,MAAM,CAACG,QAAP,EAApB;AACA,WAAON,uBAAuB,CAACG,MAAD,EAAS;AACrCI,WAAK,EAAE,CAD8B;AAErCC,YAAM,EAAE,iCAAMH,WAAW,CAACG,MAAZ,CAAmBH,WAAW,CAACE,KAA/B,CAAN;AACNL,aAAK,EAAEA;AADD;AAF6B,KAAT,CAA9B;AAMD;;AAED,SAAOA,KAAP;AACD,CAdD;;AAqBA,eAAe,SAASO,cAAT,GAA0B;AACvC,MAAMR,UAAU,GAAGH,KAAK,CAACY,UAAN,CAAiBb,wBAAjB,CAAnB;AACA,MAAMc,OAAO,GAAGb,KAAK,CAACY,UAAN,CAAiBX,cAAjB,CAAhB;AACA,MAAMa,SAAS,GAAGd,KAAK,CAACe,WAAN,CAAkB,UAACC,IAAD,EAAOC,MAAP,EAAkB;AACpD,QACEC,OADF,GAEIL,OAFJ,CACEK,OADF;;AAIA,QAAI,CAACA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACC,OAA3D,MAAwE,KAA5E,EAAmF;AACjF,aAAOC,SAAP;AACD;;AAED,QAAMhB,KAAK,GAAGD,UAAU,GAAGD,uBAAuB,CAACC,UAAD,EAAa;AAC7DM,WAAK,EAAE,CADsD;AAE7DC,YAAM,EAAE,CAAC;AACPM,YAAI,EAAJA,IADO;AAEPC,cAAM,EAANA;AAFO,OAAD;AAFqD,KAAb,CAA1B,GAQxB;AACER,WAAK,EAAE,CADT;AAEEC,YAAM,EAAE,CAAC;AACPM,YAAI,EAAJA,IADO;AAEPC,cAAM,EAANA;AAFO,OAAD;AAFV,KARA;AAeA,QAAMI,IAAI,GAAGH,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAACpB,gBAAlD,GAAqEoB,OAAO,CAACpB,gBAAR,CAAyBM,KAAzB,EAAgCc,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACI,MAA1F,CAArE,GAAyKxB,gBAAgB,CAACM,KAAD,EAAQc,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACI,MAAlE,CAAtM;AACA,WAAOD,IAAP;AACD,GA1BiB,EA0Bf,CAACR,OAAD,EAAUV,UAAV,CA1Be,CAAlB;AA2BA,SAAOW,SAAP;AACD","names":["getPathFromState","NavigationHelpersContext","React","LinkingContext","getRootStateForNavigate","navigation","state","parent","getParent","parentState","getState","index","routes","useLinkBuilder","useContext","linking","buildLink","useCallback","name","params","options","enabled","undefined","path","config"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-navigation/native/lib/module/useLinkBuilder.js"],"sourcesContent":["import { getPathFromState, NavigationHelpersContext } from '@react-navigation/core';\nimport * as React from 'react';\nimport LinkingContext from './LinkingContext';\n\nconst getRootStateForNavigate = (navigation, state) => {\n  const parent = navigation.getParent();\n\n  if (parent) {\n    const parentState = parent.getState();\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [{ ...parentState.routes[parentState.index],\n        state: state\n      }]\n    });\n  }\n\n  return state;\n};\n/**\n * Build destination link for a navigate action.\n * Useful for showing anchor tags on the web for buttons that perform navigation.\n */\n\n\nexport default function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n  const buildLink = React.useCallback((name, params) => {\n    const {\n      options\n    } = linking;\n\n    if ((options === null || options === void 0 ? void 0 : options.enabled) === false) {\n      return undefined;\n    }\n\n    const state = navigation ? getRootStateForNavigate(navigation, {\n      index: 0,\n      routes: [{\n        name,\n        params\n      }]\n    }) : // If we couldn't find a navigation object in context, we're at root\n    // So we'll construct a basic state object to use\n    {\n      index: 0,\n      routes: [{\n        name,\n        params\n      }]\n    };\n    const path = options !== null && options !== void 0 && options.getPathFromState ? options.getPathFromState(state, options === null || options === void 0 ? void 0 : options.config) : getPathFromState(state, options === null || options === void 0 ? void 0 : options.config);\n    return path;\n  }, [linking, navigation]);\n  return buildLink;\n}\n//# sourceMappingURL=useLinkBuilder.js.map"]},"metadata":{},"sourceType":"module"}