{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DisplayAlert from \"./DisplayAlert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar displayAlert = new DisplayAlert();\n\nvar SignUpScreen = function (_Component) {\n  _inherits(SignUpScreen, _Component);\n\n  var _super = _createSuper(SignUpScreen);\n\n  function SignUpScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpScreen);\n\n    _this = _super.call(this, props);\n\n    _this.handleEmailInput = function (email) {\n      _this.setState({\n        email: email\n      });\n    };\n\n    _this.handlePasswordInput = function (password) {\n      _this.setState({\n        password: password\n      });\n    };\n\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(SignUpScreen, [{\n    key: \"emailIsValid\",\n    value: function emailIsValid() {\n      var email = this.state.email;\n      var myRe = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n\n      if (myRe.exec(email)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"signup\",\n    value: function signup() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName;\n\n      if (email === '' || password === '' || firstName === '' || lastName === '') {\n        displayAlert.displayAlert('All fields must be entered.');\n      } else if (!this.emailIsValid(email)) {\n        displayAlert.displayAlert('Invalid email.');\n      } else if (password.length <= 5) {\n        displayAlert.displayAlert('Password must be at least 6 characters');\n      } else {\n        fetch('http://localhost:3333/api/1.0.0/user', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            first_name: firstName,\n            last_name: lastName,\n            email: email,\n            password: password\n          })\n        }).then(function (response) {\n          if (response.status === 400) {\n            displayAlert.displayAlert('User already created');\n            Promise.reject(new Error(\"Bad request. Status: \" + response.status));\n          }\n\n          if (response.status === 500) {\n            displayAlert.displayAlert('Server error.');\n            Promise.reject(new Error(\"Server error. Status: \" + response.status));\n          }\n\n          displayAlert.displayAlert('User created.');\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          email = _this$state2.email,\n          password = _this$state2.password;\n      return _jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"First name...\",\n          onChangeText: function onChangeText(value) {\n            _this2.setState({\n              firstName: value\n            });\n          },\n          value: firstName\n        }), _jsx(TextInput, {\n          placeholder: \"Last name...\",\n          onChangeText: function onChangeText(value) {\n            _this2.setState({\n              lastName: value\n            });\n          },\n          value: lastName\n        }), _jsx(TextInput, {\n          placeholder: \"Email...\",\n          onChangeText: this.handleEmailInput,\n          value: email\n        }), _jsx(TextInput, {\n          placeholder: \"Password...\",\n          onChangeText: this.handlePasswordInput,\n          value: password\n        }), _jsx(Button, {\n          title: \"Sign Up\",\n          onPress: function onPress() {\n            _this2.signup();\n          }\n        })]\n      });\n    }\n  }]);\n\n  return SignUpScreen;\n}(Component);\n\nexport default SignUpScreen;","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/SignUpScreen.js"],"names":["React","Component","DisplayAlert","displayAlert","SignUpScreen","props","handleEmailInput","email","setState","handlePasswordInput","password","state","firstName","lastName","myRe","exec","emailIsValid","length","fetch","method","headers","body","JSON","stringify","first_name","last_name","then","response","status","Promise","reject","Error","catch","error","console","log","value","signup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, TextInput, View } from 'react-native';\r\n\r\nimport DisplayAlert from './DisplayAlert';\r\n\r\nconst displayAlert = new DisplayAlert();\r\n\r\nclass SignUpScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleEmailInput = (email) => {\r\n        this.setState({email});\r\n    }\r\n\r\n    handlePasswordInput = (password) => {\r\n        this.setState({password});\r\n    }\r\n\r\n    emailIsValid() {\r\n        const { email } = this.state;\r\n        const myRe = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\r\n\r\n        if (myRe.exec(email)){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    signup() {\r\n        const { email, password, firstName, lastName} = this.state;\r\n        if (email === '' || password === '' || firstName === '' || lastName === ''){\r\n            displayAlert.displayAlert('All fields must be entered.');\r\n        }\r\n        else if (!this.emailIsValid(email)){\r\n            displayAlert.displayAlert('Invalid email.');\r\n        }\r\n        else if (password.length <= 5){\r\n            displayAlert.displayAlert('Password must be at least 6 characters');\r\n        }\r\n        else {\r\n            fetch('http://localhost:3333/api/1.0.0/user', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    first_name: firstName,\r\n                    last_name: lastName,\r\n                    email,\r\n                    password\r\n                })\r\n            })\r\n            .then((response) => {\r\n                if (response.status === 400){\r\n                    displayAlert.displayAlert('User already created');\r\n                    Promise.reject(new Error(`Bad request. Status: ${  response.status}`));\r\n                }\r\n                if (response.status === 500){\r\n                    displayAlert.displayAlert('Server error.');\r\n                    Promise.reject(new Error(`Server error. Status: ${  response.status}`));\r\n                }\r\n                \r\n                    displayAlert.displayAlert('User created.');\r\n                \r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { firstName, lastName, email, password } = this.state;\r\n        return(\r\n            <View>\r\n                <TextInput placeholder='First name...' onChangeText={value => {this.setState({firstName: value})}} value={firstName}/>\r\n                <TextInput placeholder='Last name...' onChangeText={value => {this.setState({lastName: value})}} value={lastName}/>\r\n                <TextInput placeholder='Email...' onChangeText={this.handleEmailInput} value={email}/>\r\n                <TextInput placeholder='Password...' onChangeText={this.handlePasswordInput} value={password}/>\r\n                <Button title='Sign Up' onPress={() => {this.signup()}}/>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUpScreen;"]},"metadata":{},"sourceType":"module"}