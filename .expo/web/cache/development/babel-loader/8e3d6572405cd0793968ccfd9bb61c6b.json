{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"tintColor\", \"style\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport default function HeaderTitle(_ref) {\n  var tintColor = _ref.tintColor,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return React.createElement(Animated.Text, _extends({\n    accessibilityRole: \"header\",\n    \"aria-level\": \"1\",\n    numberOfLines: 1\n  }, rest, {\n    style: [styles.title, {\n      color: tintColor === undefined ? colors.text : tintColor\n    }, style]\n  }));\n}\nvar styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600'\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500'\n    }\n  })\n});","map":{"version":3,"mappings":";;;AAAA,SAASA,QAAT,GAAoB;AAAEA,UAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,gBAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,QAAT,QAAyB,0BAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;;AAEA,eAAe,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACxC,MACEC,SADF,GAIID,IAJJ,CACEC,SADF;AAAA,MAEEC,KAFF,GAIIF,IAJJ,CAEEE,KAFF;AAAA,MAGKC,IAHL,4BAIIH,IAJJ;;AAKA,kBAEIH,QAAQ,EAFZ;AAAA,MACEO,MADF,aACEA,MADF;;AAGA,SAAoBN,KAAK,CAACO,aAAN,CAAoBC,QAAQ,CAACC,IAA7B,EAAmCvB,QAAQ,CAAC;AAC9DwB,qBAAiB,EAAE,QAD2C;AAE9D,kBAAc,GAFgD;AAG9DC,iBAAa,EAAE;AAH+C,GAAD,EAI5DN,IAJ4D,EAItD;AACPD,SAAK,EAAE,CAACQ,MAAM,CAACC,KAAR,EAAe;AACpBC,WAAK,EAAEX,SAAS,KAAKY,SAAd,GAA0BT,MAAM,CAACU,IAAjC,GAAwCb;AAD3B,KAAf,EAEJC,KAFI;AADA,GAJsD,CAA3C,CAApB;AASD;AACD,IAAMQ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,OAAK,EAAEM,QAAQ,CAACC,MAAT,CAAgB;AACrBC,OAAG,EAAE;AACHC,cAAQ,EAAE,EADP;AAEHC,gBAAU,EAAE;AAFT,KADgB;AAKrBC,WAAO,EAAE;AACPF,cAAQ,EAAE,EADH;AAEPG,gBAAU,EAAE,mBAFL;AAGPF,gBAAU,EAAE;AAHL,KALY;AAUrBG,WAAO,EAAE;AACPJ,cAAQ,EAAE,EADH;AAEPC,gBAAU,EAAE;AAFL;AAVY,GAAhB;AADwB,CAAlB,CAAf","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useTheme","React","HeaderTitle","_ref","tintColor","style","rest","colors","createElement","Animated","Text","accessibilityRole","numberOfLines","styles","title","color","undefined","text","StyleSheet","create","Platform","select","ios","fontSize","fontWeight","android","fontFamily","default"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-navigation/elements/lib/module/Header/HeaderTitle.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, Platform, StyleSheet } from 'react-native';\nexport default function HeaderTitle(_ref) {\n  let {\n    tintColor,\n    style,\n    ...rest\n  } = _ref;\n  const {\n    colors\n  } = useTheme();\n  return /*#__PURE__*/React.createElement(Animated.Text, _extends({\n    accessibilityRole: \"header\",\n    \"aria-level\": \"1\",\n    numberOfLines: 1\n  }, rest, {\n    style: [styles.title, {\n      color: tintColor === undefined ? colors.text : tintColor\n    }, style]\n  }));\n}\nconst styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600'\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500'\n    }\n  })\n});\n//# sourceMappingURL=HeaderTitle.js.map"]},"metadata":{},"sourceType":"module"}