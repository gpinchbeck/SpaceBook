{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport DisplayAlert from \"./DisplayAlert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar getData = function getData(done) {\n  var jsonValue, data;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@spacebook_details'));\n\n        case 3:\n          jsonValue = _context.sent;\n          data = JSON.parse(jsonValue);\n          return _context.abrupt(\"return\", done(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar displayAlert = new DisplayAlert();\n\nvar SettingsScreen = function (_Component) {\n  _inherits(SettingsScreen, _Component);\n\n  var _super = _createSuper(SettingsScreen);\n\n  function SettingsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SettingsScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: {},\n      userData: {},\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(SettingsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getData(function (data) {\n        _this2.setState({\n          data: data\n        });\n\n        _this2.getUserData();\n      });\n    }\n  }, {\n    key: \"getUserData\",\n    value: function getUserData() {\n      var response, result;\n      return _regeneratorRuntime.async(function getUserData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3333/api/1.0.0/user/' + this.state.data.id, {\n                method: 'get',\n                headers: {\n                  'X-Authorization': this.state.data.token\n                }\n              }));\n\n            case 2:\n              response = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              result = _context2.sent;\n              this.setState({\n                userData: result\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"updateDetails\",\n    value: function updateDetails() {\n      console.log(this.state.data.id, this.state.data.token);\n      var to_send = {};\n\n      if (this.state.userData.first_name != this.state.first_name) {\n        to_send['first_name'] = this.state.first_name;\n      }\n\n      if (this.state.userData.last_name != this.state.last_name) {\n        to_send['last_name'] = this.state.last_name;\n      }\n\n      if (this.state.orig_email != this.state.email) {\n        to_send['email'] = this.state.email;\n      }\n\n      to_send['password'] = this.state.password;\n      fetch('http://localhost:3333/api/1.0.0/user/' + this.state.data.id, {\n        method: 'patch',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Authorization': this.state.data.token\n        },\n        body: JSON.stringify(to_send)\n      }).then(function (response) {\n        if (response.status == 200) {\n          displayAlert.displayAlert('Details updated');\n        } else {\n          displayAlert.displayAlert(response.statusText);\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"updatePhoto\",\n    value: function updatePhoto() {\n      console.log('Update photo');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsxs(View, {\n        children: [_jsxs(View, {\n          children: [_jsx(TextInput, {\n            placeholder: \"Change first name\",\n            onChangeText: function onChangeText(first_name) {\n              return _this3.setState({\n                first_name: first_name\n              });\n            },\n            value: this.state.first_name\n          }), _jsx(TextInput, {\n            placeholder: \"Change last name\",\n            onChangeText: function onChangeText(last_name) {\n              return _this3.setState({\n                last_name: last_name\n              });\n            },\n            value: this.state.last_name\n          }), _jsx(TextInput, {\n            placeholder: \"Change email\",\n            onChangeText: function onChangeText(email) {\n              return _this3.setState({\n                email: email\n              });\n            },\n            value: this.state.email\n          }), _jsx(TextInput, {\n            placeholder: \"Change password\",\n            onChangeText: function onChangeText(password) {\n              return _this3.setState({\n                password: password\n              });\n            },\n            value: this.state.password\n          }), _jsx(Button, {\n            title: \"Update details\",\n            onPress: function onPress() {\n              return _this3.updateDetails();\n            }\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Button, {\n            title: \"Update picture\",\n            onPress: function onPress() {\n              return _this3.updatePhoto();\n            }\n          }), _jsx(Text, {\n            children: this.state.data.token\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return SettingsScreen;\n}(Component);\n\nexport default SettingsScreen;","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/SettingsScreen.js"],"names":["React","Component","AsyncStorage","DisplayAlert","getData","done","getItem","jsonValue","data","JSON","parse","console","log","displayAlert","SettingsScreen","props","state","userData","first_name","last_name","email","password","setState","getUserData","fetch","id","method","headers","token","response","json","result","to_send","orig_email","body","stringify","then","status","statusText","catch","error","updateDetails","updatePhoto"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,YAAP;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEgBH,YAAY,CAACI,OAAb,CAAqB,oBAArB,CAFhB;;AAAA;AAEFC,UAAAA,SAFE;AAGFC,UAAAA,IAHE,GAGKC,IAAI,CAACC,KAAL,CAAWH,SAAX,CAHL;AAAA,2CAIDF,IAAI,CAACG,IAAD,CAJH;;AAAA;AAAA;AAAA;AAMRG,UAAAA,OAAO,CAACC,GAAR;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAUA,IAAMC,YAAY,GAAG,IAAIV,YAAJ,EAArB;;IAEMW,c;;;;;AACF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTR,MAAAA,IAAI,EAAE,EADG;AAETS,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,UAAU,EAAE,EAHH;AAITC,MAAAA,SAAS,EAAE,EAJF;AAKTC,MAAAA,KAAK,EAAE,EALE;AAMTC,MAAAA,QAAQ,EAAE;AAND,KAAb;AAHe;AAWlB;;;;WAED,6BAAmB;AAAA;;AACfjB,MAAAA,OAAO,CAAC,UAACI,IAAD,EAAU;AACd,QAAA,MAAI,CAACc,QAAL,CAAc;AACVd,UAAAA,IAAI,EAAEA;AADI,SAAd;;AAGA,QAAA,MAAI,CAACe,WAAL;AACH,OALM,CAAP;AAMH;;;WAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACyBC,KAAK,CACtB,0CAA0C,KAAKR,KAAL,CAAWR,IAAX,CAAgBiB,EADpC,EAEtB;AACIC,gBAAAA,MAAM,EAAE,KADZ;AAEIC,gBAAAA,OAAO,EAAE;AACL,qCAAmB,KAAKX,KAAL,CAAWR,IAAX,CAAgBoB;AAD9B;AAFb,eAFsB,CAD9B;;AAAA;AACQC,cAAAA,QADR;AAAA;AAAA,+CAUuBA,QAAQ,CAACC,IAAT,EAVvB;;AAAA;AAUQC,cAAAA,MAVR;AAWI,mBAAKT,QAAL,CAAc;AACVL,gBAAAA,QAAQ,EAAEc;AADA,eAAd;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAgBA,yBAAe;AACXpB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWR,IAAX,CAAgBiB,EAA5B,EAAgC,KAAKT,KAAL,CAAWR,IAAX,CAAgBoB,KAAhD;AACA,UAAII,OAAO,GAAG,EAAd;;AAEA,UAAI,KAAKhB,KAAL,CAAWC,QAAX,CAAoBC,UAApB,IAAkC,KAAKF,KAAL,CAAWE,UAAjD,EAA4D;AACxDc,QAAAA,OAAO,CAAC,YAAD,CAAP,GAAwB,KAAKhB,KAAL,CAAWE,UAAnC;AACH;;AACD,UAAI,KAAKF,KAAL,CAAWC,QAAX,CAAoBE,SAApB,IAAiC,KAAKH,KAAL,CAAWG,SAAhD,EAA0D;AACtDa,QAAAA,OAAO,CAAC,WAAD,CAAP,GAAuB,KAAKhB,KAAL,CAAWG,SAAlC;AACH;;AACD,UAAI,KAAKH,KAAL,CAAWiB,UAAX,IAAyB,KAAKjB,KAAL,CAAWI,KAAxC,EAA8C;AAC1CY,QAAAA,OAAO,CAAC,OAAD,CAAP,GAAmB,KAAKhB,KAAL,CAAWI,KAA9B;AACH;;AACDY,MAAAA,OAAO,CAAC,UAAD,CAAP,GAAsB,KAAKhB,KAAL,CAAWK,QAAjC;AACAG,MAAAA,KAAK,CAAC,0CAA0C,KAAKR,KAAL,CAAWR,IAAX,CAAgBiB,EAA3D,EAA+D;AAChEC,QAAAA,MAAM,EAAE,OADwD;AAEhEC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,6BAAmB,KAAKX,KAAL,CAAWR,IAAX,CAAgBoB;AAF9B,SAFuD;AAMhEM,QAAAA,IAAI,EAAEzB,IAAI,CAAC0B,SAAL,CAAeH,OAAf;AAN0D,OAA/D,CAAL,CAQCI,IARD,CAQM,UAACP,QAAD,EAAc;AAChB,YAAIA,QAAQ,CAACQ,MAAT,IAAmB,GAAvB,EAA2B;AACvBxB,UAAAA,YAAY,CAACA,YAAb,CAA0B,iBAA1B;AACH,SAFD,MAGK;AACDA,UAAAA,YAAY,CAACA,YAAb,CAA0BgB,QAAQ,CAACS,UAAnC;AACH;AACJ,OAfD,EAgBCC,KAhBD,CAgBO,UAACC,KAAD,EAAW;AACd7B,QAAAA,OAAO,CAACC,GAAR,CAAY4B,KAAZ;AACH,OAlBD;AAmBH;;;WAED,uBAAa;AACT7B,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;;;WAED,kBAAS;AAAA;;AACL,aACI,MAAC,IAAD;AAAA,mBACI,MAAC,IAAD;AAAA,qBACI,KAAC,SAAD;AAAW,YAAA,WAAW,EAAC,mBAAvB;AAA2C,YAAA,YAAY,EAAE,sBAACM,UAAD;AAAA,qBAAgB,MAAI,CAACI,QAAL,CAAc;AAACJ,gBAAAA,UAAU,EAAVA;AAAD,eAAd,CAAhB;AAAA,aAAzD;AAAsG,YAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAAxH,YADJ,EAEI,KAAC,SAAD;AAAW,YAAA,WAAW,EAAC,kBAAvB;AAA0C,YAAA,YAAY,EAAE,sBAACC,SAAD;AAAA,qBAAe,MAAI,CAACG,QAAL,CAAc;AAACH,gBAAAA,SAAS,EAATA;AAAD,eAAd,CAAf;AAAA,aAAxD;AAAmG,YAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAArH,YAFJ,EAGI,KAAC,SAAD;AAAW,YAAA,WAAW,EAAC,cAAvB;AAAsC,YAAA,YAAY,EAAE,sBAACC,KAAD;AAAA,qBAAW,MAAI,CAACE,QAAL,CAAc;AAACF,gBAAAA,KAAK,EAALA;AAAD,eAAd,CAAX;AAAA,aAApD;AAAuF,YAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI;AAAzG,YAHJ,EAII,KAAC,SAAD;AAAW,YAAA,WAAW,EAAC,iBAAvB;AAAyC,YAAA,YAAY,EAAE,sBAACC,QAAD;AAAA,qBAAc,MAAI,CAACC,QAAL,CAAc;AAACD,gBAAAA,QAAQ,EAARA;AAAD,eAAd,CAAd;AAAA,aAAvD;AAAgG,YAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK;AAAlH,YAJJ,EAKI,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,gBAAd;AAA+B,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACoB,aAAL,EAAN;AAAA;AAAxC,YALJ;AAAA,UADJ,EAQI,MAAC,IAAD;AAAA,qBACI,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,gBAAd;AAA+B,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACC,WAAL,EAAN;AAAA;AAAxC,YADJ,EAEI,KAAC,IAAD;AAAA,sBAAO,KAAK1B,KAAL,CAAWR,IAAX,CAAgBoB;AAAvB,YAFJ;AAAA,UARJ;AAAA,QADJ;AAeH;;;;EA9FwB3B,S;;AAiG7B,eAAea,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, TextInput, Button } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport DisplayAlert from './DisplayAlert';\r\n\r\nconst getData = async (done) => {\r\n    try {\r\n        const jsonValue = await AsyncStorage.getItem('@spacebook_details');\r\n        const data = JSON.parse(jsonValue);\r\n        return done(data);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nconst displayAlert = new DisplayAlert();\r\n\r\nclass SettingsScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: {},\r\n            userData: {},\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        getData((data) => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n            this.getUserData();\r\n        });\r\n    }\r\n\r\n    async getUserData() {\r\n        let response = await fetch(\r\n            'http://localhost:3333/api/1.0.0/user/' + this.state.data.id,\r\n            {\r\n                method: 'get',\r\n                headers: {\r\n                    'X-Authorization': this.state.data.token,\r\n                },\r\n            }\r\n        );\r\n        let result = await response.json();\r\n        this.setState({\r\n            userData: result,\r\n        });\r\n    }\r\n\r\n    updateDetails(){\r\n        console.log(this.state.data.id, this.state.data.token);\r\n        let to_send = {};\r\n\r\n        if (this.state.userData.first_name != this.state.first_name){\r\n            to_send['first_name'] = this.state.first_name;\r\n        }\r\n        if (this.state.userData.last_name != this.state.last_name){\r\n            to_send['last_name'] = this.state.last_name;\r\n        }\r\n        if (this.state.orig_email != this.state.email){\r\n            to_send['email'] = this.state.email;\r\n        }\r\n        to_send['password'] = this.state.password;\r\n        fetch('http://localhost:3333/api/1.0.0/user/' + this.state.data.id, {\r\n            method: 'patch',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-Authorization': this.state.data.token\r\n            },\r\n            body: JSON.stringify(to_send)\r\n        })\r\n        .then((response) => {\r\n            if (response.status == 200){\r\n                displayAlert.displayAlert('Details updated');\r\n            }\r\n            else {\r\n                displayAlert.displayAlert(response.statusText);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    updatePhoto(){\r\n        console.log('Update photo');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <View>\r\n                <View>\r\n                    <TextInput placeholder='Change first name' onChangeText={(first_name) => this.setState({first_name})} value={this.state.first_name}/>\r\n                    <TextInput placeholder='Change last name' onChangeText={(last_name) => this.setState({last_name})} value={this.state.last_name}/>\r\n                    <TextInput placeholder='Change email' onChangeText={(email) => this.setState({email})} value={this.state.email}/>\r\n                    <TextInput placeholder='Change password' onChangeText={(password) => this.setState({password})} value={this.state.password}/>\r\n                    <Button title='Update details' onPress={() => this.updateDetails()}/>\r\n                </View>\r\n                <View>\r\n                    <Button title='Update picture' onPress={() => this.updatePhoto()}/>\r\n                    <Text>{this.state.data.token}</Text>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SettingsScreen;"]},"metadata":{},"sourceType":"module"}