{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar FindFreindsScreen = function (_Component) {\n  _inherits(FindFreindsScreen, _Component);\n\n  var _super = _createSuper(FindFreindsScreen);\n\n  function FindFreindsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, FindFreindsScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      searchText: '',\n      data: {},\n      users: []\n    };\n    return _this;\n  }\n\n  _createClass(FindFreindsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUsers();\n    }\n  }, {\n    key: \"getUsers\",\n    value: function getUsers() {\n      var _this$state = this.state,\n          searchText = _this$state.searchText,\n          data = _this$state.data;\n      var url = \"\";\n\n      if (searchText !== '') {\n        url = url + \"?q=\" + searchText;\n      }\n\n      fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'applicatino/json',\n          'X-Authorization': data.token\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var users = this.state.users;\n      return _jsx(View, {\n        children: _jsx(View, {\n          children: _jsx(FlatList, {\n            extraData: users,\n            data: users,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsxs(View, {\n                children: [_jsxs(Text, {\n                  children: [item.first_name, \" \", item.last_name]\n                }), _jsx(Button, {\n                  title: \"Add\",\n                  onPress: function onPress() {\n                    return console.log('add');\n                  }\n                })]\n              });\n            },\n            keyExtractor: function keyExtractor(item) {\n              return item.user_id;\n            }\n          })\n        })\n      });\n    }\n  }]);\n\n  return FindFreindsScreen;\n}(Component);\n\nexport default FindFreindsScreen;","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/FindFriendsScreen.js"],"names":["React","Component","FindFreindsScreen","props","state","searchText","data","users","getUsers","url","fetch","method","headers","token","then","response","json","responseJson","console","log","item","first_name","last_name","user_id"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;IAGMC,iB;;;;;AACF,6BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAHc;AAQjB;;;;WAED,6BAAmB;AACf,WAAKC,QAAL;AACH;;;WAED,oBAAU;AACN,wBAA6B,KAAKJ,KAAlC;AAAA,UAAQC,UAAR,eAAQA,UAAR;AAAA,UAAoBC,IAApB,eAAoBA,IAApB;AACA,UAAIG,GAAG,KAAP;;AACA,UAAIJ,UAAU,KAAK,EAAnB,EAAsB;AAClBI,QAAAA,GAAG,GAAOA,GAAP,WAAkBJ,UAArB;AACH;;AACDK,MAAAA,KAAK,CAACD,GAAD,EAAK;AACNE,QAAAA,MAAM,EAAE,KADF;AAENC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,6BAAmBN,IAAI,CAACO;AAFnB;AAFH,OAAL,CAAL,CAOCC,IAPD,CAOM,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OAPN,EAQCF,IARD,CAQM,UAACG,YAAD,EAAkB;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACH,OAVD;AAWH;;;WAED,kBAAQ;AACJ,UAAQV,KAAR,GAAkB,KAAKH,KAAvB,CAAQG,KAAR;AACA,aACI,KAAC,IAAD;AAAA,kBACI,KAAC,IAAD;AAAA,oBACI,KAAC,QAAD;AAAU,YAAA,SAAS,EAAEA,KAArB;AAA4B,YAAA,IAAI,EAAEA,KAAlC;AACI,YAAA,UAAU,EAAE;AAAA,kBAAEa,IAAF,QAAEA,IAAF;AAAA,qBACR,MAAC,IAAD;AAAA,2BACI,MAAC,IAAD;AAAA,6BAAOA,IAAI,CAACC,UAAZ,OAAyBD,IAAI,CAACE,SAA9B;AAAA,kBADJ,EAEI,KAAC,MAAD;AAAQ,kBAAA,KAAK,EAAC,KAAd;AAAoB,kBAAA,OAAO,EAAE;AAAA,2BAAMJ,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAAA;AAA7B,kBAFJ;AAAA,gBADQ;AAAA,aADhB;AAOI,YAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,qBAAUA,IAAI,CAACG,OAAf;AAAA;AAPlB;AADJ;AADJ,QADJ;AAeH;;;;EAnD2BtB,S;;AAsDhC,eAAeC,iBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, FlatList, Button } from 'react-native';\r\n\r\nclass FindFreindsScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchText: '',\r\n            data: {},\r\n            users: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getUsers();\r\n    }\r\n\r\n    getUsers(){\r\n        const { searchText, data } = this.state;\r\n        let url = ``\r\n        if (searchText !== ''){\r\n            url = `${ url }?q=${ searchText }`;\r\n        }\r\n        fetch(url,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'applicatino/json',\r\n                'X-Authorization': data.token\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            console.log(responseJson);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { users } = this.state;\r\n        return(\r\n            <View>\r\n                <View>\r\n                    <FlatList extraData={users} data={users}\r\n                        renderItem={({item}) => (\r\n                            <View>\r\n                                <Text>{item.first_name} {item.last_name}</Text>\r\n                                <Button title='Add' onPress={() => console.log('add')}/>\r\n                            </View>\r\n                        )}\r\n                        keyExtractor={(item) => item.user_id}\r\n                    />\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FindFreindsScreen;"]},"metadata":{},"sourceType":"module"}