{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Platform from \"../Platform\";\nimport { CodedError } from \"./CodedError\";\nexport var UnavailabilityError = function (_CodedError) {\n  _inherits(UnavailabilityError, _CodedError);\n\n  var _super = _createSuper(UnavailabilityError);\n\n  function UnavailabilityError(moduleName, propertyName) {\n    _classCallCheck(this, UnavailabilityError);\n\n    return _super.call(this, 'ERR_UNAVAILABLE', \"The method or property \" + moduleName + \".\" + propertyName + \" is not available on \" + Platform.OS + \", are you sure you've linked all the native dependencies properly?\");\n  }\n\n  return _createClass(UnavailabilityError);\n}(CodedError);","map":{"version":3,"mappings":";;;;;;;;;;AAAA,OAAOA,QAAP;AACA,SAASC,UAAT;AAMA,WAAaC,mBAAb;AAAA;;AAAA;;AACI,+BAAYC,UAAZ,EAAwBC,YAAxB,EAAsC;AAAA;;AAAA,6BAC5B,iBAD4B,8BACiBD,UADjB,SAC+BC,YAD/B,6BACmEJ,QAAQ,CAACK,EAD5E;AAErC;;AAHL;AAAA,EAAyCJ,UAAzC","names":["Platform","CodedError","UnavailabilityError","moduleName","propertyName","OS"],"sourceRoot":"","sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/expo-modules-core/build/errors/UnavailabilityError.js"],"sourcesContent":["import Platform from '../Platform';\nimport { CodedError } from './CodedError';\n/**\n * A class for errors to be thrown when a property is accessed which is\n * unavailable, unsupported, or not currently implemented on the running\n * platform.\n */\nexport class UnavailabilityError extends CodedError {\n    constructor(moduleName, propertyName) {\n        super('ERR_UNAVAILABLE', `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`);\n    }\n}\n//# sourceMappingURL=UnavailabilityError.js.map"]},"metadata":{},"sourceType":"module"}