{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTypeahead = useTypeahead;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _reducer = require(\"./reducer\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar stateChangeTypes = _interopRequireWildcard(require(\"./types\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _utils = require(\"./utils\");\n\nfunction isControlledProp(props, key) {\n  return props[key] !== undefined;\n}\n\nfunction useTypeahead(props) {\n  var defaultValues = (0, _extends2.default)({}, _utils.dropdownDefaultStateValues);\n  defaultValues.isOpen = (0, _utils.getDefaultValue)(props, 'isOpen');\n\n  var _React$useReducer = _react.default.useReducer(_reducer.useTypeaheadReducer, defaultValues),\n      _React$useReducer2 = (0, _slicedToArray2.default)(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var dispatchWithProps = function dispatchWithProps(object) {\n    dispatch((0, _extends2.default)({}, object, {\n      props: props\n    }));\n  };\n\n  var inputValue = state.inputValue,\n      isOpen = state.isOpen;\n  var items = props.items,\n      onInputValueChange = props.onInputValueChange,\n      onSelectedItemChange = props.onSelectedItemChange,\n      selectedItem = props.selectedItem,\n      itemToString = props.itemToString;\n  var isControlled = isControlledProp(props, 'selectedItem');\n  (0, _react.useEffect)(function () {\n    if (isControlled) {\n      dispatch({\n        type: stateChangeTypes.ControlledPropUpdatedSelectedItem,\n        inputValue: itemToString(selectedItem)\n      });\n    }\n  }, [selectedItem, isControlled, itemToString]);\n\n  var onChangeText = function onChangeText(text) {\n    onInputValueChange == null ? void 0 : onInputValueChange({\n      inputValue: text\n    });\n    dispatchWithProps({\n      type: stateChangeTypes.InputChange,\n      inputValue: text\n    });\n  };\n\n  var handleItemSelect = function handleItemSelect(item, index) {\n    onSelectedItemChange == null ? void 0 : onSelectedItemChange(item);\n    dispatchWithProps({\n      type: stateChangeTypes.ItemClick,\n      index: index\n    });\n\n    _reactNative.Keyboard.dismiss();\n  };\n\n  var getMenuItemProps = function getMenuItemProps(item, index) {\n    return {\n      onPress: function onPress() {\n        return handleItemSelect(item, index);\n      },\n      accessible: true,\n      accessiblityRole: 'menuitem'\n    };\n  };\n\n  var getMenuProps = function getMenuProps() {\n    return {\n      accessible: true,\n      accessibilityRole: 'menu',\n      accessibilityHint: \"Showing \" + items.length + \" records\"\n    };\n  };\n\n  var getToggleButtonProps = function getToggleButtonProps() {\n    return {\n      onPress: function onPress() {\n        dispatchWithProps({\n          type: stateChangeTypes.ToggleButtonClick\n        });\n      }\n    };\n  };\n\n  var getInputProps = function getInputProps(propInputVal, propOnchangeText) {\n    return {\n      onChangeText: propInputVal ? propOnchangeText : onChangeText,\n      value: propInputVal ? propInputVal : inputValue,\n      accessibilityRole: 'combobox',\n      accessibilityLabel: 'Typeahead input',\n      accessibilityState: {\n        expanded: isOpen\n      }\n    };\n  };\n\n  return {\n    getInputProps: getInputProps,\n    getMenuItemProps: getMenuItemProps,\n    getMenuProps: getMenuProps,\n    getToggleButtonProps: getToggleButtonProps,\n    isOpen: isOpen\n  };\n}","map":{"version":3,"mappings":"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","names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","useTypeahead","_slicedToArray2","_extends2","_reducer","_react","stateChangeTypes","_utils","isControlledProp","props","key","undefined","defaultValues","default","dropdownDefaultStateValues","isOpen","getDefaultValue","_React$useReducer","useReducer","useTypeaheadReducer","_React$useReducer2","state","dispatch","dispatchWithProps","object","inputValue","items","onInputValueChange","onSelectedItemChange","selectedItem","itemToString","isControlled","useEffect","type","ControlledPropUpdatedSelectedItem","onChangeText","text","InputChange","handleItemSelect","item","index","ItemClick","_reactNative","Keyboard","dismiss","getMenuItemProps","onPress","accessible","accessiblityRole","getMenuProps","accessibilityRole","accessibilityHint","length","getToggleButtonProps","ToggleButtonClick","getInputProps","propInputVal","propOnchangeText","accessibilityLabel","accessibilityState","expanded"],"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/native-base/lib/commonjs/components/composites/Typeahead/useTypeahead/useTypeahead.js"],"sourcesContent":["var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useTypeahead=useTypeahead;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _reducer=require(\"./reducer\");var _react=_interopRequireWildcard(require(\"react\"));var stateChangeTypes=_interopRequireWildcard(require(\"./types\"));var _reactNative=require(\"react-native\");var _utils=require(\"./utils\");function isControlledProp(props,key){return props[key]!==undefined;}function useTypeahead(props){var defaultValues=(0,_extends2.default)({},_utils.dropdownDefaultStateValues);defaultValues.isOpen=(0,_utils.getDefaultValue)(props,'isOpen');var _React$useReducer=_react.default.useReducer(_reducer.useTypeaheadReducer,defaultValues),_React$useReducer2=(0,_slicedToArray2.default)(_React$useReducer,2),state=_React$useReducer2[0],dispatch=_React$useReducer2[1];var dispatchWithProps=function dispatchWithProps(object){dispatch((0,_extends2.default)({},object,{props:props}));};var inputValue=state.inputValue,isOpen=state.isOpen;var items=props.items,onInputValueChange=props.onInputValueChange,onSelectedItemChange=props.onSelectedItemChange,selectedItem=props.selectedItem,itemToString=props.itemToString;var isControlled=isControlledProp(props,'selectedItem');(0,_react.useEffect)(function(){if(isControlled){dispatch({type:stateChangeTypes.ControlledPropUpdatedSelectedItem,inputValue:itemToString(selectedItem)});}},[selectedItem,isControlled,itemToString]);var onChangeText=function onChangeText(text){onInputValueChange==null?void 0:onInputValueChange({inputValue:text});dispatchWithProps({type:stateChangeTypes.InputChange,inputValue:text});};var handleItemSelect=function handleItemSelect(item,index){onSelectedItemChange==null?void 0:onSelectedItemChange(item);dispatchWithProps({type:stateChangeTypes.ItemClick,index:index});_reactNative.Keyboard.dismiss();};var getMenuItemProps=function getMenuItemProps(item,index){return{onPress:function onPress(){return handleItemSelect(item,index);},accessible:true,accessiblityRole:'menuitem'};};var getMenuProps=function getMenuProps(){return{accessible:true,accessibilityRole:'menu',accessibilityHint:\"Showing \"+items.length+\" records\"};};var getToggleButtonProps=function getToggleButtonProps(){return{onPress:function onPress(){dispatchWithProps({type:stateChangeTypes.ToggleButtonClick});}};};var getInputProps=function getInputProps(propInputVal,propOnchangeText){return{onChangeText:propInputVal?propOnchangeText:onChangeText,value:propInputVal?propInputVal:inputValue,accessibilityRole:'combobox',accessibilityLabel:'Typeahead input',accessibilityState:{expanded:isOpen}};};return{getInputProps:getInputProps,getMenuItemProps:getMenuItemProps,getMenuProps:getMenuProps,getToggleButtonProps:getToggleButtonProps,isOpen:isOpen};}\n//# sourceMappingURL=useTypeahead.js.map"]},"metadata":{},"sourceType":"script"}