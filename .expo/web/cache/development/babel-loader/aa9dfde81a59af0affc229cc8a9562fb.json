{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar storeData = function storeData(value) {\n  var jsonValue;\n  return _regeneratorRuntime.async(function storeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          jsonValue = JSON.stringify(value);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('@spacebook_details', jsonValue));\n\n        case 4:\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.handleEmailInput = function (email) {\n      _this.setState({\n        email: email\n      });\n    };\n\n    _this.handlePasswordInput = function (password) {\n      _this.setState({\n        password: password\n      });\n    };\n\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"displayAlert\",\n    value: function displayAlert(msg) {\n      if (Platform.OS == 'web') {\n        alert(msg);\n      } else {\n        Alert.alert(msg);\n      }\n    }\n  }, {\n    key: \"emailIsValid\",\n    value: function emailIsValid(email) {\n      var myRe = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n\n      if (myRe.exec(email)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"login\",\n    value: function login(nav) {\n      var _this2 = this;\n\n      if (this.state.email == '' || this.state.password == '') {\n        this.displayAlert('All fields must be entered.');\n      } else if (!this.emailIsValid(this.state.email)) {\n        this.displayAlert('Invalid email.');\n      } else {\n        fetch('http://localhost:3333/api/1.0.0/login', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.state.email,\n            password: this.state.password\n          })\n        }).then(function (response) {\n          if (response.status == 400) {\n            _this2.displayAlert('Incorrect email or password.');\n\n            return Promise.reject('Incorrect email or password.' + response.status);\n          }\n\n          if (response.status == 500) {\n            _this2.displayAlert('Server error.');\n\n            return Promise.reject('Server error.' + response.status);\n          }\n\n          return response.json();\n        }).then(function (json) {\n          if (json == {}) {\n            console.log(\"hm\");\n          }\n\n          _this2.displayAlert('Logged in.');\n\n          storeData(json);\n          nav.navigate('Home');\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var nav = this.props.navigation;\n      return _jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"Enter email...\",\n          onChangeText: this.handleEmailInput,\n          value: this.state.email\n        }), _jsx(TextInput, {\n          placeholder: \"Enter password...\",\n          onChangeText: this.handlePasswordInput,\n          value: this.state.password\n        }), _jsx(Button, {\n          title: \"Login\",\n          onPress: function onPress() {\n            return _this3.login(nav);\n          }\n        }), _jsx(Button, {\n          title: \"Sign Up\",\n          onPress: function onPress() {\n            return nav.navigate(\"SignUp\");\n          }\n        })]\n      });\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/LoginScreen.js"],"names":["React","Component","AsyncStorage","storeData","value","jsonValue","JSON","stringify","setItem","console","error","LoginScreen","props","handleEmailInput","email","setState","handlePasswordInput","password","state","msg","Platform","OS","alert","Alert","myRe","exec","nav","displayAlert","emailIsValid","fetch","method","headers","body","then","response","status","Promise","reject","json","log","navigate","catch","navigation","login"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, Button, Platform, TextInput, View } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst storeData = async (value) => {\r\n    try {\r\n        const jsonValue = JSON.stringify(value);\r\n        await AsyncStorage.setItem('@spacebook_details', jsonValue);\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nclass LoginScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleEmailInput = (email) => {\r\n        this.setState({email: email});\r\n    }\r\n\r\n    handlePasswordInput = (password) => {\r\n        this.setState({password: password});\r\n    }\r\n\r\n    displayAlert(msg) {\r\n        if (Platform.OS == 'web'){\r\n            alert(msg);\r\n        }\r\n        else{\r\n            Alert.alert(msg);\r\n        }\r\n    }\r\n\r\n    emailIsValid(email) {\r\n        const myRe = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\r\n\r\n        if (myRe.exec(email)){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    login(nav) {\r\n\r\n        if (this.state.email == '' || this.state.password == ''){\r\n            this.displayAlert('All fields must be entered.');\r\n        }\r\n        else if (!this.emailIsValid(this.state.email)){\r\n            this.displayAlert('Invalid email.');\r\n        }\r\n        else {\r\n            fetch('http://localhost:3333/api/1.0.0/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then((response) => {\r\n                if (response.status == 400){\r\n                    this.displayAlert('Incorrect email or password.');\r\n                    return Promise.reject('Incorrect email or password.' + response.status);\r\n                }\r\n                if (response.status == 500){\r\n                    this.displayAlert('Server error.');\r\n                    return Promise.reject('Server error.' + response.status);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((json) => {\r\n                if (json == {}){\r\n                    console.log(\"hm\");\r\n                }\r\n                this.displayAlert('Logged in.');\r\n                storeData(json);\r\n                nav.navigate('Home');\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const nav = this.props.navigation;\r\n        return(\r\n            <View>\r\n                <TextInput placeholder='Enter email...' onChangeText={this.handleEmailInput} value={this.state.email}/>\r\n                <TextInput placeholder='Enter password...' onChangeText={this.handlePasswordInput} value={this.state.password}/>\r\n                <Button title='Login' onPress={() => this.login(nav)}/>\r\n                <Button title='Sign Up' onPress={() => nav.navigate(\"SignUp\")}/>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}