{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { filterDOMProps as $aywJT$filterDOMProps, mergeProps as $aywJT$mergeProps } from \"@react-aria/utils\";\nimport { useField as $aywJT$useField } from \"@react-aria/label\";\nimport { useFocusable as $aywJT$useFocusable } from \"@react-aria/focus\";\nimport { useRef as $aywJT$useRef, useEffect as $aywJT$useEffect } from \"react\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $13fe50aacf882d03$exports = {};\n$parcel$export($13fe50aacf882d03$exports, \"useTextField\", function () {\n  return $13fe50aacf882d03$export$712718f7aec83d5;\n});\n\nfunction $13fe50aacf882d03$export$712718f7aec83d5(props, ref) {\n  var _props$inputElementTy = props.inputElementType,\n      inputElementType = _props$inputElementTy === void 0 ? 'input' : _props$inputElementTy,\n      _props$isDisabled = props.isDisabled,\n      isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n      _props$isRequired = props.isRequired,\n      isRequired = _props$isRequired === void 0 ? false : _props$isRequired,\n      _props$isReadOnly = props.isReadOnly,\n      isReadOnly = _props$isReadOnly === void 0 ? false : _props$isReadOnly,\n      validationState = props.validationState,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'text' : _props$type,\n      _props$onChange = props.onChange,\n      _onChange = _props$onChange === void 0 ? function () {} : _props$onChange;\n\n  var _$aywJT$useFocusable = $aywJT$useFocusable(props, ref),\n      focusableProps = _$aywJT$useFocusable.focusableProps;\n\n  var _$aywJT$useField = $aywJT$useField(props),\n      labelProps = _$aywJT$useField.labelProps,\n      fieldProps = _$aywJT$useField.fieldProps,\n      descriptionProps = _$aywJT$useField.descriptionProps,\n      errorMessageProps = _$aywJT$useField.errorMessageProps;\n\n  var domProps = $aywJT$filterDOMProps(props, {\n    labelable: true\n  });\n  var inputOnlyProps = {\n    type: type,\n    pattern: props.pattern\n  };\n  return {\n    labelProps: labelProps,\n    inputProps: $aywJT$mergeProps(domProps, inputElementType === 'input' && inputOnlyProps, _objectSpread(_objectSpread({\n      disabled: isDisabled,\n      readOnly: isReadOnly,\n      'aria-required': isRequired || undefined,\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-activedescendant': props['aria-activedescendant'],\n      'aria-autocomplete': props['aria-autocomplete'],\n      'aria-haspopup': props['aria-haspopup'],\n      value: props.value,\n      defaultValue: props.value ? undefined : props.defaultValue,\n      onChange: function onChange(e) {\n        return _onChange(e.target.value);\n      },\n      autoComplete: props.autoComplete,\n      maxLength: props.maxLength,\n      minLength: props.minLength,\n      name: props.name,\n      placeholder: props.placeholder,\n      inputMode: props.inputMode,\n      onCopy: props.onCopy,\n      onCut: props.onCut,\n      onPaste: props.onPaste,\n      onCompositionEnd: props.onCompositionEnd,\n      onCompositionStart: props.onCompositionStart,\n      onCompositionUpdate: props.onCompositionUpdate,\n      onSelect: props.onSelect,\n      onBeforeInput: props.onBeforeInput,\n      onInput: props.onInput\n    }, focusableProps), fieldProps)),\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  };\n}\n\nvar $58c0262056d833d5$exports = {};\n$parcel$export($58c0262056d833d5$exports, \"useFormattedTextField\", function () {\n  return $58c0262056d833d5$export$4f384c9210e583c3;\n});\n\nfunction $58c0262056d833d5$var$supportsNativeBeforeInputEvent() {\n  return typeof window !== 'undefined' && window.InputEvent && typeof InputEvent.prototype.getTargetRanges === 'function';\n}\n\nfunction $58c0262056d833d5$export$4f384c9210e583c3(props, state1, inputRef) {\n  var stateRef = $aywJT$useRef(state1);\n  stateRef.current = state1;\n  $aywJT$useEffect(function () {\n    if (!$58c0262056d833d5$var$supportsNativeBeforeInputEvent()) return;\n    var input = inputRef.current;\n\n    var onBeforeInput = function onBeforeInput(e) {\n      var state = stateRef.current;\n      var nextValue;\n\n      switch (e.inputType) {\n        case 'historyUndo':\n        case 'historyRedo':\n          return;\n\n        case 'deleteContent':\n        case 'deleteByCut':\n        case 'deleteByDrag':\n          nextValue = input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n          break;\n\n        case 'deleteContentForward':\n          nextValue = input.selectionEnd === input.selectionStart ? input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd + 1) : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n          break;\n\n        case 'deleteContentBackward':\n          nextValue = input.selectionEnd === input.selectionStart ? input.value.slice(0, input.selectionStart - 1) + input.value.slice(input.selectionStart) : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n          break;\n\n        case 'deleteSoftLineBackward':\n        case 'deleteHardLineBackward':\n          nextValue = input.value.slice(input.selectionStart);\n          break;\n\n        default:\n          if (e.data != null) nextValue = input.value.slice(0, input.selectionStart) + e.data + input.value.slice(input.selectionEnd);\n          break;\n      }\n\n      if (nextValue == null || !state.validate(nextValue)) e.preventDefault();\n    };\n\n    input.addEventListener('beforeinput', onBeforeInput, false);\n    return function () {\n      input.removeEventListener('beforeinput', onBeforeInput, false);\n    };\n  }, [inputRef, stateRef]);\n  var onBeforeInput1 = !$58c0262056d833d5$var$supportsNativeBeforeInputEvent() ? function (e) {\n    var nextValue = e.target.value.slice(0, e.target.selectionStart) + e.data + e.target.value.slice(e.target.selectionEnd);\n    if (!state1.validate(nextValue)) e.preventDefault();\n  } : null;\n\n  var _$13fe50aacf882d03$ex = $13fe50aacf882d03$export$712718f7aec83d5(props, inputRef),\n      labelProps = _$13fe50aacf882d03$ex.labelProps,\n      textFieldProps = _$13fe50aacf882d03$ex.inputProps,\n      descriptionProps = _$13fe50aacf882d03$ex.descriptionProps,\n      errorMessageProps = _$13fe50aacf882d03$ex.errorMessageProps;\n\n  var compositionStartState = $aywJT$useRef(null);\n  return {\n    inputProps: $aywJT$mergeProps(textFieldProps, {\n      onBeforeInput: onBeforeInput1,\n      onCompositionStart: function onCompositionStart() {\n        var _inputRef$current = inputRef.current,\n            value = _inputRef$current.value,\n            selectionStart = _inputRef$current.selectionStart,\n            selectionEnd = _inputRef$current.selectionEnd;\n        compositionStartState.current = {\n          value: value,\n          selectionStart: selectionStart,\n          selectionEnd: selectionEnd\n        };\n      },\n      onCompositionEnd: function onCompositionEnd() {\n        if (!state1.validate(inputRef.current.value)) {\n          var _compositionStartStat = compositionStartState.current,\n              value = _compositionStartStat.value,\n              selectionStart = _compositionStartStat.selectionStart,\n              selectionEnd = _compositionStartStat.selectionEnd;\n          inputRef.current.value = value;\n          inputRef.current.setSelectionRange(selectionStart, selectionEnd);\n          state1.setInputValue(value);\n        }\n      }\n    }),\n    labelProps: labelProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  };\n}\n\nexport { $13fe50aacf882d03$export$712718f7aec83d5 as useTextField, $58c0262056d833d5$export$4f384c9210e583c3 as useFormattedTextField };","map":{"version":3,"mappings":"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","names":["filterDOMProps","$aywJT$filterDOMProps","mergeProps","$aywJT$mergeProps","useField","$aywJT$useField","useFocusable","$aywJT$useFocusable","useRef","$aywJT$useRef","useEffect","$aywJT$useEffect","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$13fe50aacf882d03$exports","$13fe50aacf882d03$export$712718f7aec83d5","props","ref","inputElementType","isDisabled","isRequired","isReadOnly","validationState","type","onChange","focusableProps","labelProps","fieldProps","descriptionProps","errorMessageProps","domProps","labelable","inputOnlyProps","pattern","inputProps","disabled","readOnly","undefined","value","defaultValue","target","autoComplete","maxLength","minLength","name","placeholder","inputMode","onCopy","onCut","onPaste","onCompositionEnd","onCompositionStart","onCompositionUpdate","onSelect","onBeforeInput","onInput","$58c0262056d833d5$exports","$58c0262056d833d5$export$4f384c9210e583c3","$58c0262056d833d5$var$supportsNativeBeforeInputEvent","window","InputEvent","prototype","getTargetRanges","state1","inputRef","stateRef","current","input","state","nextValue","inputType","slice","selectionStart","selectionEnd","data","validate","preventDefault","addEventListener","removeEventListener","onBeforeInput1","textFieldProps","compositionStartState","setSelectionRange","setInputValue","useTextField","useFormattedTextField"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-aria/textfield/dist/module.js"],"sourcesContent":["import {filterDOMProps as $aywJT$filterDOMProps, mergeProps as $aywJT$mergeProps} from \"@react-aria/utils\";\nimport {useField as $aywJT$useField} from \"@react-aria/label\";\nimport {useFocusable as $aywJT$useFocusable} from \"@react-aria/focus\";\nimport {useRef as $aywJT$useRef, useEffect as $aywJT$useEffect} from \"react\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $13fe50aacf882d03$exports = {};\n\n$parcel$export($13fe50aacf882d03$exports, \"useTextField\", () => $13fe50aacf882d03$export$712718f7aec83d5);\n\n\n\nfunction $13fe50aacf882d03$export$712718f7aec83d5(props, ref) {\n    let { inputElementType: inputElementType = 'input' , isDisabled: isDisabled = false , isRequired: isRequired = false , isReadOnly: isReadOnly = false , validationState: validationState , type: type = 'text' , onChange: onChange = ()=>{\n    }  } = props;\n    let { focusableProps: focusableProps  } = $aywJT$useFocusable(props, ref);\n    let { labelProps: labelProps , fieldProps: fieldProps , descriptionProps: descriptionProps , errorMessageProps: errorMessageProps  } = $aywJT$useField(props);\n    let domProps = $aywJT$filterDOMProps(props, {\n        labelable: true\n    });\n    const inputOnlyProps = {\n        type: type,\n        pattern: props.pattern\n    };\n    return {\n        labelProps: labelProps,\n        inputProps: $aywJT$mergeProps(domProps, inputElementType === 'input' && inputOnlyProps, {\n            disabled: isDisabled,\n            readOnly: isReadOnly,\n            'aria-required': isRequired || undefined,\n            'aria-invalid': validationState === 'invalid' || undefined,\n            'aria-errormessage': props['aria-errormessage'],\n            'aria-activedescendant': props['aria-activedescendant'],\n            'aria-autocomplete': props['aria-autocomplete'],\n            'aria-haspopup': props['aria-haspopup'],\n            value: props.value,\n            defaultValue: props.value ? undefined : props.defaultValue,\n            onChange: (e)=>onChange(e.target.value)\n            ,\n            autoComplete: props.autoComplete,\n            maxLength: props.maxLength,\n            minLength: props.minLength,\n            name: props.name,\n            placeholder: props.placeholder,\n            inputMode: props.inputMode,\n            // Clipboard events\n            onCopy: props.onCopy,\n            onCut: props.onCut,\n            onPaste: props.onPaste,\n            // Composition events\n            onCompositionEnd: props.onCompositionEnd,\n            onCompositionStart: props.onCompositionStart,\n            onCompositionUpdate: props.onCompositionUpdate,\n            // Selection events\n            onSelect: props.onSelect,\n            // Input events\n            onBeforeInput: props.onBeforeInput,\n            onInput: props.onInput,\n            ...focusableProps,\n            ...fieldProps\n        }),\n        descriptionProps: descriptionProps,\n        errorMessageProps: errorMessageProps\n    };\n}\n\n\nvar $58c0262056d833d5$exports = {};\n\n$parcel$export($58c0262056d833d5$exports, \"useFormattedTextField\", () => $58c0262056d833d5$export$4f384c9210e583c3);\n\n\n\nfunction $58c0262056d833d5$var$supportsNativeBeforeInputEvent() {\n    return typeof window !== 'undefined' && window.InputEvent && // @ts-ignore\n    typeof InputEvent.prototype.getTargetRanges === 'function';\n}\nfunction $58c0262056d833d5$export$4f384c9210e583c3(props, state1, inputRef) {\n    let stateRef = $aywJT$useRef(state1);\n    stateRef.current = state1;\n    // All browsers implement the 'beforeinput' event natively except Firefox\n    // (currently behind a flag as of Firefox 84). React's polyfill does not\n    // run in all cases that the native event fires, e.g. when deleting text.\n    // Use the native event if available so that we can prevent invalid deletions.\n    // We do not attempt to polyfill this in Firefox since it would be very complicated,\n    // the benefit of doing so is fairly minor, and it's going to be natively supported soon.\n    $aywJT$useEffect(()=>{\n        if (!$58c0262056d833d5$var$supportsNativeBeforeInputEvent()) return;\n        let input = inputRef.current;\n        let onBeforeInput = (e)=>{\n            let state = stateRef.current;\n            // Compute the next value of the input if the event is allowed to proceed.\n            // See https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes for a full list of input types.\n            let nextValue;\n            switch(e.inputType){\n                case 'historyUndo':\n                case 'historyRedo':\n                    // Explicitly allow undo/redo. e.data is null in this case, but there's no need to validate,\n                    // because presumably the input would have already been validated previously.\n                    return;\n                case 'deleteContent':\n                case 'deleteByCut':\n                case 'deleteByDrag':\n                    nextValue = input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n                    break;\n                case 'deleteContentForward':\n                    // This is potentially incorrect, since the browser may actually delete more than a single UTF-16\n                    // character. In reality, a full Unicode grapheme cluster consisting of multiple UTF-16 characters\n                    // or code points may be deleted. However, in our currently supported locales, there are no such cases.\n                    // If we support additional locales in the future, this may need to change.\n                    nextValue = input.selectionEnd === input.selectionStart ? input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd + 1) : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n                    break;\n                case 'deleteContentBackward':\n                    nextValue = input.selectionEnd === input.selectionStart ? input.value.slice(0, input.selectionStart - 1) + input.value.slice(input.selectionStart) : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n                    break;\n                case 'deleteSoftLineBackward':\n                case 'deleteHardLineBackward':\n                    nextValue = input.value.slice(input.selectionStart);\n                    break;\n                default:\n                    if (e.data != null) nextValue = input.value.slice(0, input.selectionStart) + e.data + input.value.slice(input.selectionEnd);\n                    break;\n            }\n            // If we did not compute a value, or the new value is invalid, prevent the event\n            // so that the browser does not update the input text, move the selection, or add to\n            // the undo/redo stack.\n            if (nextValue == null || !state.validate(nextValue)) e.preventDefault();\n        };\n        input.addEventListener('beforeinput', onBeforeInput, false);\n        return ()=>{\n            input.removeEventListener('beforeinput', onBeforeInput, false);\n        };\n    }, [\n        inputRef,\n        stateRef\n    ]);\n    let onBeforeInput1 = !$58c0262056d833d5$var$supportsNativeBeforeInputEvent() ? (e)=>{\n        let nextValue = e.target.value.slice(0, e.target.selectionStart) + e.data + e.target.value.slice(e.target.selectionEnd);\n        if (!state1.validate(nextValue)) e.preventDefault();\n    } : null;\n    let { labelProps: labelProps , inputProps: textFieldProps , descriptionProps: descriptionProps , errorMessageProps: errorMessageProps  } = $13fe50aacf882d03$export$712718f7aec83d5(props, inputRef);\n    let compositionStartState = $aywJT$useRef(null);\n    return {\n        inputProps: $aywJT$mergeProps(textFieldProps, {\n            onBeforeInput: onBeforeInput1,\n            onCompositionStart () {\n                // Chrome does not implement Input Events Level 2, which specifies the insertFromComposition\n                // and deleteByComposition inputType values for the beforeinput event. These are meant to occur\n                // at the end of a composition (e.g. Pinyin IME, Android auto correct, etc.), and crucially, are\n                // cancelable. The insertCompositionText and deleteCompositionText input types are not cancelable,\n                // nor would we want to cancel them because the input from the user is incomplete at that point.\n                // In Safari, insertFromComposition/deleteFromComposition will fire, however, allowing us to cancel\n                // the final composition result if it is invalid. As a fallback for Chrome and Firefox, which either\n                // don't support Input Events Level 2, or beforeinput at all, we store the state of the input when\n                // the compositionstart event fires, and undo the changes in compositionend (below) if it is invalid.\n                // Unfortunately, this messes up the undo/redo stack, but until insertFromComposition/deleteByComposition\n                // are implemented, there is no other way to prevent composed input.\n                // See https://bugs.chromium.org/p/chromium/issues/detail?id=1022204\n                let { value: value , selectionStart: selectionStart , selectionEnd: selectionEnd  } = inputRef.current;\n                compositionStartState.current = {\n                    value: value,\n                    selectionStart: selectionStart,\n                    selectionEnd: selectionEnd\n                };\n            },\n            onCompositionEnd () {\n                if (!state1.validate(inputRef.current.value)) {\n                    // Restore the input value in the DOM immediately so we can synchronously update the selection position.\n                    // But also update the value in React state as well so it is correct for future updates.\n                    let { value: value , selectionStart: selectionStart , selectionEnd: selectionEnd  } = compositionStartState.current;\n                    inputRef.current.value = value;\n                    inputRef.current.setSelectionRange(selectionStart, selectionEnd);\n                    state1.setInputValue(value);\n                }\n            }\n        }),\n        labelProps: labelProps,\n        descriptionProps: descriptionProps,\n        errorMessageProps: errorMessageProps\n    };\n}\n\n\n\n\nexport {$13fe50aacf882d03$export$712718f7aec83d5 as useTextField, $58c0262056d833d5$export$4f384c9210e583c3 as useFormattedTextField};\n//# sourceMappingURL=module.js.map\n"]},"metadata":{},"sourceType":"module"}