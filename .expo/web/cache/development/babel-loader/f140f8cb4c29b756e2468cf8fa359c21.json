{"ast":null,"code":"import { runAfterTransition } from '@react-aria/utils';\nvar state = 'default';\nvar savedUserSelect = '';\nexport function disableTextSelection() {\n  if (state === 'default') {\n    savedUserSelect = document.documentElement.style.webkitUserSelect;\n    document.documentElement.style.webkitUserSelect = 'none';\n  }\n\n  state = 'disabled';\n}\nexport function restoreTextSelection() {\n  if (state !== 'disabled') {\n    return;\n  }\n\n  state = 'restoring';\n  setTimeout(function () {\n    runAfterTransition(function () {\n      if (state === 'restoring') {\n        if (document.documentElement.style.webkitUserSelect === 'none') {\n          document.documentElement.style.webkitUserSelect = savedUserSelect || '';\n        }\n\n        savedUserSelect = '';\n        state = 'default';\n      }\n    });\n  }, 300);\n}","map":{"version":3,"mappings":"AAWA,SAASA,kBAAT,QAAmC,mBAAnC;AASA,IAAIC,KAAK,GAAG,SAAZ;AACA,IAAIC,eAAe,GAAG,EAAtB;AACA,OAAO,SAASC,oBAAT,GAAgC;AACrC,MAAIF,KAAK,KAAK,SAAd,EAAyB;AACvBC,mBAAe,GAAGE,QAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,gBAAjD;AACAH,YAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,gBAA/B,GAAkD,MAAlD;AACD;;AAEDN,OAAK,GAAG,UAAR;AACD;AACD,OAAO,SAASO,oBAAT,GAAgC;AAGrC,MAAIP,KAAK,KAAK,UAAd,EAA0B;AACxB;AACD;;AAEDA,OAAK,GAAG,WAAR;AAGAQ,YAAU,CAAC,YAAM;AAGfT,sBAAkB,CAAC,YAAM;AAEvB,UAAIC,KAAK,KAAK,WAAd,EAA2B;AACzB,YAAIG,QAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,gBAA/B,KAAoD,MAAxD,EAAgE;AAC9DH,kBAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,gBAA/B,GAAkDL,eAAe,IAAI,EAArE;AACD;;AAEDA,uBAAe,GAAG,EAAlB;AACAD,aAAK,GAAG,SAAR;AACD;AACF,KAViB,CAAlB;AAWD,GAdS,EAcP,GAdO,CAAV;AAeD","names":["runAfterTransition","state","savedUserSelect","disableTextSelection","document","documentElement","style","webkitUserSelect","restoreTextSelection","setTimeout"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-native-aria/slider/lib/module/textSelection.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport { runAfterTransition } from '@react-aria/utils'; // Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\n\nlet state = 'default';\nlet savedUserSelect = '';\nexport function disableTextSelection() {\n  if (state === 'default') {\n    savedUserSelect = document.documentElement.style.webkitUserSelect;\n    document.documentElement.style.webkitUserSelect = 'none';\n  }\n\n  state = 'disabled';\n}\nexport function restoreTextSelection() {\n  // If the state is already default, there's nothing to do.\n  // If it is restoring, then there's no need to queue a second restore.\n  if (state !== 'disabled') {\n    return;\n  }\n\n  state = 'restoring'; // There appears to be a delay on iOS where selection still might occur\n  // after pointer up, so wait a bit before removing user-select.\n\n  setTimeout(() => {\n    // Wait for any CSS transitions to complete so we don't recompute style\n    // for the whole page in the middle of the animation and cause jank.\n    runAfterTransition(() => {\n      // Avoid race conditions\n      if (state === 'restoring') {\n        if (document.documentElement.style.webkitUserSelect === 'none') {\n          document.documentElement.style.webkitUserSelect = savedUserSelect || '';\n        }\n\n        savedUserSelect = '';\n        state = 'default';\n      }\n    });\n  }, 300);\n}\n//# sourceMappingURL=textSelection.js.map"]},"metadata":{},"sourceType":"module"}