{"ast":null,"code":"import I18nManager from \"react-native-web/dist/exports/I18nManager\";\nexport var attachEventHandlersOnRef = function attachEventHandlersOnRef(props, ref) {\n  if (ref && ref.current) {\n    for (var key in props) {\n      if (key.startsWith('on')) {\n        ref.current[key.toLowerCase()] = props[key];\n      }\n    }\n  }\n};\nexport var getLabel = function getLabel(props) {\n  var _props$accessibilityL;\n\n  var label = (_props$accessibilityL = props.accessibilityLabel) !== null && _props$accessibilityL !== void 0 ? _props$accessibilityL : props['aria-label'];\n\n  if (!label) {\n    label = typeof props.label === 'string' ? props.label : undefined;\n  }\n\n  return label;\n};\nexport * from \"./ariaToAccessibilityMap\";\nexport { useId, useLayoutEffect, mergeIds, mergeProps } from '@react-aria/utils';\nexport { SSRProvider, useIsSSR } from '@react-aria/ssr';\nexport var isRTL = function isRTL() {\n  if (I18nManager.isRTL !== undefined) {\n    return I18nManager.isRTL;\n  }\n\n  if (I18nManager.getConstants) {\n    return I18nManager.getConstants().isRTL;\n  }\n};","map":{"version":3,"mappings":";AACA,OAAO,IAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,KAAD,EAAQC,GAAR,EAAgB;AACtD,MAAIA,GAAG,IAAIA,GAAG,CAACC,OAAf,EAAwB;AACtB,SAAK,IAAIC,GAAT,IAAgBH,KAAhB,EAAuB;AACrB,UAAIG,GAAG,CAACC,UAAJ,CAAe,IAAf,CAAJ,EAA0B;AACxBH,WAAG,CAACC,OAAJ,CAAYC,GAAG,CAACE,WAAJ,EAAZ,IAAiCL,KAAK,CAACG,GAAD,CAAtC;AACD;AACF;AACF;AACF,CARM;AASP,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,MAAK,EAAI;AAC/B,MAAIC,qBAAJ;;AAEA,MAAIC,KAAK,GAAG,CAACD,qBAAqB,GAAGP,KAAK,CAACS,kBAA/B,MAAuD,IAAvD,IAA+DF,qBAAqB,KAAK,KAAK,CAA9F,GAAkGA,qBAAlG,GAA0HP,KAAK,CAAC,YAAD,CAA3I;;AAEA,MAAI,CAACQ,KAAL,EAAY;AACVA,SAAK,GAAG,OAAOR,KAAK,CAACQ,KAAb,KAAuB,QAAvB,GAAkCR,KAAK,CAACQ,KAAxC,GAAgDE,SAAxD;AACD;;AAED,SAAOF,KAAP;AACD,CAVM;AAWP;AACA,SAASG,KAAT,EAAgBC,eAAhB,EAAiCC,QAAjC,EAA2CC,UAA3C,QAA6D,mBAA7D;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,iBAAtC;AACA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAEzB,MAAIC,WAAW,CAACD,KAAZ,KAAsBP,SAA1B,EAAqC;AACnC,WAAOQ,WAAW,CAACD,KAAnB;AACD;;AAGD,MAAIC,WAAW,CAACC,YAAhB,EAA8B;AAE5B,WAAOD,WAAW,CAACC,YAAZ,GAA2BF,KAAlC;AACD;AACF,CAXM","names":["attachEventHandlersOnRef","props","ref","current","key","startsWith","toLowerCase","getLabel","_props$accessibilityL","label","accessibilityLabel","undefined","useId","useLayoutEffect","mergeIds","mergeProps","SSRProvider","useIsSSR","isRTL","I18nManager","getConstants"],"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/@react-native-aria/utils/lib/module/index.js"],"sourcesContent":["import { I18nManager } from 'react-native';\nexport const attachEventHandlersOnRef = (props, ref) => {\n  if (ref && ref.current) {\n    for (let key in props) {\n      if (key.startsWith('on')) {\n        ref.current[key.toLowerCase()] = props[key];\n      }\n    }\n  }\n};\nexport const getLabel = props => {\n  var _props$accessibilityL;\n\n  let label = (_props$accessibilityL = props.accessibilityLabel) !== null && _props$accessibilityL !== void 0 ? _props$accessibilityL : props['aria-label'];\n\n  if (!label) {\n    label = typeof props.label === 'string' ? props.label : undefined;\n  }\n\n  return label;\n};\nexport * from './ariaToAccessibilityMap';\nexport { useId, useLayoutEffect, mergeIds, mergeProps } from '@react-aria/utils';\nexport { SSRProvider, useIsSSR } from '@react-aria/ssr';\nexport const isRTL = () => {\n  // To support previous RN versions. Newer versions use below getConstants()\n  if (I18nManager.isRTL !== undefined) {\n    return I18nManager.isRTL;\n  } // @ts-ignore - RN web only\n\n\n  if (I18nManager.getConstants) {\n    // @ts-ignore - RN web only\n    return I18nManager.getConstants().isRTL;\n  }\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}