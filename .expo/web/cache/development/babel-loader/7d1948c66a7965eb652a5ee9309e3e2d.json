{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport DisplayAlert from \"./DisplayAlert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar getData = function getData(done) {\n  var jsonValue, data;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@spacebook_details'));\n\n        case 3:\n          jsonValue = _context.sent;\n          data = JSON.parse(jsonValue);\n          return _context.abrupt(\"return\", done(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n          return _context.abrupt(\"return\", null);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar FeedScreen = function (_Component) {\n  _inherits(FeedScreen, _Component);\n\n  var _super = _createSuper(FeedScreen);\n\n  function FeedScreen(props) {\n    var _this;\n\n    _classCallCheck(this, FeedScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      data: {},\n      posts: [],\n      ids: []\n    };\n    return _this;\n  }\n\n  _createClass(FeedScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      getData(function (data) {\n        _this2.setState({\n          data: data\n        });\n\n        _this2.getIds();\n\n        navigation.addListener('focus', function () {\n          _this2.getIds();\n        });\n      });\n    }\n  }, {\n    key: \"getIds\",\n    value: function getIds() {\n      var _this3 = this;\n\n      var data = this.state.data;\n      var idList = [];\n      console.log(data.id);\n      fetch(\"http://localhost:3333/api/1.0.0/user/\" + data.id + \"/friends\", {\n        method: 'GET',\n        headers: {\n          'X-Authorization': data.token\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        for (var i = 0; i < responseJson.length; i += 1) {\n          idList.push(responseJson[i].user_id);\n        }\n\n        console.log(idList.length);\n\n        _this3.setState({\n          ids: idList\n        });\n\n        _this3.getPosts();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"getPosts\",\n    value: function getPosts() {\n      var _this4 = this;\n\n      console.log(\"po\");\n      var _this$state = this.state,\n          data = _this$state.data,\n          ids = _this$state.ids;\n      var postsList = [];\n      var idList = ids;\n      idList.push(data.id);\n\n      for (var i = 0; i < idList.length; i += 1) {\n        fetch(\"http://localhost:3333/api/1.0.0/user/\" + idList[i] + \"/post\", {\n          method: 'GET',\n          headers: {\n            'X-Authorization': data.token\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (responseJson) {\n          if (responseJson.length > 0) {\n            for (var j = 0; j < responseJson.length; j += 1) {\n              postsList.push(responseJson[j]);\n\n              _this4.setState({\n                posts: postsList,\n                isLoading: false\n              });\n            }\n          }\n\n          console.log(\"got\");\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoading) {\n        return _jsx(View, {\n          children: _jsx(ActivityIndicator, {\n            size: \"large\",\n            color: \"#00ff00\"\n          })\n        });\n      }\n\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"FeedScreen\"\n        }), _jsx(View, {\n          children: _jsx(FlatList, {\n            data: this.state.posts,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsxs(View, {\n                children: [_jsxs(Text, {\n                  children: [item.author.first_name, \" \", item.author.last_name]\n                }), _jsx(Text, {\n                  children: item.text\n                })]\n              });\n            },\n            keyExtractor: function keyExtractor(item, index) {\n              return item.post_id;\n            }\n          })\n        })]\n      });\n    }\n  }]);\n\n  return FeedScreen;\n}(Component);\n\nFeedScreen.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n    addListener: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default FeedScreen;","map":{"version":3,"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/components/FeedScreen.js"],"names":["React","Component","AsyncStorage","PropTypes","Moment","DisplayAlert","getData","done","getItem","jsonValue","data","JSON","parse","console","log","FeedScreen","props","state","isLoading","posts","ids","navigation","setState","getIds","addListener","idList","id","fetch","method","headers","token","then","response","json","responseJson","i","length","push","user_id","getPosts","catch","error","postsList","j","item","author","first_name","last_name","text","index","post_id","propTypes","shape","navigate","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, FlatList, Text, View, Modal, TextInput, Pressable, ActivityIndicator } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport DisplayAlert from './DisplayAlert';\r\n\r\nconst getData = async (done) => {\r\n    try {\r\n        const jsonValue = await AsyncStorage.getItem('@spacebook_details');\r\n        const data = JSON.parse(jsonValue);\r\n        return done(data);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return null;\r\n};\r\n\r\nclass FeedScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            data: {},\r\n            posts: [],\r\n            ids: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { navigation } = this.props;\r\n        getData((data) => {\r\n            this.setState({\r\n                data\r\n            });\r\n            this.getIds();\r\n            navigation.addListener('focus', () => {\r\n                this.getIds();\r\n            });\r\n        });\r\n    }\r\n\r\n    getIds(){\r\n        const { data } = this.state;\r\n        const idList = [];\r\n        console.log(data.id);\r\n        fetch(`http://localhost:3333/api/1.0.0/user/${ data.id }/friends`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-Authorization': data.token\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            for (let i = 0; i < responseJson.length; i+=1){\r\n                idList.push(responseJson[i].user_id);\r\n            }\r\n            console.log(idList.length);\r\n            this.setState({ids: idList});\r\n            this.getPosts();\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    getPosts(){\r\n        console.log(\"po\");\r\n        const { data, ids } = this.state;\r\n        const postsList = [];\r\n        const idList = ids;\r\n        idList.push(data.id);\r\n        for (let i = 0; i < idList.length; i+=1){\r\n            fetch(`http://localhost:3333/api/1.0.0/user/${ idList[i] }/post`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'X-Authorization': data.token\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                if (responseJson.length > 0){\r\n                    for (let j=0;j<responseJson.length;j+=1){\r\n                        postsList.push(responseJson[j])\r\n                        this.setState({\r\n                            posts: postsList,\r\n                            isLoading: false\r\n                        });\r\n                    }\r\n                }\r\n                console.log(\"got\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading){\r\n            return (\r\n                <View>\r\n                    <ActivityIndicator\r\n                        size=\"large\"\r\n                        color=\"#00ff00\"\r\n                    />\r\n                </View>\r\n            );\r\n        } \r\n        return (\r\n            <View>\r\n                <Text>FeedScreen</Text>\r\n                <View>\r\n                    <FlatList data={this.state.posts}\r\n                        renderItem={({item}) => (\r\n                            <View>\r\n                                <Text>{item.author.first_name} {item.author.last_name}</Text>\r\n                                <Text>{item.text}</Text>\r\n                            </View>\r\n                        )}\r\n                        keyExtractor={(item, index) => item.post_id}\r\n                    />\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nFeedScreen.propTypes = {\r\n    navigation: PropTypes.shape({\r\n        navigate: PropTypes.func.isRequired,\r\n        addListener: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default FeedScreen;"]},"metadata":{},"sourceType":"module"}