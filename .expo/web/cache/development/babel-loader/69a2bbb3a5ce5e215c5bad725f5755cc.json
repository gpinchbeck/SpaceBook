{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { CommonActions } from '@react-navigation/routers';\nexport var NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nexport default function createNavigationContainerRef() {\n  var methods = [].concat(_toConsumableArray(Object.keys(CommonActions)), ['addListener', 'removeListener', 'resetRoot', 'dispatch', 'isFocused', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions']);\n  var listeners = {};\n\n  var removeListener = function removeListener(event, callback) {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter(function (cb) {\n        return cb !== callback;\n      });\n    }\n  };\n\n  var current = null;\n\n  var ref = _objectSpread({\n    get current() {\n      return current;\n    },\n\n    set current(value) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              event = _ref2[0],\n              callbacks = _ref2[1];\n\n          callbacks.forEach(function (callback) {\n            value.addListener(event, callback);\n          });\n        });\n      }\n    },\n\n    isReady: function isReady() {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    }\n  }, methods.reduce(function (acc, name) {\n    acc[name] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (current == null) {\n        switch (name) {\n          case 'addListener':\n            {\n              var event = args[0],\n                  callback = args[1];\n              listeners[event] = listeners[event] || [];\n              listeners[event].push(callback);\n              return function () {\n                return removeListener(event, callback);\n              };\n            }\n\n          case 'removeListener':\n            {\n              var _event = args[0],\n                  _callback = args[1];\n              removeListener(_event, _callback);\n              break;\n            }\n\n          default:\n            console.error(NOT_INITIALIZED_ERROR);\n        }\n      } else {\n        var _current;\n\n        return (_current = current)[name].apply(_current, args);\n      }\n    };\n\n    return acc;\n  }, {}));\n\n  return ref;\n}","map":{"version":3,"mappings":"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","names":["CommonActions","NOT_INITIALIZED_ERROR","createNavigationContainerRef","methods","Object","keys","listeners","removeListener","event","callback","filter","cb","current","ref","value","entries","forEach","_ref","callbacks","addListener","isReady","reduce","acc","name","_len","arguments","length","args","Array","_key","push","console","error"],"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/@react-navigation/core/lib/module/createNavigationContainerRef.js"],"sourcesContent":["import { CommonActions } from '@react-navigation/routers';\nexport const NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nexport default function createNavigationContainerRef() {\n  const methods = [...Object.keys(CommonActions), 'addListener', 'removeListener', 'resetRoot', 'dispatch', 'isFocused', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions'];\n  const listeners = {};\n\n  const removeListener = (event, callback) => {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter(cb => cb !== callback);\n    }\n  };\n\n  let current = null;\n  const ref = {\n    get current() {\n      return current;\n    },\n\n    set current(value) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(_ref => {\n          let [event, callbacks] = _ref;\n          callbacks.forEach(callback => {\n            value.addListener(event, callback);\n          });\n        });\n      }\n    },\n\n    isReady: () => {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    },\n    ...methods.reduce((acc, name) => {\n      acc[name] = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (current == null) {\n          switch (name) {\n            case 'addListener':\n              {\n                const [event, callback] = args;\n                listeners[event] = listeners[event] || [];\n                listeners[event].push(callback);\n                return () => removeListener(event, callback);\n              }\n\n            case 'removeListener':\n              {\n                const [event, callback] = args;\n                removeListener(event, callback);\n                break;\n              }\n\n            default:\n              console.error(NOT_INITIALIZED_ERROR);\n          }\n        } else {\n          // @ts-expect-error: this is ok\n          return current[name](...args);\n        }\n      };\n\n      return acc;\n    }, {})\n  };\n  return ref;\n}\n//# sourceMappingURL=createNavigationContainerRef.js.map"]},"metadata":{},"sourceType":"module"}