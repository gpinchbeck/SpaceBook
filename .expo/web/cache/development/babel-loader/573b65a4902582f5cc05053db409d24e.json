{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport isArrayEqual from \"./isArrayEqual\";\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport NavigationRouteContext from \"./NavigationRouteContext\";\nexport default function useOnGetState(_ref) {\n  var getState = _ref.getState,\n      getStateListeners = _ref.getStateListeners;\n\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n      addKeyedListener = _React$useContext.addKeyedListener;\n\n  var route = React.useContext(NavigationRouteContext);\n  var key = route ? route.key : 'root';\n  var getRehydratedState = React.useCallback(function () {\n    var state = getState();\n    var routes = state.routes.map(function (route) {\n      var _getStateListeners$ro;\n\n      var childState = (_getStateListeners$ro = getStateListeners[route.key]) === null || _getStateListeners$ro === void 0 ? void 0 : _getStateListeners$ro.call(getStateListeners);\n\n      if (route.state === childState) {\n        return route;\n      }\n\n      return _objectSpread(_objectSpread({}, route), {}, {\n        state: childState\n      });\n    });\n\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      routes: routes\n    });\n  }, [getState, getStateListeners]);\n  React.useEffect(function () {\n    return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}","map":{"version":3,"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP;AACA,OAAOC,wBAAP;AACA,OAAOC,sBAAP;AACA,eAAe,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC1C,MACEC,QADF,GAGID,IAHJ,CACEC,QADF;AAAA,MAEEC,iBAFF,GAGIF,IAHJ,CAEEE,iBAFF;;AAIA,0BAEIP,KAAK,CAACQ,UAAN,CAAiBN,wBAAjB,CAFJ;AAAA,MACEO,gBADF,qBACEA,gBADF;;AAGA,MAAMC,KAAK,GAAGV,KAAK,CAACQ,UAAN,CAAiBL,sBAAjB,CAAd;AACA,MAAMQ,GAAG,GAAGD,KAAK,GAAGA,KAAK,CAACC,GAAT,GAAe,MAAhC;AACA,MAAMC,kBAAkB,GAAGZ,KAAK,CAACa,WAAN,CAAkB,YAAM;AACjD,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;AAEA,QAAMS,MAAM,GAAGD,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,eAAK,EAAI;AACvC,UAAIC,qBAAJ;;AAEA,UAAMC,UAAU,GAAG,CAACD,qBAAqB,GAAGV,iBAAiB,CAACG,KAAK,CAACC,GAAP,CAA1C,MAA2D,IAA3D,IAAmEM,qBAAqB,KAAK,KAAK,CAAlG,GAAsG,KAAK,CAA3G,GAA+GA,qBAAqB,CAACE,IAAtB,CAA2BZ,iBAA3B,CAAlI;;AAEA,UAAIG,KAAK,CAACI,KAAN,KAAgBI,UAApB,EAAgC;AAC9B,eAAOR,KAAP;AACD;;AAED,6CAAYA,KAAZ;AACEI,aAAK,EAAEI;AADT;AAGD,KAZc,CAAf;;AAcA,QAAIjB,YAAY,CAACa,KAAK,CAACC,MAAP,EAAeA,MAAf,CAAhB,EAAwC;AACtC,aAAOD,KAAP;AACD;;AAED,2CAAYA,KAAZ;AACEC,YAAM,EAANA;AADF;AAGD,GAxB0B,EAwBxB,CAACT,QAAD,EAAWC,iBAAX,CAxBwB,CAA3B;AAyBAP,OAAK,CAACoB,SAAN,CAAgB,YAAM;AACpB,WAAOX,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAAC,UAAD,EAAaE,GAAb,EAAkBC,kBAAlB,CAA3F;AACD,GAFD,EAEG,CAACH,gBAAD,EAAmBG,kBAAnB,EAAuCD,GAAvC,CAFH;AAGD","names":["React","isArrayEqual","NavigationBuilderContext","NavigationRouteContext","useOnGetState","_ref","getState","getStateListeners","useContext","addKeyedListener","route","key","getRehydratedState","useCallback","state","routes","map","_getStateListeners$ro","childState","call","useEffect"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-navigation/core/lib/module/useOnGetState.js"],"sourcesContent":["import * as React from 'react';\nimport isArrayEqual from './isArrayEqual';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nexport default function useOnGetState(_ref) {\n  let {\n    getState,\n    getStateListeners\n  } = _ref;\n  const {\n    addKeyedListener\n  } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState(); // Avoid returning new route objects if we don't need to\n\n    const routes = state.routes.map(route => {\n      var _getStateListeners$ro;\n\n      const childState = (_getStateListeners$ro = getStateListeners[route.key]) === null || _getStateListeners$ro === void 0 ? void 0 : _getStateListeners$ro.call(getStateListeners);\n\n      if (route.state === childState) {\n        return route;\n      }\n\n      return { ...route,\n        state: childState\n      };\n    });\n\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n\n    return { ...state,\n      routes\n    };\n  }, [getState, getStateListeners]);\n  React.useEffect(() => {\n    return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}\n//# sourceMappingURL=useOnGetState.js.map"]},"metadata":{},"sourceType":"module"}