{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport EnsureSingleNavigator from \"./EnsureSingleNavigator\";\nimport NavigationStateContext from \"./NavigationStateContext\";\nimport StaticContainer from \"./StaticContainer\";\nimport useOptionsGetters from \"./useOptionsGetters\";\nexport default function SceneView(_ref) {\n  var screen = _ref.screen,\n      route = _ref.route,\n      navigation = _ref.navigation,\n      routeState = _ref.routeState,\n      getState = _ref.getState,\n      setState = _ref.setState,\n      options = _ref.options,\n      clearOptions = _ref.clearOptions;\n  var navigatorKeyRef = React.useRef();\n  var getKey = React.useCallback(function () {\n    return navigatorKeyRef.current;\n  }, []);\n\n  var _useOptionsGetters = useOptionsGetters({\n    key: route.key,\n    options: options,\n    navigation: navigation\n  }),\n      addOptionsGetter = _useOptionsGetters.addOptionsGetter;\n\n  var setKey = React.useCallback(function (key) {\n    navigatorKeyRef.current = key;\n  }, []);\n  var getCurrentState = React.useCallback(function () {\n    var state = getState();\n    var currentRoute = state.routes.find(function (r) {\n      return r.key === route.key;\n    });\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n  var setCurrentState = React.useCallback(function (child) {\n    var state = getState();\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      routes: state.routes.map(function (r) {\n        return r.key === route.key ? _objectSpread(_objectSpread({}, r), {}, {\n          state: child\n        }) : r;\n      })\n    }));\n  }, [getState, route.key, setState]);\n  var isInitialRef = React.useRef(true);\n  React.useEffect(function () {\n    isInitialRef.current = false;\n  });\n  React.useEffect(function () {\n    return clearOptions;\n  }, []);\n  var getIsInitial = React.useCallback(function () {\n    return isInitialRef.current;\n  }, []);\n  var context = React.useMemo(function () {\n    return {\n      state: routeState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey: getKey,\n      setKey: setKey,\n      getIsInitial: getIsInitial,\n      addOptionsGetter: addOptionsGetter\n    };\n  }, [routeState, getCurrentState, setCurrentState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  var ScreenComponent = screen.getComponent ? screen.getComponent() : screen.component;\n  return React.createElement(NavigationStateContext.Provider, {\n    value: context\n  }, React.createElement(EnsureSingleNavigator, null, React.createElement(StaticContainer, {\n    name: screen.name,\n    render: ScreenComponent || screen.children,\n    navigation: navigation,\n    route: route\n  }, ScreenComponent !== undefined ? React.createElement(ScreenComponent, {\n    navigation: navigation,\n    route: route\n  }) : screen.children !== undefined ? screen.children({\n    navigation: navigation,\n    route: route\n  }) : null)));\n}","map":{"version":3,"mappings":"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","names":["React","EnsureSingleNavigator","NavigationStateContext","StaticContainer","useOptionsGetters","SceneView","_ref","screen","route","navigation","routeState","getState","setState","options","clearOptions","navigatorKeyRef","useRef","getKey","useCallback","current","key","addOptionsGetter","setKey","getCurrentState","state","currentRoute","routes","find","r","undefined","setCurrentState","map","child","isInitialRef","useEffect","getIsInitial","context","useMemo","ScreenComponent","getComponent","component","createElement","Provider","value","name","render","children"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-navigation/core/lib/module/SceneView.js"],"sourcesContent":["import * as React from 'react';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationStateContext from './NavigationStateContext';\nimport StaticContainer from './StaticContainer';\nimport useOptionsGetters from './useOptionsGetters';\n\n/**\n * Component which takes care of rendering the screen for a route.\n * It provides all required contexts and applies optimizations when applicable.\n */\nexport default function SceneView(_ref) {\n  let {\n    screen,\n    route,\n    navigation,\n    routeState,\n    getState,\n    setState,\n    options,\n    clearOptions\n  } = _ref;\n  const navigatorKeyRef = React.useRef();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n  const {\n    addOptionsGetter\n  } = useOptionsGetters({\n    key: route.key,\n    options,\n    navigation\n  });\n  const setKey = React.useCallback(key => {\n    navigatorKeyRef.current = key;\n  }, []);\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find(r => r.key === route.key);\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n  const setCurrentState = React.useCallback(child => {\n    const state = getState();\n    setState({ ...state,\n      routes: state.routes.map(r => r.key === route.key ? { ...r,\n        state: child\n      } : r)\n    });\n  }, [getState, route.key, setState]);\n  const isInitialRef = React.useRef(true);\n  React.useEffect(() => {\n    isInitialRef.current = false;\n  }); // Clear options set by this screen when it is unmounted\n\n  React.useEffect(() => {\n    return clearOptions; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n  const context = React.useMemo(() => ({\n    state: routeState,\n    getState: getCurrentState,\n    setState: setCurrentState,\n    getKey,\n    setKey,\n    getIsInitial,\n    addOptionsGetter\n  }), [routeState, getCurrentState, setCurrentState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  const ScreenComponent = screen.getComponent ? screen.getComponent() : screen.component;\n  return /*#__PURE__*/React.createElement(NavigationStateContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(EnsureSingleNavigator, null, /*#__PURE__*/React.createElement(StaticContainer, {\n    name: screen.name,\n    render: ScreenComponent || screen.children,\n    navigation: navigation,\n    route: route\n  }, ScreenComponent !== undefined ? /*#__PURE__*/React.createElement(ScreenComponent, {\n    navigation: navigation,\n    route: route\n  }) : screen.children !== undefined ? screen.children({\n    navigation,\n    route\n  }) : null)));\n}\n//# sourceMappingURL=SceneView.js.map"]},"metadata":{},"sourceType":"module"}