{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar getData = function getData(done) {\n  var jsonValue, data;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@spacebook_details'));\n\n        case 3:\n          jsonValue = _context.sent;\n          data = JSON.parse(jsonValue);\n          return _context.abrupt(\"return\", done(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n          return _context.abrupt(\"return\", null);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar FriendsScreen = function (_Component) {\n  _inherits(FriendsScreen, _Component);\n\n  var _super = _createSuper(FriendsScreen);\n\n  function FriendsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, FriendsScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: {},\n      friends: {}\n    };\n    return _this;\n  }\n\n  _createClass(FriendsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      getData(function (data) {\n        _this2.setState({\n          data: data\n        });\n\n        _this2.getFriends();\n\n        navigation.addListener('focus', function () {\n          _this2.getUserData();\n\n          _this2.getProfileImage();\n        });\n      });\n    }\n  }, {\n    key: \"getFriends\",\n    value: function getFriends() {\n      var _this3 = this;\n\n      var data = this.state.data;\n      fetch(\"http://localhost:3333/api/1.0.0/user/\" + data.id + \"/friends\", {\n        method: 'GET',\n        headers: {\n          'X-Authorization': data.token\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this3.setState({\n          friends: responseJson\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      var friends = this.state.friends;\n      return _jsxs(View, {\n        children: [_jsx(View, {\n          children: _jsx(FlatList, {\n            data: friends,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsxs(View, {\n                style: {\n                  borderWidth: 1,\n                  borderColor: 'gray'\n                },\n                children: [_jsx(Text, {\n                  children: item.user_id\n                }), _jsx(Text, {\n                  children: item.user_givenname\n                }), _jsx(Text, {\n                  children: item.user_familyname\n                })]\n              });\n            },\n            keyExtractor: function keyExtractor(item) {\n              return item.user_id;\n            }\n          })\n        }), _jsxs(View, {\n          children: [_jsx(Button, {\n            title: \"Find friends\",\n            onPress: function onPress() {\n              return navigation.navigate('FindFriends');\n            }\n          }), _jsx(Button, {\n            title: \"Friend requests\",\n            onPress: function onPress() {\n              return navigation.navigate('FriendRequests');\n            }\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return FriendsScreen;\n}(Component);\n\nFriendsScreen.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n    addListener: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default FriendsScreen;","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/FriendsScreen.js"],"names":["React","Component","AsyncStorage","PropTypes","getData","done","getItem","jsonValue","data","JSON","parse","console","log","FriendsScreen","props","state","friends","navigation","setState","getFriends","addListener","getUserData","getProfileImage","fetch","id","method","headers","token","then","response","json","responseJson","catch","error","item","borderWidth","borderColor","user_id","user_givenname","user_familyname","navigate","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, FlatList, Button } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getData = async (done) => {\r\n    try {\r\n        const jsonValue = await AsyncStorage.getItem('@spacebook_details');\r\n        const data = JSON.parse(jsonValue);\r\n        return done(data);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return null;\r\n};\r\n\r\nclass FriendsScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: {},\r\n            friends: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { navigation } = this.props;\r\n        getData((data) => {\r\n            this.setState({\r\n                data\r\n            });\r\n            this.getFriends();\r\n            navigation.addListener('focus', () => {\r\n                this.getUserData();\r\n                this.getProfileImage();\r\n            });\r\n        });\r\n    }\r\n\r\n    getFriends(){\r\n        const { data } = this.state; \r\n        fetch(`http://localhost:3333/api/1.0.0/user/${ data.id }/friends`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-Authorization': data.token\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            this.setState({\r\n                friends: responseJson\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { navigation } = this.props;\r\n        const { friends } = this.state;\r\n        return (\r\n            <View>\r\n                <View>\r\n                    <FlatList\r\n                        data={friends}\r\n                        renderItem={({item}) => (\r\n                            <View style={{borderWidth: 1, borderColor: 'gray'}}>\r\n                                <Text>{item.user_id}</Text>\r\n                                <Text>{item.user_givenname}</Text>\r\n                                <Text>{item.user_familyname}</Text>\r\n                            </View>\r\n                        )}\r\n                        keyExtractor={(item) => item.user_id}\r\n                    />\r\n                </View>\r\n                <View>  \r\n                    <Button title='Find friends' onPress={() => navigation.navigate('FindFriends')}/>   \r\n                    <Button title='Friend requests' onPress={() => navigation.navigate('FriendRequests')}/>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nFriendsScreen.propTypes = {\r\n    navigation: PropTypes.shape({\r\n        navigate: PropTypes.func.isRequired,\r\n        addListener: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default FriendsScreen;"]},"metadata":{},"sourceType":"module"}