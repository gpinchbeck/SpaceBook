{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar getData = function getData(done) {\n  var jsonValue, data;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@spacebook_details'));\n\n        case 3:\n          jsonValue = _context.sent;\n          data = JSON.parse(jsonValue);\n          return _context.abrupt(\"return\", done(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n          return _context.abrupt(\"return\", null);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar FindFreindsScreen = function (_Component) {\n  _inherits(FindFreindsScreen, _Component);\n\n  var _super = _createSuper(FindFreindsScreen);\n\n  function FindFreindsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, FindFreindsScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      searchText: '',\n      data: {},\n      users: []\n    };\n    return _this;\n  }\n\n  _createClass(FindFreindsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getData(function (data) {\n        _this2.setState({\n          data: data\n        });\n\n        _this2.getUsers();\n      });\n    }\n  }, {\n    key: \"getUsers\",\n    value: function getUsers() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          searchText = _this$state.searchText,\n          data = _this$state.data;\n      var url = \"http://localhost:3333/api/1.0.0/search\";\n\n      if (searchText !== '') {\n        url = url + \"?q=\" + searchText;\n      }\n\n      fetch(url, {\n        method: 'GET',\n        headers: {\n          'X-Authorization': data.token\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this3.setState({\n          users: responseJson\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          users = _this$state2.users,\n          searchText = _this$state2.searchText;\n      return _jsxs(View, {\n        children: [_jsxs(View, {\n          children: [_jsx(TextInput, {\n            placeholder: \"Search\",\n            onChangeText: this.setState({\n              searchText: searchText\n            }),\n            value: searchText\n          }), _jsx(Button, {\n            title: \"Search\",\n            onPress: function onPress() {\n              return _this4.getUsers();\n            }\n          })]\n        }), _jsx(View, {\n          children: _jsx(FlatList, {\n            extraData: users,\n            data: users,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsxs(View, {\n                children: [_jsxs(Text, {\n                  children: [item.user_givenname, \" \", item.user_familyname]\n                }), _jsx(Button, {\n                  title: \"Add\",\n                  onPress: function onPress() {\n                    return console.log('add');\n                  }\n                })]\n              });\n            },\n            keyExtractor: function keyExtractor(item) {\n              return item.user_id;\n            }\n          })\n        })]\n      });\n    }\n  }]);\n\n  return FindFreindsScreen;\n}(Component);\n\nexport default FindFreindsScreen;","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/FindFriendsScreen.js"],"names":["React","Component","AsyncStorage","getData","done","getItem","jsonValue","data","JSON","parse","console","log","FindFreindsScreen","props","state","searchText","users","setState","getUsers","url","fetch","method","headers","token","then","response","json","responseJson","item","user_givenname","user_familyname","user_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, FlatList, Button, TextInput } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst getData = async (done) => {\r\n    try {\r\n        const jsonValue = await AsyncStorage.getItem('@spacebook_details');\r\n        const data = JSON.parse(jsonValue);\r\n        return done(data);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return null;\r\n};\r\n\r\nclass FindFreindsScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchText: '',\r\n            data: {},\r\n            users: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        getData((data) => {\r\n            this.setState({\r\n                data\r\n            });\r\n            this.getUsers();\r\n        });\r\n    }\r\n\r\n    getUsers(){\r\n        const { searchText, data } = this.state;\r\n        let url = `http://localhost:3333/api/1.0.0/search`;\r\n        if (searchText !== ''){\r\n            url = `${ url }?q=${ searchText }`;\r\n        }\r\n        fetch(url,{\r\n            method: 'GET',\r\n            headers: {\r\n                'X-Authorization': data.token\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            this.setState({\r\n                users: responseJson\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { users, searchText } = this.state;\r\n        return(\r\n            <View>\r\n                <View>\r\n                    <TextInput placeholder='Search' onChangeText={this.setState({searchText})} value={searchText}/>\r\n                    <Button title='Search' onPress={() => this.getUsers()}/>\r\n                </View>\r\n                <View>\r\n                    <FlatList extraData={users} data={users}\r\n                        renderItem={({item}) => (\r\n                            <View>\r\n                                <Text>{item.user_givenname} {item.user_familyname}</Text>\r\n                                <Button title='Add' onPress={() => console.log('add')}/>\r\n                            </View>\r\n                        )}\r\n                        keyExtractor={(item) => item.user_id}\r\n                    />\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FindFreindsScreen;"]},"metadata":{},"sourceType":"module"}