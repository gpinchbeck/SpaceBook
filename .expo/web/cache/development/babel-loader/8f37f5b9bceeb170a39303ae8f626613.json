{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUpScreen = function (_Component) {\n  _inherits(SignUpScreen, _Component);\n\n  var _super = _createSuper(SignUpScreen);\n\n  function SignUpScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpScreen);\n\n    _this = _super.call(this, props);\n\n    _this.handleEmailInput = function (email) {\n      _this.setState({\n        email: email\n      });\n    };\n\n    _this.handlePasswordInput = function (password) {\n      _this.setState({\n        password: password\n      });\n    };\n\n    _this.state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(SignUpScreen, [{\n    key: \"signup\",\n    value: function signup() {\n      return fetch('http://localhost:3333/api/1.0.0/user', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          first_name: this.state.first_name,\n          last_name: this.state.last_name,\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(function (response) {\n        if (Platform.OS === 'web') {\n          alert('User created.');\n        } else {\n          Alert.alert('User created.');\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"First name...\",\n          onChangeText: function onChangeText(value) {\n            _this2.setState({\n              first_name: value\n            });\n          },\n          value: this.state.first_name\n        }), _jsx(TextInput, {\n          placeholder: \"Last name...\",\n          onChangeText: function onChangeText(value) {\n            _this2.setState({\n              last_name: value\n            });\n          },\n          value: this.state.last_name\n        }), _jsx(TextInput, {\n          placeholder: \"Email...\",\n          onChangeText: this.handleEmailInput,\n          value: this.state.email\n        }), _jsx(TextInput, {\n          placeholder: \"Password...\",\n          onChangeText: this.handlePasswordInput,\n          value: this.state.password\n        }), _jsx(Button, {\n          title: \"Sign Up\",\n          onPress: function onPress() {\n            _this2.signup();\n          }\n        })]\n      });\n    }\n  }]);\n\n  return SignUpScreen;\n}(Component);\n\nexport default SignUpScreen;","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/SignUpScreen.js"],"names":["React","Component","SignUpScreen","props","handleEmailInput","email","setState","handlePasswordInput","password","state","first_name","last_name","fetch","method","headers","body","JSON","stringify","then","response","Platform","OS","alert","Alert","catch","error","console","log","value","signup"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;IAGMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;;AADc,UAWlBC,gBAXkB,GAWC,UAACC,KAAD,EAAW;AAC1B,YAAKC,QAAL,CAAc;AAACD,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACH,KAbiB;;AAAA,UAelBE,mBAfkB,GAeI,UAACC,QAAD,EAAc;AAChC,YAAKF,QAAL,CAAc;AAACE,QAAAA,QAAQ,EAAEA;AAAX,OAAd;AACH,KAjBiB;;AAGd,UAAKC,KAAL,GAAW;AACPC,MAAAA,UAAU,EAAE,EADL;AAEPC,MAAAA,SAAS,EAAE,EAFJ;AAGPN,MAAAA,KAAK,EAAE,EAHA;AAIPG,MAAAA,QAAQ,EAAE;AAJH,KAAX;AAHc;AASjB;;;;WAUD,kBAAS;AACL,aAAOI,KAAK,CAAC,sCAAD,EAAyC;AACjDC,QAAAA,MAAM,EAAE,MADyC;AAEjDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFwC;AAKjDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBP,UAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UADN;AAEjBC,UAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SAFL;AAGjBN,UAAAA,KAAK,EAAE,KAAKI,KAAL,CAAWJ,KAHD;AAIjBG,UAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD;AAJJ,SAAf;AAL2C,OAAzC,CAAL,CAYNU,IAZM,CAYD,UAACC,QAAD,EAAc;AAChB,YAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA0B;AACtBC,UAAAA,KAAK,CAAC,eAAD,CAAL;AACH,SAFD,MAGK;AACDC,UAAAA,KAAK,CAACD,KAAN,CAAY,eAAZ;AACH;AACJ,OAnBM,EAoBNE,KApBM,CAoBA,UAACC,KAAD,EAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAtBM,CAAP;AAuBH;;;WAED,kBAAQ;AAAA;;AACJ,aACI,MAAC,IAAD;AAAA,mBACI,KAAC,SAAD;AAAW,UAAA,WAAW,EAAC,eAAvB;AAAuC,UAAA,YAAY,EAAE,sBAAAG,KAAK,EAAI;AAAC,YAAA,MAAI,CAACtB,QAAL,CAAc;AAACI,cAAAA,UAAU,EAAEkB;AAAb,aAAd;AAAmC,WAAlG;AAAoG,UAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC;AAAtH,UADJ,EAEI,KAAC,SAAD;AAAW,UAAA,WAAW,EAAC,cAAvB;AAAsC,UAAA,YAAY,EAAE,sBAAAkB,KAAK,EAAI;AAAC,YAAA,MAAI,CAACtB,QAAL,CAAc;AAACK,cAAAA,SAAS,EAAEiB;AAAZ,aAAd;AAAkC,WAAhG;AAAkG,UAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE;AAApH,UAFJ,EAGI,KAAC,SAAD;AAAW,UAAA,WAAW,EAAC,UAAvB;AAAkC,UAAA,YAAY,EAAE,KAAKP,gBAArD;AAAuE,UAAA,KAAK,EAAE,KAAKK,KAAL,CAAWJ;AAAzF,UAHJ,EAII,KAAC,SAAD;AAAW,UAAA,WAAW,EAAC,aAAvB;AAAqC,UAAA,YAAY,EAAE,KAAKE,mBAAxD;AAA6E,UAAA,KAAK,EAAE,KAAKE,KAAL,CAAWD;AAA/F,UAJJ,EAKI,KAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAE,mBAAM;AAAC,YAAA,MAAI,CAACqB,MAAL;AAAc;AAAtD,UALJ;AAAA,QADJ;AASH;;;;EAxDsB5B,S;;AA2D3B,eAAeC,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, Button, Platform, Text, TextInput, View } from 'react-native';\r\n\r\nclass SignUpScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleEmailInput = (email) => {\r\n        this.setState({email: email});\r\n    }\r\n\r\n    handlePasswordInput = (password) => {\r\n        this.setState({password: password});\r\n    }\r\n\r\n    signup() {\r\n        return fetch('http://localhost:3333/api/1.0.0/user', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                first_name: this.state.first_name,\r\n                last_name: this.state.last_name,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        })\r\n        .then((response) => {\r\n            if (Platform.OS === 'web'){\r\n                alert('User created.');\r\n            }\r\n            else {\r\n                Alert.alert('User created.')\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <View>\r\n                <TextInput placeholder='First name...' onChangeText={value => {this.setState({first_name: value})}} value={this.state.first_name}/>\r\n                <TextInput placeholder='Last name...' onChangeText={value => {this.setState({last_name: value})}} value={this.state.last_name}/>\r\n                <TextInput placeholder='Email...' onChangeText={this.handleEmailInput} value={this.state.email}/>\r\n                <TextInput placeholder='Password...' onChangeText={this.handlePasswordInput} value={this.state.password}/>\r\n                <Button title='Sign Up' onPress={() => {this.signup()}}/>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUpScreen;"]},"metadata":{},"sourceType":"module"}