{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { CodedError, Platform } from 'expo-modules-core';\nimport FontObserver from 'fontfaceobserver';\nimport { FontDisplay } from \"./Font.types\";\n\nfunction getFontFaceStyleSheet() {\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n\n  var styleSheet = getStyleElement();\n  return styleSheet.sheet ? styleSheet.sheet : null;\n}\n\nfunction getFontFaceRules() {\n  var sheet = getFontFaceStyleSheet();\n\n  if (sheet) {\n    var rules = _toConsumableArray(sheet.cssRules);\n\n    var items = [];\n\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i];\n\n      if (rule instanceof CSSFontFaceRule) {\n        items.push({\n          rule: rule,\n          index: i\n        });\n      }\n    }\n\n    return items;\n  }\n\n  return [];\n}\n\nfunction getFontFaceRulesMatchingResource(fontFamilyName, options) {\n  var rules = getFontFaceRules();\n  return rules.filter(function (_ref) {\n    var rule = _ref.rule;\n    return rule.style.fontFamily === fontFamilyName && (options && options.display ? options.display === rule.style.fontDisplay : true);\n  });\n}\n\nexport default {\n  get name() {\n    return 'ExpoFontLoader';\n  },\n\n  unloadAllAsync: function unloadAllAsync() {\n    return function _callee() {\n      var element;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (Platform.isDOMAvailable) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              element = document.getElementById(ID);\n\n              if (element && element instanceof HTMLStyleElement) {\n                document.removeChild(element);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  unloadAsync: function unloadAsync(fontFamilyName, options) {\n    return function _callee2() {\n      var sheet, items, _iterator, _step, item;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              sheet = getFontFaceStyleSheet();\n\n              if (sheet) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n\n              for (_iterator = _createForOfIteratorHelperLoose(items); !(_step = _iterator()).done;) {\n                item = _step.value;\n                sheet.deleteRule(item.index);\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  loadAsync: function loadAsync(fontFamilyName, resource) {\n    return function _callee3() {\n      var canInjectStyle, style;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (Platform.isDOMAvailable) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 2:\n              canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n\n              if (canInjectStyle) {\n                _context3.next = 5;\n                break;\n              }\n\n              throw new CodedError('ERR_WEB_ENVIRONMENT', \"The browser's `document.head` element doesn't support injecting fonts.\");\n\n            case 5:\n              style = _createWebStyle(fontFamilyName, resource);\n              document.head.appendChild(style);\n\n              if (isFontLoadingListenerSupported()) {\n                _context3.next = 9;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 9:\n              return _context3.abrupt(\"return\", new FontObserver(fontFamilyName, {\n                display: resource.display\n              }).load());\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};\nvar ID = 'expo-generated-fonts';\n\nfunction getStyleElement() {\n  var element = document.getElementById(ID);\n\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n\n  var styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\n\nfunction _createWebStyle(fontFamily, resource) {\n  var fontStyle = \"@font-face {\\n    font-family: \" + fontFamily + \";\\n    src: url(\" + resource.uri + \");\\n    font-display: \" + (resource.display || FontDisplay.AUTO) + \";\\n  }\";\n  var styleElement = getStyleElement();\n\n  if (styleElement.styleSheet) {\n    var styleElementIE = styleElement;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText ? styleElementIE.styleSheet.cssText + fontStyle : fontStyle;\n  } else {\n    var textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n\n  return styleElement;\n}\n\nfunction isFontLoadingListenerSupported() {\n  var userAgent = window.navigator.userAgent;\n  var isIOS = !!userAgent.match(/iPad|iPhone/i);\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  var isEdge = userAgent.includes('Edge');\n  var isIE = userAgent.includes('Trident');\n  var isFirefox = userAgent.includes('Firefox');\n  return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}","map":{"version":3,"mappings":"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","names":["CodedError","Platform","FontObserver","FontDisplay","getFontFaceStyleSheet","isDOMAvailable","styleSheet","getStyleElement","sheet","getFontFaceRules","rules","cssRules","items","i","length","rule","CSSFontFaceRule","push","index","getFontFaceRulesMatchingResource","fontFamilyName","options","filter","style","fontFamily","display","fontDisplay","name","unloadAllAsync","element","document","getElementById","ID","HTMLStyleElement","removeChild","unloadAsync","item","deleteRule","loadAsync","resource","canInjectStyle","head","appendChild","_createWebStyle","isFontLoadingListenerSupported","load","styleElement","createElement","id","type","fontStyle","uri","AUTO","styleElementIE","cssText","textNode","createTextNode","userAgent","window","navigator","isIOS","match","isSafari","test","isEdge","includes","isIE","isFirefox"],"sourceRoot":"","sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/expo-font/build/ExpoFontLoader.web.js"],"sourcesContent":["import { CodedError, Platform } from 'expo-modules-core';\nimport FontObserver from 'fontfaceobserver';\nimport { FontDisplay } from './Font.types';\nfunction getFontFaceStyleSheet() {\n    if (!Platform.isDOMAvailable) {\n        return null;\n    }\n    const styleSheet = getStyleElement();\n    return styleSheet.sheet ? styleSheet.sheet : null;\n}\nfunction getFontFaceRules() {\n    const sheet = getFontFaceStyleSheet();\n    if (sheet) {\n        // @ts-ignore: rule iterator\n        const rules = [...sheet.cssRules];\n        const items = [];\n        for (let i = 0; i < rules.length; i++) {\n            const rule = rules[i];\n            if (rule instanceof CSSFontFaceRule) {\n                items.push({ rule, index: i });\n            }\n        }\n        return items;\n    }\n    return [];\n}\nfunction getFontFaceRulesMatchingResource(fontFamilyName, options) {\n    const rules = getFontFaceRules();\n    return rules.filter(({ rule }) => {\n        return (rule.style.fontFamily === fontFamilyName &&\n            (options && options.display ? options.display === rule.style.fontDisplay : true));\n    });\n}\nexport default {\n    get name() {\n        return 'ExpoFontLoader';\n    },\n    async unloadAllAsync() {\n        if (!Platform.isDOMAvailable)\n            return;\n        const element = document.getElementById(ID);\n        if (element && element instanceof HTMLStyleElement) {\n            document.removeChild(element);\n        }\n    },\n    async unloadAsync(fontFamilyName, options) {\n        const sheet = getFontFaceStyleSheet();\n        if (!sheet)\n            return;\n        const items = getFontFaceRulesMatchingResource(fontFamilyName, options);\n        for (const item of items) {\n            sheet.deleteRule(item.index);\n        }\n    },\n    async loadAsync(fontFamilyName, resource) {\n        if (!Platform.isDOMAvailable) {\n            return;\n        }\n        const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n        if (!canInjectStyle) {\n            throw new CodedError('ERR_WEB_ENVIRONMENT', `The browser's \\`document.head\\` element doesn't support injecting fonts.`);\n        }\n        const style = _createWebStyle(fontFamilyName, resource);\n        document.head.appendChild(style);\n        if (!isFontLoadingListenerSupported()) {\n            return;\n        }\n        return new FontObserver(fontFamilyName, { display: resource.display }).load();\n    },\n};\nconst ID = 'expo-generated-fonts';\nfunction getStyleElement() {\n    const element = document.getElementById(ID);\n    if (element && element instanceof HTMLStyleElement) {\n        return element;\n    }\n    const styleElement = document.createElement('style');\n    styleElement.id = ID;\n    styleElement.type = 'text/css';\n    return styleElement;\n}\nfunction _createWebStyle(fontFamily, resource) {\n    const fontStyle = `@font-face {\n    font-family: ${fontFamily};\n    src: url(${resource.uri});\n    font-display: ${resource.display || FontDisplay.AUTO};\n  }`;\n    const styleElement = getStyleElement();\n    // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n    // possibly can be removed if it's unnecessary on IE 11.\n    if (styleElement.styleSheet) {\n        const styleElementIE = styleElement;\n        styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText\n            ? styleElementIE.styleSheet.cssText + fontStyle\n            : fontStyle;\n    }\n    else {\n        const textNode = document.createTextNode(fontStyle);\n        styleElement.appendChild(textNode);\n    }\n    return styleElement;\n}\nfunction isFontLoadingListenerSupported() {\n    const { userAgent } = window.navigator;\n    // WebKit is broken https://github.com/bramstein/fontfaceobserver/issues/95\n    const isIOS = !!userAgent.match(/iPad|iPhone/i);\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    // Edge is broken https://github.com/bramstein/fontfaceobserver/issues/109#issuecomment-333356795\n    const isEdge = userAgent.includes('Edge');\n    // Internet Explorer\n    const isIE = userAgent.includes('Trident');\n    // Firefox\n    const isFirefox = userAgent.includes('Firefox');\n    return !isSafari && !isIOS && !isEdge && !isIE && !isFirefox;\n}\n//# sourceMappingURL=ExpoFontLoader.web.js.map"]},"metadata":{},"sourceType":"module"}