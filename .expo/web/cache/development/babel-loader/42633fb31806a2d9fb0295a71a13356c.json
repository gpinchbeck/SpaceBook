{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useKeyboardBottomInset = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar useKeyboardBottomInset = function useKeyboardBottomInset() {\n  var _React$useState = React.useState(0),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      bottom = _React$useState2[0],\n      setBottom = _React$useState2[1];\n\n  var subscriptions = React.useRef([]);\n  React.useEffect(function () {\n    function onKeyboardChange(e) {\n      if (e.startCoordinates && e.endCoordinates.screenY < e.startCoordinates.screenY) setBottom(e.endCoordinates.height / 2);else setBottom(0);\n    }\n\n    if (_reactNative.Platform.OS === 'ios') {\n      subscriptions.current = [_reactNative.Keyboard.addListener('keyboardWillChangeFrame', onKeyboardChange)];\n    } else {\n      subscriptions.current = [_reactNative.Keyboard.addListener('keyboardDidHide', onKeyboardChange), _reactNative.Keyboard.addListener('keyboardDidShow', onKeyboardChange)];\n    }\n\n    return function () {\n      subscriptions.current.forEach(function (subscription) {\n        subscription.remove();\n      });\n    };\n  }, [setBottom, subscriptions]);\n  return bottom;\n};\n\nexports.useKeyboardBottomInset = useKeyboardBottomInset;","map":{"version":3,"mappings":"AAAA,IAAIA,uBAAuB,GAACC,OAAO,CAAC,+CAAD,CAAnC;;AAAqF,IAAIC,sBAAsB,GAACD,OAAO,CAAC,8CAAD,CAAlC;;AAAmFE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,YAA9B,EAA2C;AAACC,OAAK,EAAC;AAAP,CAA3C;AAAyDD,OAAO,CAACE,sBAAR,GAA+B,KAAK,CAApC;;AAAsC,IAAIC,eAAe,GAACN,sBAAsB,CAACD,OAAO,CAAC,sCAAD,CAAR,CAA1C;;AAA4F,IAAIQ,KAAK,GAACT,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAjC;;;;AAA6F,IAAIM,sBAAsB,GAAC,SAASA,sBAAT,GAAiC;AAAC,MAAIG,eAAe,GAACD,KAAK,CAACE,QAAN,CAAe,CAAf,CAApB;AAAA,MAAsCC,gBAAgB,GAAC,CAAC,GAAEJ,eAAe,CAACK,OAAnB,EAA4BH,eAA5B,EAA4C,CAA5C,CAAvD;AAAA,MAAsGI,MAAM,GAACF,gBAAgB,CAAC,CAAD,CAA7H;AAAA,MAAiIG,SAAS,GAACH,gBAAgB,CAAC,CAAD,CAA3J;;AAA+J,MAAII,aAAa,GAACP,KAAK,CAACQ,MAAN,CAAa,EAAb,CAAlB;AAAmCR,OAAK,CAACS,SAAN,CAAgB,YAAU;AAAC,aAASC,gBAAT,CAA0BC,CAA1B,EAA4B;AAAC,UAAGA,CAAC,CAACC,gBAAF,IAAoBD,CAAC,CAACE,cAAF,CAAiBC,OAAjB,GAAyBH,CAAC,CAACC,gBAAF,CAAmBE,OAAnE,EAA2ER,SAAS,CAACK,CAAC,CAACE,cAAF,CAAiBE,MAAjB,GAAwB,CAAzB,CAAT,CAA3E,KAAqHT,SAAS,CAAC,CAAD,CAAT;AAAc;;AAAA,QAAGU,YAAY,CAACC,QAAb,CAAsBC,EAAtB,KAA2B,KAA9B,EAAoC;AAACX,mBAAa,CAACY,OAAd,GAAsB,CAACH,YAAY,CAACI,QAAb,CAAsBC,WAAtB,CAAkC,yBAAlC,EAA4DX,gBAA5D,CAAD,CAAtB;AAAuG,KAA5I,MAAgJ;AAACH,mBAAa,CAACY,OAAd,GAAsB,CAACH,YAAY,CAACI,QAAb,CAAsBC,WAAtB,CAAkC,iBAAlC,EAAoDX,gBAApD,CAAD,EAAuEM,YAAY,CAACI,QAAb,CAAsBC,WAAtB,CAAkC,iBAAlC,EAAoDX,gBAApD,CAAvE,CAAtB;AAAqK;;AAAA,WAAO,YAAU;AAACH,mBAAa,CAACY,OAAd,CAAsBG,OAAtB,CAA8B,UAASC,YAAT,EAAsB;AAACA,oBAAY,CAACC,MAAb;AAAuB,OAA5E;AAA+E,KAAjG;AAAmG,GAAplB,EAAqlB,CAAClB,SAAD,EAAWC,aAAX,CAArlB;AAAgnB,SAAOF,MAAP;AAAe,CAA93B;;AAA+3BT,OAAO,CAACE,sBAAR,GAA+BA,sBAA/B","names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","useKeyboardBottomInset","_slicedToArray2","React","_React$useState","useState","_React$useState2","default","bottom","setBottom","subscriptions","useRef","useEffect","onKeyboardChange","e","startCoordinates","endCoordinates","screenY","height","_reactNative","Platform","OS","current","Keyboard","addListener","forEach","subscription","remove"],"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/native-base/lib/commonjs/utils/useKeyboardBottomInset.js"],"sourcesContent":["var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useKeyboardBottomInset=void 0;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var useKeyboardBottomInset=function useKeyboardBottomInset(){var _React$useState=React.useState(0),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),bottom=_React$useState2[0],setBottom=_React$useState2[1];var subscriptions=React.useRef([]);React.useEffect(function(){function onKeyboardChange(e){if(e.startCoordinates&&e.endCoordinates.screenY<e.startCoordinates.screenY)setBottom(e.endCoordinates.height/2);else setBottom(0);}if(_reactNative.Platform.OS==='ios'){subscriptions.current=[_reactNative.Keyboard.addListener('keyboardWillChangeFrame',onKeyboardChange)];}else{subscriptions.current=[_reactNative.Keyboard.addListener('keyboardDidHide',onKeyboardChange),_reactNative.Keyboard.addListener('keyboardDidShow',onKeyboardChange)];}return function(){subscriptions.current.forEach(function(subscription){subscription.remove();});};},[setBottom,subscriptions]);return bottom;};exports.useKeyboardBottomInset=useKeyboardBottomInset;\n//# sourceMappingURL=useKeyboardBottomInset.js.map"]},"metadata":{},"sourceType":"script"}