{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useControlledState as $bk5pn$useControlledState } from \"@react-stately/utils\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $a67f6fc5ad4ce17c$exports = {};\n$parcel$export($a67f6fc5ad4ce17c$exports, \"useCheckboxGroupState\", function () {\n  return $a67f6fc5ad4ce17c$export$daff6da51032a415;\n});\n\nfunction $a67f6fc5ad4ce17c$export$daff6da51032a415() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _$bk5pn$useControlled = $bk5pn$useControlledState(props.value, props.defaultValue || [], props.onChange),\n      _$bk5pn$useControlled2 = _slicedToArray(_$bk5pn$useControlled, 2),\n      selectedValues = _$bk5pn$useControlled2[0],\n      _setValue = _$bk5pn$useControlled2[1];\n\n  var state = {\n    value: selectedValues,\n    setValue: function setValue(value) {\n      if (props.isReadOnly || props.isDisabled) return;\n\n      _setValue(value);\n    },\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false,\n    isSelected: function isSelected(value) {\n      return selectedValues.includes(value);\n    },\n    addValue: function addValue(value) {\n      if (props.isReadOnly || props.isDisabled) return;\n      if (!selectedValues.includes(value)) _setValue(selectedValues.concat(value));\n    },\n    removeValue: function removeValue(value) {\n      if (props.isReadOnly || props.isDisabled) return;\n      if (selectedValues.includes(value)) _setValue(selectedValues.filter(function (existingValue) {\n        return existingValue !== value;\n      }));\n    },\n    toggleValue: function toggleValue(value) {\n      if (props.isReadOnly || props.isDisabled) return;\n      if (selectedValues.includes(value)) _setValue(selectedValues.filter(function (existingValue) {\n        return existingValue !== value;\n      }));else _setValue(selectedValues.concat(value));\n    }\n  };\n  return state;\n}\n\nexport { $a67f6fc5ad4ce17c$export$daff6da51032a415 as useCheckboxGroupState };","map":{"version":3,"mappings":";AAAA,SAAQA,kBAAkB,IAAIC,yBAA9B,QAA8D,sBAA9D;;AAEA,SAASC,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8BC,CAA9B,EAAiCC,CAAjC,EAAoC;AAClCC,QAAM,CAACC,cAAP,CAAsBL,CAAtB,EAAyBC,CAAzB,EAA4B;AAACK,OAAG,EAAEJ,CAAN;AAASK,OAAG,EAAEJ,CAAd;AAAiBK,cAAU,EAAE,IAA7B;AAAmCC,gBAAY,EAAE;AAAjD,GAA5B;AACD;;AACD,IAAIC,yBAAyB,GAAG,EAAhC;AAEAX,cAAc,CAACW,yBAAD,EAA4B,uBAA5B,EAAqD;AAAA,SAAMC,yCAAN;AAAA,CAArD,CAAd;;AAEA,SAASA,yCAAT,GACG;AAAA,MADgDC,KAChD,uEADwD,EACxD;;AACC,8BAAiCd,yBAAyB,CAACc,KAAK,CAACC,KAAP,EAAcD,KAAK,CAACE,YAAN,IAAsB,EAApC,EAAwCF,KAAK,CAACG,QAA9C,CAA1D;AAAA;AAAA,MAAKC,cAAL;AAAA,MAAqBC,SAArB;;AACA,MAAMC,KAAK,GAAG;AACVL,SAAK,EAAEG,cADG;AAEVC,YAFU,oBAEAJ,KAFA,EAEO;AACb,UAAID,KAAK,CAACO,UAAN,IAAoBP,KAAK,CAACQ,UAA9B,EAA0C;;AAC1CH,eAAQ,CAACJ,KAAD,CAAR;AACH,KALS;AAMVO,cAAU,EAAER,KAAK,CAACQ,UAAN,IAAoB,KANtB;AAOVD,cAAU,EAAEP,KAAK,CAACO,UAAN,IAAoB,KAPtB;AAQVE,cARU,sBAQER,KARF,EAQS;AACf,aAAOG,cAAc,CAACM,QAAf,CAAwBT,KAAxB,CAAP;AACH,KAVS;AAWVU,YAXU,oBAWAV,KAXA,EAWO;AACb,UAAID,KAAK,CAACO,UAAN,IAAoBP,KAAK,CAACQ,UAA9B,EAA0C;AAC1C,UAAI,CAACJ,cAAc,CAACM,QAAf,CAAwBT,KAAxB,CAAL,EAAqCI,SAAQ,CAACD,cAAc,CAACQ,MAAf,CAAsBX,KAAtB,CAAD,CAAR;AACxC,KAdS;AAeVY,eAfU,uBAeGZ,KAfH,EAeU;AAChB,UAAID,KAAK,CAACO,UAAN,IAAoBP,KAAK,CAACQ,UAA9B,EAA0C;AAC1C,UAAIJ,cAAc,CAACM,QAAf,CAAwBT,KAAxB,CAAJ,EAAoCI,SAAQ,CAACD,cAAc,CAACU,MAAf,CAAsB,UAACC,aAAD;AAAA,eAAiBA,aAAa,KAAKd,KAAnC;AAAA,OAAtB,CAAD,CAAR;AAEvC,KAnBS;AAoBVe,eApBU,uBAoBGf,KApBH,EAoBU;AAChB,UAAID,KAAK,CAACO,UAAN,IAAoBP,KAAK,CAACQ,UAA9B,EAA0C;AAC1C,UAAIJ,cAAc,CAACM,QAAf,CAAwBT,KAAxB,CAAJ,EAAoCI,SAAQ,CAACD,cAAc,CAACU,MAAf,CAAsB,UAACC,aAAD;AAAA,eAAiBA,aAAa,KAAKd,KAAnC;AAAA,OAAtB,CAAD,CAAR,CAApC,KAEKI,SAAQ,CAACD,cAAc,CAACQ,MAAf,CAAsBX,KAAtB,CAAD,CAAR;AACR;AAzBS,GAAd;AA2BA,SAAOK,KAAP;AACH;;AAKD,SAAQP,yCAAyC,IAAIkB,qBAArD","names":["useControlledState","$bk5pn$useControlledState","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$a67f6fc5ad4ce17c$exports","$a67f6fc5ad4ce17c$export$daff6da51032a415","props","value","defaultValue","onChange","selectedValues","setValue","state","isReadOnly","isDisabled","isSelected","includes","addValue","concat","removeValue","filter","existingValue","toggleValue","useCheckboxGroupState"],"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/@react-stately/checkbox/dist/module.js"],"sourcesContent":["import {useControlledState as $bk5pn$useControlledState} from \"@react-stately/utils\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $a67f6fc5ad4ce17c$exports = {};\n\n$parcel$export($a67f6fc5ad4ce17c$exports, \"useCheckboxGroupState\", () => $a67f6fc5ad4ce17c$export$daff6da51032a415);\n\nfunction $a67f6fc5ad4ce17c$export$daff6da51032a415(props = {\n}) {\n    let [selectedValues, setValue] = $bk5pn$useControlledState(props.value, props.defaultValue || [], props.onChange);\n    const state = {\n        value: selectedValues,\n        setValue (value) {\n            if (props.isReadOnly || props.isDisabled) return;\n            setValue(value);\n        },\n        isDisabled: props.isDisabled || false,\n        isReadOnly: props.isReadOnly || false,\n        isSelected (value) {\n            return selectedValues.includes(value);\n        },\n        addValue (value) {\n            if (props.isReadOnly || props.isDisabled) return;\n            if (!selectedValues.includes(value)) setValue(selectedValues.concat(value));\n        },\n        removeValue (value) {\n            if (props.isReadOnly || props.isDisabled) return;\n            if (selectedValues.includes(value)) setValue(selectedValues.filter((existingValue)=>existingValue !== value\n            ));\n        },\n        toggleValue (value) {\n            if (props.isReadOnly || props.isDisabled) return;\n            if (selectedValues.includes(value)) setValue(selectedValues.filter((existingValue)=>existingValue !== value\n            ));\n            else setValue(selectedValues.concat(value));\n        }\n    };\n    return state;\n}\n\n\n\n\nexport {$a67f6fc5ad4ce17c$export$daff6da51032a415 as useCheckboxGroupState};\n//# sourceMappingURL=module.js.map\n"]},"metadata":{},"sourceType":"module"}