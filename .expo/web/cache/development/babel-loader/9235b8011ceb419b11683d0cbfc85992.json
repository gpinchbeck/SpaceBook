{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState as $11sjw$useState, useRef as $11sjw$useRef, useCallback as $11sjw$useCallback } from \"react\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $bfee1151ccb0650f$exports = {};\n$parcel$export($bfee1151ccb0650f$exports, \"useControlledState\", function () {\n  return $bfee1151ccb0650f$export$40bfa8c7b0832715;\n});\n\nfunction $bfee1151ccb0650f$export$40bfa8c7b0832715(value1, defaultValue, onChange) {\n  var _$11sjw$useState = $11sjw$useState(value1 || defaultValue),\n      _$11sjw$useState2 = _slicedToArray(_$11sjw$useState, 2),\n      stateValue = _$11sjw$useState2[0],\n      setStateValue = _$11sjw$useState2[1];\n\n  var ref = $11sjw$useRef(value1 !== undefined);\n  var wasControlled = ref.current;\n  var isControlled = value1 !== undefined;\n  var stateRef = $11sjw$useRef(stateValue);\n  if (wasControlled !== isControlled) console.warn(\"WARN: A component changed from \" + (wasControlled ? 'controlled' : 'uncontrolled') + \" to \" + (isControlled ? 'controlled' : 'uncontrolled') + \".\");\n  ref.current = isControlled;\n  var setValue = $11sjw$useCallback(function (value2) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var onChangeCaller = function onChangeCaller(value) {\n      if (onChange) {\n        for (var _len2 = arguments.length, onChangeArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          onChangeArgs[_key2 - 1] = arguments[_key2];\n        }\n\n        if (!Object.is(stateRef.current, value)) onChange.apply(void 0, [value].concat(onChangeArgs));\n      }\n\n      if (!isControlled) stateRef.current = value;\n    };\n\n    if (typeof value2 === 'function') {\n      console.warn('We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320');\n\n      var updateFunction = function updateFunction(oldValue) {\n        for (var _len3 = arguments.length, functionArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          functionArgs[_key3 - 1] = arguments[_key3];\n        }\n\n        var interceptedValue = value2.apply(void 0, [isControlled ? stateRef.current : oldValue].concat(functionArgs));\n        onChangeCaller.apply(void 0, [interceptedValue].concat(args));\n        if (!isControlled) return interceptedValue;\n        return oldValue;\n      };\n\n      setStateValue(updateFunction);\n    } else {\n      if (!isControlled) setStateValue(value2);\n      onChangeCaller.apply(void 0, [value2].concat(args));\n    }\n  }, [isControlled, onChange]);\n  if (isControlled) stateRef.current = value1;else value1 = stateValue;\n  return [value1, setValue];\n}\n\nvar $48d9f1d165180307$exports = {};\n$parcel$export($48d9f1d165180307$exports, \"clamp\", function () {\n  return $48d9f1d165180307$export$7d15b64cf5a3a4c4;\n});\n$parcel$export($48d9f1d165180307$exports, \"snapValueToStep\", function () {\n  return $48d9f1d165180307$export$cb6e0bb50bc19463;\n});\n$parcel$export($48d9f1d165180307$exports, \"toFixedNumber\", function () {\n  return $48d9f1d165180307$export$b6268554fba451f;\n});\n\nfunction $48d9f1d165180307$export$7d15b64cf5a3a4c4(value) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -Infinity;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;\n  var newValue = Math.min(Math.max(value, min), max);\n  return newValue;\n}\n\nfunction $48d9f1d165180307$export$cb6e0bb50bc19463(value, min, max, step) {\n  var remainder = (value - (isNaN(min) ? 0 : min)) % step;\n  var snappedValue = Math.abs(remainder) * 2 >= step ? value + Math.sign(remainder) * (step - Math.abs(remainder)) : value - remainder;\n\n  if (!isNaN(min)) {\n    if (snappedValue < min) snappedValue = min;else if (!isNaN(max) && snappedValue > max) snappedValue = min + Math.floor((max - min) / step) * step;\n  } else if (!isNaN(max) && snappedValue > max) snappedValue = Math.floor(max / step) * step;\n\n  var string = step.toString();\n  var index = string.indexOf('.');\n  var precision = index >= 0 ? string.length - index : 0;\n\n  if (precision > 0) {\n    var pow = Math.pow(10, precision);\n    snappedValue = Math.round(snappedValue * pow) / pow;\n  }\n\n  return snappedValue;\n}\n\nfunction $48d9f1d165180307$export$b6268554fba451f(value, digits) {\n  var base = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n  var pow = Math.pow(base, digits);\n  return Math.round(value * pow) / pow;\n}\n\nexport { $bfee1151ccb0650f$export$40bfa8c7b0832715 as useControlledState, $48d9f1d165180307$export$7d15b64cf5a3a4c4 as clamp, $48d9f1d165180307$export$cb6e0bb50bc19463 as snapValueToStep, $48d9f1d165180307$export$b6268554fba451f as toFixedNumber };","map":{"version":3,"mappings":"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","names":["useState","$11sjw$useState","useRef","$11sjw$useRef","useCallback","$11sjw$useCallback","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$bfee1151ccb0650f$exports","$bfee1151ccb0650f$export$40bfa8c7b0832715","value1","defaultValue","onChange","stateValue","setStateValue","ref","undefined","wasControlled","current","isControlled","stateRef","console","warn","setValue","value2","args","onChangeCaller","value","onChangeArgs","is","updateFunction","oldValue","functionArgs","interceptedValue","$48d9f1d165180307$exports","$48d9f1d165180307$export$7d15b64cf5a3a4c4","$48d9f1d165180307$export$cb6e0bb50bc19463","$48d9f1d165180307$export$b6268554fba451f","min","Infinity","max","newValue","Math","step","remainder","isNaN","snappedValue","abs","sign","floor","string","toString","index","indexOf","precision","length","pow","round","digits","base","useControlledState","clamp","snapValueToStep","toFixedNumber"],"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/@react-stately/utils/dist/module.js"],"sourcesContent":["import {useState as $11sjw$useState, useRef as $11sjw$useRef, useCallback as $11sjw$useCallback} from \"react\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $bfee1151ccb0650f$exports = {};\n\n$parcel$export($bfee1151ccb0650f$exports, \"useControlledState\", () => $bfee1151ccb0650f$export$40bfa8c7b0832715);\n\nfunction $bfee1151ccb0650f$export$40bfa8c7b0832715(value1, defaultValue, onChange) {\n    let [stateValue, setStateValue] = $11sjw$useState(value1 || defaultValue);\n    let ref = $11sjw$useRef(value1 !== undefined);\n    let wasControlled = ref.current;\n    let isControlled = value1 !== undefined;\n    // Internal state reference for useCallback\n    let stateRef = $11sjw$useRef(stateValue);\n    if (wasControlled !== isControlled) console.warn(`WARN: A component changed from ${wasControlled ? 'controlled' : 'uncontrolled'} to ${isControlled ? 'controlled' : 'uncontrolled'}.`);\n    ref.current = isControlled;\n    let setValue = $11sjw$useCallback((value2, ...args)=>{\n        let onChangeCaller = (value, ...onChangeArgs)=>{\n            if (onChange) {\n                if (!Object.is(stateRef.current, value)) onChange(value, ...onChangeArgs);\n            }\n            if (!isControlled) stateRef.current = value;\n        };\n        if (typeof value2 === 'function') {\n            console.warn('We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320');\n            // this supports functional updates https://reactjs.org/docs/hooks-reference.html#functional-updates\n            // when someone using useControlledState calls setControlledState(myFunc)\n            // this will call our useState setState with a function as well which invokes myFunc and calls onChange with the value from myFunc\n            // if we're in an uncontrolled state, then we also return the value of myFunc which to setState looks as though it was just called with myFunc from the beginning\n            // otherwise we just return the controlled value, which won't cause a rerender because React knows to bail out when the value is the same\n            let updateFunction = (oldValue, ...functionArgs)=>{\n                let interceptedValue = value2(isControlled ? stateRef.current : oldValue, ...functionArgs);\n                onChangeCaller(interceptedValue, ...args);\n                if (!isControlled) return interceptedValue;\n                return oldValue;\n            };\n            setStateValue(updateFunction);\n        } else {\n            if (!isControlled) setStateValue(value2);\n            onChangeCaller(value2, ...args);\n        }\n    }, [\n        isControlled,\n        onChange\n    ]);\n    // If a controlled component's value prop changes, we need to update stateRef\n    if (isControlled) stateRef.current = value1;\n    else value1 = stateValue;\n    return [\n        value1,\n        setValue\n    ];\n}\n\n\nvar $48d9f1d165180307$exports = {};\n\n$parcel$export($48d9f1d165180307$exports, \"clamp\", () => $48d9f1d165180307$export$7d15b64cf5a3a4c4);\n$parcel$export($48d9f1d165180307$exports, \"snapValueToStep\", () => $48d9f1d165180307$export$cb6e0bb50bc19463);\n$parcel$export($48d9f1d165180307$exports, \"toFixedNumber\", () => $48d9f1d165180307$export$b6268554fba451f);\nfunction $48d9f1d165180307$export$7d15b64cf5a3a4c4(value, min = -Infinity, max = Infinity) {\n    let newValue = Math.min(Math.max(value, min), max);\n    return newValue;\n}\nfunction $48d9f1d165180307$export$cb6e0bb50bc19463(value, min, max, step) {\n    let remainder = (value - (isNaN(min) ? 0 : min)) % step;\n    let snappedValue = Math.abs(remainder) * 2 >= step ? value + Math.sign(remainder) * (step - Math.abs(remainder)) : value - remainder;\n    if (!isNaN(min)) {\n        if (snappedValue < min) snappedValue = min;\n        else if (!isNaN(max) && snappedValue > max) snappedValue = min + Math.floor((max - min) / step) * step;\n    } else if (!isNaN(max) && snappedValue > max) snappedValue = Math.floor(max / step) * step;\n    // correct floating point behavior by rounding to step precision\n    let string = step.toString();\n    let index = string.indexOf('.');\n    let precision = index >= 0 ? string.length - index : 0;\n    if (precision > 0) {\n        let pow = Math.pow(10, precision);\n        snappedValue = Math.round(snappedValue * pow) / pow;\n    }\n    return snappedValue;\n}\nfunction $48d9f1d165180307$export$b6268554fba451f(value, digits, base = 10) {\n    const pow = Math.pow(base, digits);\n    return Math.round(value * pow) / pow;\n}\n\n\n\n\nexport {$bfee1151ccb0650f$export$40bfa8c7b0832715 as useControlledState, $48d9f1d165180307$export$7d15b64cf5a3a4c4 as clamp, $48d9f1d165180307$export$cb6e0bb50bc19463 as snapValueToStep, $48d9f1d165180307$export$b6268554fba451f as toFixedNumber};\n//# sourceMappingURL=module.js.map\n"]},"metadata":{},"sourceType":"module"}