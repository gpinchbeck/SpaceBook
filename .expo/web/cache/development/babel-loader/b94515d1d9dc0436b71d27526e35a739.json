{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLink = useLink;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar linkToHREF = function linkToHREF(URL) {\n  _reactNative.Linking.openURL(URL).catch(function (err) {\n    return console.error('An error occurred', err);\n  });\n};\n\nvar addOnPressFunctionality = function addOnPressFunctionality(href, callback) {\n  href ? linkToHREF(href) : '';\n  callback ? callback() : function () {};\n};\n\nfunction useLink(props) {\n  var href = props.href,\n      isExternal = props.isExternal,\n      _onPress = props.onPress,\n      _ref = props._ref;\n  var platformLinkProps = {};\n\n  if (_reactNative.Platform.OS === 'web') {\n    platformLinkProps = {\n      href: href,\n      onClick: _onPress\n    };\n\n    if (isExternal && _ref.current) {\n      _ref.current.target = '_blank';\n    }\n  } else {\n    platformLinkProps = {\n      onPress: function onPress() {\n        addOnPressFunctionality(href, _onPress);\n      }\n    };\n  }\n\n  return {\n    linkProps: (0, _extends2.default)({}, platformLinkProps, {\n      accessibilityRole: 'link',\n      accessible: true\n    })\n  };\n}","map":{"version":3,"mappings":"AAAA,IAAIA,sBAAsB,GAACC,OAAO,CAAC,8CAAD,CAAlC;;AAAmFC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,YAA9B,EAA2C;AAACC,OAAK,EAAC;AAAP,CAA3C;AAAyDD,OAAO,CAACE,OAAR,GAAgBA,OAAhB;;AAAwB,IAAIC,SAAS,GAACP,sBAAsB,CAACC,OAAO,CAAC,gCAAD,CAAR,CAApC;;;;AAAyH,IAAIO,UAAU,GAAC,SAASA,UAAT,CAAoBC,GAApB,EAAwB;AAACC,cAAY,CAACC,OAAb,CAAqBC,OAArB,CAA6BH,GAA7B,EAAkCI,KAAlC,CAAwC,UAASC,GAAT,EAAa;AAAC,WAAOC,OAAO,CAACC,KAAR,CAAc,mBAAd,EAAkCF,GAAlC,CAAP;AAA+C,GAArG;AAAwG,CAAhJ;;AAAiJ,IAAIG,uBAAuB,GAAC,SAASA,uBAAT,CAAiCC,IAAjC,EAAsCC,QAAtC,EAA+C;AAACD,MAAI,GAACV,UAAU,CAACU,IAAD,CAAX,GAAkB,EAAtB;AAAyBC,UAAQ,GAACA,QAAQ,EAAT,GAAY,YAAU,CAAE,CAAhC;AAAkC,CAAvI;;AAAwI,SAASb,OAAT,CAAiBc,KAAjB,EAAuB;AAAC,MAAIF,IAAI,GAACE,KAAK,CAACF,IAAf;AAAA,MAAoBG,UAAU,GAACD,KAAK,CAACC,UAArC;AAAA,MAAgDC,QAAQ,GAACF,KAAK,CAACG,OAA/D;AAAA,MAAuEC,IAAI,GAACJ,KAAK,CAACI,IAAlF;AAAuF,MAAIC,iBAAiB,GAAC,EAAtB;;AAAyB,MAAGf,YAAY,CAACgB,QAAb,CAAsBC,EAAtB,KAA2B,KAA9B,EAAoC;AAACF,qBAAiB,GAAC;AAACP,UAAI,EAACA,IAAN;AAAWU,aAAO,EAACN;AAAnB,KAAlB;;AAA+C,QAAGD,UAAU,IAAEG,IAAI,CAACK,OAApB,EAA4B;AAACL,UAAI,CAACK,OAAL,CAAaC,MAAb,GAAoB,QAApB;AAA8B;AAAC,GAAhJ,MAAoJ;AAACL,qBAAiB,GAAC;AAACF,aAAO,EAAC,SAASA,OAAT,GAAkB;AAACN,+BAAuB,CAACC,IAAD,EAAMI,QAAN,CAAvB;AAAwC;AAApE,KAAlB;AAAyF;;AAAA,SAAM;AAACS,aAAS,EAAC,CAAC,GAAExB,SAAS,CAACyB,OAAb,EAAsB,EAAtB,EAAyBP,iBAAzB,EAA2C;AAACQ,uBAAiB,EAAC,MAAnB;AAA0BC,gBAAU,EAAC;AAArC,KAA3C;AAAX,GAAN;AAA0G","names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useLink","_extends2","linkToHREF","URL","_reactNative","Linking","openURL","catch","err","console","error","addOnPressFunctionality","href","callback","props","isExternal","_onPress","onPress","_ref","platformLinkProps","Platform","OS","onClick","current","target","linkProps","default","accessibilityRole","accessible"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/native-base/lib/commonjs/components/primitives/Link/useLink.js"],"sourcesContent":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useLink=useLink;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _reactNative=require(\"react-native\");var linkToHREF=function linkToHREF(URL){_reactNative.Linking.openURL(URL).catch(function(err){return console.error('An error occurred',err);});};var addOnPressFunctionality=function addOnPressFunctionality(href,callback){href?linkToHREF(href):'';callback?callback():function(){};};function useLink(props){var href=props.href,isExternal=props.isExternal,_onPress=props.onPress,_ref=props._ref;var platformLinkProps={};if(_reactNative.Platform.OS==='web'){platformLinkProps={href:href,onClick:_onPress};if(isExternal&&_ref.current){_ref.current.target='_blank';}}else{platformLinkProps={onPress:function onPress(){addOnPressFunctionality(href,_onPress);}};}return{linkProps:(0,_extends2.default)({},platformLinkProps,{accessibilityRole:'link',accessible:true})};}\n//# sourceMappingURL=useLink.js.map"]},"metadata":{},"sourceType":"script"}