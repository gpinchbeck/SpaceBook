{"ast":null,"code":"import { useEffect } from 'react';\nexport var onCloseMap = new WeakMap();\nexport function useCloseOnScroll(opts) {\n  var triggerRef = opts.triggerRef,\n      isOpen = opts.isOpen,\n      onClose = opts.onClose;\n  useEffect(function () {\n    if (!isOpen) {\n      return;\n    }\n\n    var onScroll = function onScroll(e) {\n      var target = e.target;\n\n      if (!triggerRef.current || !target.contains(triggerRef.current)) {\n        return;\n      }\n\n      var onCloseHandler = onClose || onCloseMap.get(triggerRef.current);\n\n      if (onCloseHandler) {\n        onCloseHandler();\n      }\n    };\n\n    window.addEventListener('scroll', onScroll, true);\n    return function () {\n      window.removeEventListener('scroll', onScroll, true);\n    };\n  }, [isOpen, onClose, triggerRef]);\n}","map":{"version":3,"mappings":"AAaA,SAASA,SAAT,QAA0B,OAA1B;AAMA,OAAO,IAAMC,UAAU,GAAG,IAAIC,OAAJ,EAAnB;AAGP,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AACrC,MACEC,UADF,GAIID,IAJJ,CACEC,UADF;AAAA,MAEEC,MAFF,GAIIF,IAJJ,CAEEE,MAFF;AAAA,MAGEC,OAHF,GAIIH,IAJJ,CAGEG,OAHF;AAKAP,WAAS,CAAC,YAAM;AACd,QAAI,CAACM,MAAL,EAAa;AACX;AACD;;AAED,QAAIE,QAAQ,GAAG,SAAXA,QAAW,EAAC,EAAI;AAElB,UAAIC,MAAM,GAAGC,CAAC,CAACD,MAAf;;AAEA,UAAI,CAACJ,UAAU,CAACM,OAAZ,IAAuB,CAACF,MAAM,CAACG,QAAP,CAAgBP,UAAU,CAACM,OAA3B,CAA5B,EAAiE;AAC/D;AACD;;AAED,UAAIE,cAAc,GAAGN,OAAO,IAAIN,UAAU,CAACa,GAAX,CAAeT,UAAU,CAACM,OAA1B,CAAhC;;AAEA,UAAIE,cAAJ,EAAoB;AAClBA,sBAAc;AACf;AACF,KAbD;;AAeAE,UAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCR,QAAlC,EAA4C,IAA5C;AACA,WAAO,YAAM;AACXO,YAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCT,QAArC,EAA+C,IAA/C;AACD,KAFD;AAGD,GAxBQ,EAwBN,CAACF,MAAD,EAASC,OAAT,EAAkBF,UAAlB,CAxBM,CAAT;AAyBD","names":["useEffect","onCloseMap","WeakMap","useCloseOnScroll","opts","triggerRef","isOpen","onClose","onScroll","target","e","current","contains","onCloseHandler","get","window","addEventListener","removeEventListener"],"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/@react-native-aria/overlays/lib/module/web/overlays/src/useCloseOnScroll.js"],"sourcesContent":["//@ts-nocheck\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport { useEffect } from 'react'; // This behavior moved from useOverlayTrigger to useOverlayPosition.\n// For backward compatibility, where useOverlayTrigger handled hiding the popover on close,\n// it sets a close function here mapped from the trigger element. This way we can avoid\n// forcing users to pass an onClose function to useOverlayPosition which could be considered\n// a breaking change.\n\nexport const onCloseMap = new WeakMap();\n\n/** @private */\nexport function useCloseOnScroll(opts) {\n  let {\n    triggerRef,\n    isOpen,\n    onClose\n  } = opts;\n  useEffect(() => {\n    if (!isOpen) {\n      return;\n    }\n\n    let onScroll = e => {\n      // Ignore if scrolling an scrollable region outside the trigger's tree.\n      let target = e.target;\n\n      if (!triggerRef.current || !target.contains(triggerRef.current)) {\n        return;\n      }\n\n      let onCloseHandler = onClose || onCloseMap.get(triggerRef.current);\n\n      if (onCloseHandler) {\n        onCloseHandler();\n      }\n    };\n\n    window.addEventListener('scroll', onScroll, true);\n    return () => {\n      window.removeEventListener('scroll', onScroll, true);\n    };\n  }, [isOpen, onClose, triggerRef]);\n}\n//# sourceMappingURL=useCloseOnScroll.js.map"]},"metadata":{},"sourceType":"module"}