{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport DisplayAlert from \"./DisplayAlert\";\nimport Storage from \"./Storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar asyncStorage = new Storage();\nvar displayAlert = new DisplayAlert();\n\nvar FindFreindsScreen = function (_Component) {\n  _inherits(FindFreindsScreen, _Component);\n\n  var _super = _createSuper(FindFreindsScreen);\n\n  function FindFreindsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, FindFreindsScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      searchText: '',\n      data: {},\n      users: []\n    };\n    return _this;\n  }\n\n  _createClass(FindFreindsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      asyncStorage.getData(function (data) {\n        _this2.setState({\n          data: data\n        });\n\n        _this2.getUsers();\n      });\n    }\n  }, {\n    key: \"getUsers\",\n    value: function getUsers() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          searchText = _this$state.searchText,\n          data = _this$state.data;\n      var url = \"http://localhost:3333/api/1.0.0/search\";\n\n      if (searchText !== '') {\n        url = url + \"?q=\" + searchText;\n      }\n\n      fetch(url, {\n        method: 'GET',\n        headers: {\n          'X-Authorization': data.token\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this3.setState({\n          users: responseJson\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"addFriend\",\n    value: function addFriend(friendId) {\n      var data = this.state.data;\n      console.log(friendId, data.id);\n      fetch(\"http://localhost:3333/api/1.0.0/user/\" + friendId + \"/friends\", {\n        method: 'POST',\n        headers: {\n          'X-Authorization': data.token\n        }\n      }).then(function (response) {\n        if (response.status === 200 || response.status === 201) {\n          displayAlert.displayAlert('Request sent.');\n        } else if (response.status === 403) {\n          displayAlert.displayAlert(\"Already friends or request already sent\");\n        } else {\n          displayAlert.displayAlert(response.statusText + response.status);\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          users = _this$state2.users,\n          searchText = _this$state2.searchText,\n          data = _this$state2.data;\n      return _jsxs(View, {\n        children: [_jsxs(View, {\n          children: [_jsx(TextInput, {\n            placeholder: \"Search\",\n            onChangeText: function onChangeText(newSearch) {\n              return _this4.setState({\n                searchText: newSearch\n              });\n            },\n            value: searchText\n          }), _jsx(Button, {\n            title: \"Search\",\n            onPress: function onPress() {\n              return _this4.getUsers();\n            }\n          })]\n        }), _jsx(View, {\n          children: _jsx(FlatList, {\n            extraData: users,\n            data: users,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsx(View, {\n                children: item.user_id !== data.id && _jsxs(View, {\n                  children: [_jsxs(Text, {\n                    children: [item.user_givenname, \" \", item.user_familyname]\n                  }), _jsx(Button, {\n                    title: \"Add\",\n                    onPress: function onPress() {\n                      return _this4.addFriend(item.user_id);\n                    }\n                  })]\n                })\n              });\n            },\n            keyExtractor: function keyExtractor(item) {\n              return item.user_id;\n            }\n          })\n        })]\n      });\n    }\n  }]);\n\n  return FindFreindsScreen;\n}(Component);\n\nexport default FindFreindsScreen;","map":{"version":3,"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/components/FindFriendsScreen.js"],"names":["React","Component","DisplayAlert","Storage","asyncStorage","displayAlert","FindFreindsScreen","props","state","searchText","data","users","getData","setState","getUsers","url","fetch","method","headers","token","then","response","json","responseJson","catch","error","console","log","friendId","id","status","statusText","newSearch","item","user_id","user_givenname","user_familyname","addFriend"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, FlatList, Button, TextInput } from 'react-native';\r\n\r\nimport DisplayAlert from './DisplayAlert';\r\nimport Storage from './Storage'\r\n\r\nconst asyncStorage = new Storage();\r\n\r\nconst displayAlert = new DisplayAlert();\r\n\r\nclass FindFreindsScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchText: '',\r\n            data: {},\r\n            users: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        asyncStorage.getData((data) => {\r\n            this.setState({\r\n                data\r\n            });\r\n            this.getUsers();\r\n        });\r\n    }\r\n\r\n    getUsers(){\r\n        const { searchText, data } = this.state;\r\n        let url = `http://localhost:3333/api/1.0.0/search`;\r\n        if (searchText !== ''){\r\n            url = `${ url }?q=${ searchText }`;\r\n        }\r\n        fetch(url,{\r\n            method: 'GET',\r\n            headers: {\r\n                'X-Authorization': data.token\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            this.setState({\r\n                users: responseJson\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    addFriend(friendId){\r\n        const { data } = this.state;\r\n        console.log(friendId, data.id)\r\n        fetch(`http://localhost:3333/api/1.0.0/user/${ friendId }/friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'X-Authorization': data.token\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200 || response.status === 201){\r\n                displayAlert.displayAlert('Request sent.');\r\n            }\r\n            else if (response.status === 403){\r\n                displayAlert.displayAlert(`Already friends or request already sent`);\r\n            }\r\n            else {\r\n                displayAlert.displayAlert(response.statusText + response.status);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { users, searchText, data } = this.state;\r\n        return(\r\n            <View>\r\n                <View>\r\n                    <TextInput placeholder='Search' onChangeText={(newSearch) => this.setState({searchText: newSearch})} value={searchText}/>\r\n                    <Button title='Search' onPress={() => this.getUsers()}/>\r\n                </View>\r\n                <View>\r\n                    <FlatList extraData={users} data={users}\r\n                        renderItem={({item}) => (\r\n                            <View>\r\n                                { item.user_id !== data.id && <View>\r\n                                    <Text>{item.user_givenname} {item.user_familyname}</Text>\r\n                                    <Button title='Add' onPress={() => this.addFriend(item.user_id)}/>\r\n                                </View> }\r\n                            </View>\r\n                        )}\r\n                        keyExtractor={(item) => item.user_id}\r\n                    />\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FindFreindsScreen;"]},"metadata":{},"sourceType":"module"}