{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport default function useIsKeyboardShown() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isKeyboardShown = _React$useState2[0],\n      setIsKeyboardShown = _React$useState2[1];\n\n  React.useEffect(function () {\n    var handleKeyboardShow = function handleKeyboardShow() {\n      return setIsKeyboardShown(true);\n    };\n\n    var handleKeyboardHide = function handleKeyboardHide() {\n      return setIsKeyboardShown(false);\n    };\n\n    var subscriptions;\n\n    if (Platform.OS === 'ios') {\n      subscriptions = [Keyboard.addListener('keyboardWillShow', handleKeyboardShow), Keyboard.addListener('keyboardWillHide', handleKeyboardHide)];\n    } else {\n      subscriptions = [Keyboard.addListener('keyboardDidShow', handleKeyboardShow), Keyboard.addListener('keyboardDidHide', handleKeyboardHide)];\n    }\n\n    return function () {\n      subscriptions.forEach(function (s) {\n        return s.remove();\n      });\n    };\n  }, []);\n  return isKeyboardShown;\n}","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAC3C,wBAA8CD,KAAK,CAACE,QAAN,CAAe,KAAf,CAA9C;AAAA;AAAA,MAAOC,eAAP;AAAA,MAAwBC,kBAAxB;;AACAJ,OAAK,CAACK,SAAN,CAAgB,YAAM;AACpB,QAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,aAAMF,kBAAkB,CAAC,IAAD,CAAxB;AAAA,KAA3B;;AAEA,QAAMG,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,aAAMH,kBAAkB,CAAC,KAAD,CAAxB;AAAA,KAA3B;;AAEA,QAAII,aAAJ;;AAEA,QAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzBF,mBAAa,GAAG,CAACG,QAAQ,CAACC,WAAT,CAAqB,kBAArB,EAAyCN,kBAAzC,CAAD,EAA+DK,QAAQ,CAACC,WAAT,CAAqB,kBAArB,EAAyCL,kBAAzC,CAA/D,CAAhB;AACD,KAFD,MAEO;AACLC,mBAAa,GAAG,CAACG,QAAQ,CAACC,WAAT,CAAqB,iBAArB,EAAwCN,kBAAxC,CAAD,EAA8DK,QAAQ,CAACC,WAAT,CAAqB,iBAArB,EAAwCL,kBAAxC,CAA9D,CAAhB;AACD;;AAED,WAAO,YAAM;AACXC,mBAAa,CAACK,OAAd,CAAsB,WAAC;AAAA,eAAIC,CAAC,CAACC,MAAF,EAAJ;AAAA,OAAvB;AACD,KAFD;AAGD,GAhBD,EAgBG,EAhBH;AAiBA,SAAOZ,eAAP;AACD","names":["React","useIsKeyboardShown","useState","isKeyboardShown","setIsKeyboardShown","useEffect","handleKeyboardShow","handleKeyboardHide","subscriptions","Platform","OS","Keyboard","addListener","forEach","s","remove"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-navigation/bottom-tabs/lib/module/utils/useIsKeyboardShown.js"],"sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform } from 'react-native';\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    let subscriptions;\n\n    if (Platform.OS === 'ios') {\n      subscriptions = [Keyboard.addListener('keyboardWillShow', handleKeyboardShow), Keyboard.addListener('keyboardWillHide', handleKeyboardHide)];\n    } else {\n      subscriptions = [Keyboard.addListener('keyboardDidShow', handleKeyboardShow), Keyboard.addListener('keyboardDidHide', handleKeyboardHide)];\n    }\n\n    return () => {\n      subscriptions.forEach(s => s.remove());\n    };\n  }, []);\n  return isKeyboardShown;\n}\n//# sourceMappingURL=useIsKeyboardShown.js.map"]},"metadata":{},"sourceType":"module"}