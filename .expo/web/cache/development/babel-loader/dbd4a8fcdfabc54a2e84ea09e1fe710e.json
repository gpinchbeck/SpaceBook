{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Platform } from 'expo-modules-core';\nexport var userMediaRequested = false;\nexport var mountedInstances = [];\n\nfunction requestLegacyUserMediaAsync(props) {\n  var optionalSource, constraintToSourceId, sources, audioSource, videoSource, audioSourceId, videoSourceId;\n  return _regeneratorRuntime.async(function requestLegacyUserMediaAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          optionalSource = function optionalSource(id) {\n            return {\n              optional: [{\n                sourceId: id\n              }]\n            };\n          };\n\n          constraintToSourceId = function constraintToSourceId(constraint) {\n            var deviceId = constraint.deviceId;\n\n            if (typeof deviceId === 'string') {\n              return deviceId;\n            }\n\n            if (Array.isArray(deviceId) && deviceId.length > 0) {\n              return deviceId[0];\n            }\n\n            if (typeof deviceId === 'object' && deviceId.ideal) {\n              return deviceId.ideal;\n            }\n\n            return null;\n          };\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n            return MediaStreamTrack.getSources(function (sources) {\n              return resolve(sources);\n            });\n          }));\n\n        case 4:\n          sources = _context.sent;\n          audioSource = null;\n          videoSource = null;\n          sources.forEach(function (source) {\n            if (source.kind === 'audio') {\n              audioSource = source.id;\n            } else if (source.kind === 'video') {\n              videoSource = source.id;\n            }\n          });\n          audioSourceId = constraintToSourceId(props.audioConstraints);\n\n          if (audioSourceId) {\n            audioSource = audioSourceId;\n          }\n\n          videoSourceId = constraintToSourceId(props.videoConstraints);\n\n          if (videoSourceId) {\n            videoSource = videoSourceId;\n          }\n\n          return _context.abrupt(\"return\", [optionalSource(audioSource), optionalSource(videoSource)]);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction sourceSelectedAsync(isMuted, audioConstraints, videoConstraints) {\n  var constraints;\n  return _regeneratorRuntime.async(function sourceSelectedAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          constraints = {\n            video: typeof videoConstraints !== 'undefined' ? videoConstraints : true\n          };\n\n          if (!isMuted) {\n            constraints.audio = typeof audioConstraints !== 'undefined' ? audioConstraints : true;\n          }\n\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(getAnyUserMediaAsync(constraints));\n\n        case 4:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function requestUserMediaAsync(props) {\n  var isMuted,\n      _await$requestLegacyU,\n      _await$requestLegacyU2,\n      audio,\n      video,\n      _args3 = arguments;\n\n  return _regeneratorRuntime.async(function requestUserMediaAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          isMuted = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : true;\n\n          if (!canGetUserMedia()) {\n            _context3.next = 5;\n            break;\n          }\n\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(sourceSelectedAsync(isMuted, props.audio, props.video));\n\n        case 4:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 5:\n          _context3.next = 7;\n          return _regeneratorRuntime.awrap(requestLegacyUserMediaAsync(props));\n\n        case 7:\n          _await$requestLegacyU = _context3.sent;\n          _await$requestLegacyU2 = _slicedToArray(_await$requestLegacyU, 2);\n          audio = _await$requestLegacyU2[0];\n          video = _await$requestLegacyU2[1];\n          _context3.next = 13;\n          return _regeneratorRuntime.awrap(sourceSelectedAsync(isMuted, audio, video));\n\n        case 13:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getAnyUserMediaAsync(constraints) {\n  var ignoreConstraints,\n      _args4 = arguments;\n  return _regeneratorRuntime.async(function getAnyUserMediaAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          ignoreConstraints = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : false;\n          _context4.prev = 1;\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(getUserMediaAsync(_objectSpread(_objectSpread({}, constraints), {}, {\n            video: ignoreConstraints || constraints.video\n          })));\n\n        case 4:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](1);\n\n          if (!(!ignoreConstraints && _context4.t0.name === 'ConstraintNotSatisfiedError')) {\n            _context4.next = 13;\n            break;\n          }\n\n          _context4.next = 12;\n          return _regeneratorRuntime.awrap(getAnyUserMediaAsync(constraints, true));\n\n        case 12:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 13:\n          throw _context4.t0;\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[1, 7]], Promise);\n}\nexport function getUserMediaAsync(constraints) {\n  var _getUserMedia;\n\n  return _regeneratorRuntime.async(function getUserMediaAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)) {\n            _context5.next = 2;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", navigator.mediaDevices.getUserMedia(constraints));\n\n        case 2:\n          _getUserMedia = navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] || navigator['msGetUserMedia'];\n          return _context5.abrupt(\"return\", new Promise(function (resolve, reject) {\n            return _getUserMedia.call(navigator, constraints, resolve, reject);\n          }));\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function canGetUserMedia() {\n  return Platform.isDOMAvailable && !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia || navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] || navigator['msGetUserMedia']);\n}\nexport function isFrontCameraAvailableAsync(devices) {\n  return _regeneratorRuntime.async(function isFrontCameraAvailableAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(supportsCameraType(['front', 'user', 'facetime'], 'user', devices));\n\n        case 2:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isBackCameraAvailableAsync(devices) {\n  return _regeneratorRuntime.async(function isBackCameraAvailableAsync$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(supportsCameraType(['back', 'rear'], 'environment', devices));\n\n        case 2:\n          return _context7.abrupt(\"return\", _context7.sent);\n\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction supportsCameraType(labels, type, devices) {\n  var cameras, _cameras$filter, _cameras$filter2, hasCamera, _cameras$filter3, _cameras$filter4, isCapable;\n\n  return _regeneratorRuntime.async(function supportsCameraType$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          if (devices) {\n            _context8.next = 6;\n            break;\n          }\n\n          if (navigator.mediaDevices.enumerateDevices) {\n            _context8.next = 3;\n            break;\n          }\n\n          return _context8.abrupt(\"return\", null);\n\n        case 3:\n          _context8.next = 5;\n          return _regeneratorRuntime.awrap(navigator.mediaDevices.enumerateDevices());\n\n        case 5:\n          devices = _context8.sent;\n\n        case 6:\n          cameras = devices.filter(function (t) {\n            return t.kind === 'videoinput';\n          });\n          _cameras$filter = cameras.filter(function (camera) {\n            return labels.some(function (label) {\n              return camera.label.toLowerCase().includes(label);\n            });\n          }), _cameras$filter2 = _slicedToArray(_cameras$filter, 1), hasCamera = _cameras$filter2[0];\n          _cameras$filter3 = cameras.filter(function (camera) {\n            if (!('getCapabilities' in camera)) {\n              return null;\n            }\n\n            var capabilities = camera.getCapabilities();\n\n            if (!capabilities.facingMode) {\n              return null;\n            }\n\n            return capabilities.facingMode.find(function (_) {\n              return type;\n            });\n          }), _cameras$filter4 = _slicedToArray(_cameras$filter3, 1), isCapable = _cameras$filter4[0];\n          return _context8.abrupt(\"return\", (isCapable == null ? void 0 : isCapable.deviceId) || (hasCamera == null ? void 0 : hasCamera.deviceId) || null);\n\n        case 10:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"mappings":"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","names":["Platform","userMediaRequested","mountedInstances","requestLegacyUserMediaAsync","props","optionalSource","id","optional","sourceId","constraintToSourceId","constraint","deviceId","Array","isArray","length","ideal","Promise","resolve","MediaStreamTrack","getSources","sources","audioSource","videoSource","forEach","source","kind","audioSourceId","audioConstraints","videoSourceId","videoConstraints","sourceSelectedAsync","isMuted","constraints","video","audio","getAnyUserMediaAsync","requestUserMediaAsync","canGetUserMedia","ignoreConstraints","getUserMediaAsync","name","navigator","mediaDevices","getUserMedia","_getUserMedia","reject","call","isDOMAvailable","isFrontCameraAvailableAsync","devices","supportsCameraType","isBackCameraAvailableAsync","labels","type","enumerateDevices","cameras","filter","t","camera","some","label","toLowerCase","includes","hasCamera","capabilities","getCapabilities","facingMode","find","_","isCapable"],"sourceRoot":"","sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/expo-camera/build/WebUserMediaManager.js"],"sourcesContent":["/* eslint-env browser */\n/**\n * A web-only module for ponyfilling the UserMedia API.\n */\nimport { Platform } from 'expo-modules-core';\nexport const userMediaRequested = false;\nexport const mountedInstances = [];\nasync function requestLegacyUserMediaAsync(props) {\n    const optionalSource = (id) => ({ optional: [{ sourceId: id }] });\n    const constraintToSourceId = (constraint) => {\n        const { deviceId } = constraint;\n        if (typeof deviceId === 'string') {\n            return deviceId;\n        }\n        if (Array.isArray(deviceId) && deviceId.length > 0) {\n            return deviceId[0];\n        }\n        if (typeof deviceId === 'object' && deviceId.ideal) {\n            return deviceId.ideal;\n        }\n        return null;\n    };\n    const sources = await new Promise((resolve) => \n    // @ts-ignore: https://caniuse.com/#search=getSources Chrome for Android (78) & Samsung Internet (10.1) use this\n    MediaStreamTrack.getSources((sources) => resolve(sources)));\n    let audioSource = null;\n    let videoSource = null;\n    sources.forEach((source) => {\n        if (source.kind === 'audio') {\n            audioSource = source.id;\n        }\n        else if (source.kind === 'video') {\n            videoSource = source.id;\n        }\n    });\n    const audioSourceId = constraintToSourceId(props.audioConstraints);\n    if (audioSourceId) {\n        audioSource = audioSourceId;\n    }\n    const videoSourceId = constraintToSourceId(props.videoConstraints);\n    if (videoSourceId) {\n        videoSource = videoSourceId;\n    }\n    return [optionalSource(audioSource), optionalSource(videoSource)];\n}\nasync function sourceSelectedAsync(isMuted, audioConstraints, videoConstraints) {\n    const constraints = {\n        video: typeof videoConstraints !== 'undefined' ? videoConstraints : true,\n    };\n    if (!isMuted) {\n        constraints.audio = typeof audioConstraints !== 'undefined' ? audioConstraints : true;\n    }\n    return await getAnyUserMediaAsync(constraints);\n}\nexport async function requestUserMediaAsync(props, isMuted = true) {\n    if (canGetUserMedia()) {\n        return await sourceSelectedAsync(isMuted, props.audio, props.video);\n    }\n    const [audio, video] = await requestLegacyUserMediaAsync(props);\n    return await sourceSelectedAsync(isMuted, audio, video);\n}\nexport async function getAnyUserMediaAsync(constraints, ignoreConstraints = false) {\n    try {\n        return await getUserMediaAsync({\n            ...constraints,\n            video: ignoreConstraints || constraints.video,\n        });\n    }\n    catch (error) {\n        if (!ignoreConstraints && error.name === 'ConstraintNotSatisfiedError') {\n            return await getAnyUserMediaAsync(constraints, true);\n        }\n        throw error;\n    }\n}\nexport async function getUserMediaAsync(constraints) {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        return navigator.mediaDevices.getUserMedia(constraints);\n    }\n    const _getUserMedia = navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] || navigator['msGetUserMedia'];\n    return new Promise((resolve, reject) => _getUserMedia.call(navigator, constraints, resolve, reject));\n}\nexport function canGetUserMedia() {\n    return (\n    // SSR\n    Platform.isDOMAvailable &&\n        // Has any form of media API\n        !!((navigator.mediaDevices && navigator.mediaDevices.getUserMedia) ||\n            navigator['mozGetUserMedia'] ||\n            navigator['webkitGetUserMedia'] ||\n            navigator['msGetUserMedia']));\n}\nexport async function isFrontCameraAvailableAsync(devices) {\n    return await supportsCameraType(['front', 'user', 'facetime'], 'user', devices);\n}\nexport async function isBackCameraAvailableAsync(devices) {\n    return await supportsCameraType(['back', 'rear'], 'environment', devices);\n}\nasync function supportsCameraType(labels, type, devices) {\n    if (!devices) {\n        if (!navigator.mediaDevices.enumerateDevices) {\n            return null;\n        }\n        devices = await navigator.mediaDevices.enumerateDevices();\n    }\n    const cameras = devices.filter((t) => t.kind === 'videoinput');\n    const [hasCamera] = cameras.filter((camera) => labels.some((label) => camera.label.toLowerCase().includes(label)));\n    const [isCapable] = cameras.filter((camera) => {\n        if (!('getCapabilities' in camera)) {\n            return null;\n        }\n        const capabilities = camera.getCapabilities();\n        if (!capabilities.facingMode) {\n            return null;\n        }\n        return capabilities.facingMode.find((_) => type);\n    });\n    return isCapable?.deviceId || hasCamera?.deviceId || null;\n}\n//# sourceMappingURL=WebUserMediaManager.js.map"]},"metadata":{},"sourceType":"module"}