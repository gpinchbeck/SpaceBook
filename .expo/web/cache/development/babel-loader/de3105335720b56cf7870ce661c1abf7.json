{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"isDisabled\", \"onPress\", \"onPressStart\", \"onPressEnd\", \"onPressUp\", \"onPressChange\", \"isPressed\"];\nimport React from 'react';\nimport { mergeProps } from '@react-aria/utils';\nexport function usePress(_ref) {\n  var isDisabled = _ref.isDisabled,\n      _onPress = _ref.onPress,\n      onPressStart = _ref.onPressStart,\n      onPressEnd = _ref.onPressEnd,\n      onPressUp = _ref.onPressUp,\n      onPressChange = _ref.onPressChange,\n      isPressedProp = _ref.isPressed,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isPressed = _React$useState2[0],\n      setPressed = _React$useState2[1];\n\n  var pressProps = {\n    onPress: function onPress(e) {\n      if (isDisabled) return;\n      _onPress && _onPress(e);\n    },\n    onPressIn: function onPressIn(e) {\n      if (isDisabled) return;\n      onPressStart && onPressStart(e);\n      setPressed(true);\n      onPressChange && onPressChange(true);\n    },\n    onPressOut: function onPressOut(e) {\n      if (isDisabled) return;\n      onPressEnd && onPressEnd(e);\n      setPressed(false);\n      onPressChange && onPressChange(false);\n      onPressUp && onPressUp(e);\n    }\n  };\n  pressProps = mergeProps(pressProps, restProps);\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: pressProps\n  };\n}","map":{"version":3,"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,SAASC,QAAT,OAUJ;AAAA,MATDC,UASC,QATDA,UASC;AAAA,MARDC,QAQC,QARDA,OAQC;AAAA,MAPDC,YAOC,QAPDA,YAOC;AAAA,MANDC,UAMC,QANDA,UAMC;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAHDC,aAGC,QAHDA,aAGC;AAAA,MAFUC,aAEV,QAFDC,SAEC;AAAA,MADEC,SACF;;AACD,wBAA8BX,KAAK,CAACY,QAAN,CAAe,KAAf,CAA9B;AAAA;AAAA,MAAKF,SAAL;AAAA,MAAgBG,UAAhB;;AACA,MAAIC,UAAU,GAAG;AACfV,WAAO,EAAE,kBAAC,EAAI;AACZ,UAAID,UAAJ,EAAgB;AAChBC,cAAO,IAAIA,QAAO,CAACW,CAAD,CAAlB;AACD,KAJc;AAKfC,aAAS,EAAE,oBAAC,EAAI;AACd,UAAIb,UAAJ,EAAgB;AAChBE,kBAAY,IAAIA,YAAY,CAACU,CAAD,CAA5B;AACAF,gBAAU,CAAC,IAAD,CAAV;AACAL,mBAAa,IAAIA,aAAa,CAAC,IAAD,CAA9B;AACD,KAVc;AAWfS,cAAU,EAAE,qBAAC,EAAI;AACf,UAAId,UAAJ,EAAgB;AAChBG,gBAAU,IAAIA,UAAU,CAACS,CAAD,CAAxB;AACAF,gBAAU,CAAC,KAAD,CAAV;AACAL,mBAAa,IAAIA,aAAa,CAAC,KAAD,CAA9B;AACAD,eAAS,IAAIA,SAAS,CAACQ,CAAD,CAAtB;AACD;AAjBc,GAAjB;AAmBAD,YAAU,GAAGb,UAAU,CAACa,UAAD,EAAaH,SAAb,CAAvB;AACA,SAAO;AACLD,aAAS,EAAED,aAAa,IAAIC,SADvB;AAELI,cAAU,EAAVA;AAFK,GAAP;AAID","names":["React","mergeProps","usePress","isDisabled","onPress","onPressStart","onPressEnd","onPressUp","onPressChange","isPressedProp","isPressed","restProps","useState","setPressed","pressProps","e","onPressIn","onPressOut"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-native-aria/interactions/lib/module/usePress.js"],"sourcesContent":["import React from 'react';\nimport { mergeProps } from '@react-aria/utils';\nexport function usePress({\n  isDisabled,\n  onPress,\n  onPressStart,\n  onPressEnd,\n  onPressUp,\n  // No onPressUp on RN.\n  onPressChange,\n  isPressed: isPressedProp,\n  ...restProps\n}) {\n  let [isPressed, setPressed] = React.useState(false);\n  let pressProps = {\n    onPress: e => {\n      if (isDisabled) return;\n      onPress && onPress(e);\n    },\n    onPressIn: e => {\n      if (isDisabled) return;\n      onPressStart && onPressStart(e);\n      setPressed(true);\n      onPressChange && onPressChange(true);\n    },\n    onPressOut: e => {\n      if (isDisabled) return;\n      onPressEnd && onPressEnd(e);\n      setPressed(false);\n      onPressChange && onPressChange(false);\n      onPressUp && onPressUp(e);\n    }\n  };\n  pressProps = mergeProps(pressProps, restProps);\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps\n  };\n}\n//# sourceMappingURL=usePress.js.map"]},"metadata":{},"sourceType":"module"}