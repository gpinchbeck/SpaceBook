{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Camera } from 'expo-camera';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar getData = function getData(done) {\n  var jsonValue, data;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@spacebook_details'));\n\n        case 3:\n          jsonValue = _context.sent;\n          data = JSON.parse(jsonValue);\n          return _context.abrupt(\"return\", done(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar UploadPicture = function (_Component) {\n  _inherits(UploadPicture, _Component);\n\n  var _super = _createSuper(UploadPicture);\n\n  function UploadPicture(props) {\n    var _this;\n\n    _classCallCheck(this, UploadPicture);\n\n    _this = _super.call(this, props);\n\n    _this.sendToServer = function _callee(data) {\n      var id, token, response, blob;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = _this.state.login_info.id;\n              token = _this.state.login_info.token;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(fetch(data.base64));\n\n            case 4:\n              response = _context2.sent;\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(response.blob());\n\n            case 7:\n              blob = _context2.sent;\n              return _context2.abrupt(\"return\", fetch('http://localhost:3333/api/1.0.0/user/' + id + '/photo', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'image/png',\n                  'X-Authorization': token\n                },\n                body: blob\n              }).then(function (response) {\n                console.log(\"Picture added\", response);\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.takePicture = function _callee2() {\n      var options;\n      return _regeneratorRuntime.async(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!_this.camera) {\n                _context3.next = 4;\n                break;\n              }\n\n              options = {\n                quality: 0.5,\n                base64: true,\n                onPictureSaved: function onPictureSaved(data) {\n                  return _this.sendToServer(data);\n                }\n              };\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(_this.camera.takePictureAsync(options));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasPermission: null,\n      type: Camera.Constants.Type.front,\n      login_info: {}\n    };\n    return _this;\n  }\n\n  _createClass(UploadPicture, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context4.sent;\n              status = _await$Camera$request.status;\n              this.setState({\n                hasPermission: status === 'granted'\n              });\n              getData(function (data) {\n                _this2.setState({\n                  login_info: data\n                });\n              });\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.hasPermission) {\n        return _jsx(View, {\n          style: styles.container,\n          children: _jsx(Camera, {\n            style: styles.camera,\n            type: this.state.type,\n            ref: function ref(_ref) {\n              return _this3.camera = _ref;\n            },\n            children: _jsx(View, {\n              style: styles.buttonContainer,\n              children: _jsx(TouchableOpacity, {\n                style: styles.button,\n                onPress: function onPress() {\n                  _this3.takePicture();\n                },\n                children: _jsx(Text, {\n                  style: styles.text,\n                  children: \" Take Photo \"\n                })\n              })\n            })\n          })\n        });\n      } else {\n        return _jsx(Text, {\n          children: \"No access to camera\"\n        });\n      }\n    }\n  }]);\n\n  return UploadPicture;\n}(Component);\n\nexport default UploadPicture;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  camera: {\n    flex: 1\n  },\n  buttonContainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    margin: 20\n  },\n  button: {\n    flex: 0.1,\n    alignSelf: 'flex-end',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 18,\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/UploadPicture.js"],"names":["React","Component","Camera","AsyncStorage","getData","done","getItem","jsonValue","data","JSON","parse","console","log","UploadPicture","props","sendToServer","id","state","login_info","token","fetch","base64","response","blob","method","headers","body","then","catch","error","takePicture","camera","options","quality","onPictureSaved","takePictureAsync","hasPermission","type","Constants","Type","front","requestCameraPermissionsAsync","status","setState","styles","container","ref","buttonContainer","button","text","StyleSheet","create","flex","backgroundColor","flexDirection","margin","alignSelf","alignItems","fontSize","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Camera } from 'expo-camera';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\n\r\nconst getData = async (done) => {\r\n    try {\r\n        const jsonValue = await AsyncStorage.getItem('@spacebook_details');\r\n        const data = JSON.parse(jsonValue);\r\n        return done(data);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nclass UploadPicture extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            hasPermission: null,\r\n            type: Camera.Constants.Type.front,\r\n            login_info: {}\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { status } = await Camera.requestCameraPermissionsAsync();\r\n        this.setState({hasPermission: status === 'granted'});\r\n        getData((data) => {\r\n            this.setState({\r\n                login_info: data,\r\n            });\r\n        });\r\n    }\r\n\r\n    sendToServer = async (data) => {\r\n        let id = this.state.login_info.id;\r\n        let token = this.state.login_info.token;\r\n\r\n        let response = await fetch(data.base64);\r\n        let blob = await response.blob();\r\n\r\n        return fetch('http://localhost:3333/api/1.0.0/user/' + id + '/photo', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'image/png',\r\n                'X-Authorization': token\r\n            },\r\n            body: blob\r\n        })\r\n        .then((response) => {\r\n            console.log(\"Picture added\", response);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    takePicture = async () => {\r\n        if(this.camera){\r\n            const options = {\r\n                quality: 0.5,\r\n                base64: true,\r\n                onPictureSaved: (data) => this.sendToServer(data)\r\n            };\r\n            await this.camera.takePictureAsync(options);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasPermission){\r\n            return (\r\n                <View style={styles.container}>\r\n                    <Camera style={styles.camera} type={this.state.type} ref={ref => this.camera = ref}>\r\n                        <View style={styles.buttonContainer}>\r\n                            <TouchableOpacity style={styles.button} onPress={() => {this.takePicture()}}>\r\n                                <Text style={styles.text}> Take Photo </Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </Camera>\r\n                </View>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Text>No access to camera</Text>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default UploadPicture;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    camera: {\r\n      flex: 1,\r\n    },\r\n    buttonContainer: {\r\n      flex: 1,\r\n      backgroundColor: 'transparent',\r\n      flexDirection: 'row',\r\n      margin: 20,\r\n    },\r\n    button: {\r\n      flex: 0.1,\r\n      alignSelf: 'flex-end',\r\n      alignItems: 'center',\r\n    },\r\n    text: {\r\n      fontSize: 18,\r\n      color: 'white',\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}