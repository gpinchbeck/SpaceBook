{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Box, NativeBaseProvider, Text, VStack, Button, HStack, Image, Divider } from 'native-base';\nimport PropTypes from 'prop-types';\nimport DisplayAlert from \"./DisplayAlert\";\nimport Storage from \"./Storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar asyncStorage = new Storage();\nvar displayAlert = new DisplayAlert();\n\nvar ProfileScreen = function (_Component) {\n  _inherits(ProfileScreen, _Component);\n\n  var _super = _createSuper(ProfileScreen);\n\n  function ProfileScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loginInfo: {},\n      userData: {},\n      img: null\n    };\n    return _this;\n  }\n\n  _createClass(ProfileScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      asyncStorage.getData(function (data) {\n        _this2.setState({\n          loginInfo: data\n        });\n\n        _this2.getUserData();\n\n        _this2.getProfileImage();\n\n        console.log(\"id: \", data.id);\n        navigation.addListener('focus', function () {\n          _this2.getUserData();\n\n          _this2.getProfileImage();\n        });\n      });\n    }\n  }, {\n    key: \"getProfileImage\",\n    value: function getProfileImage() {\n      var _this3 = this;\n\n      var loginInfo = this.state.loginInfo;\n      fetch(\"http://localhost:3333/api/1.0.0/user/\" + loginInfo.id + \"/photo\", {\n        method: 'GET',\n        headers: {\n          'X-Authorization': loginInfo.token\n        }\n      }).then(function (response) {\n        if (response.status === 401) {\n          return Promise.reject(new Error(\"Unauthorised. Status: \" + response.status));\n        }\n\n        if (response.status === 404) {\n          return Promise.reject(new Error(\"Not found. Status: \" + response.status));\n        }\n\n        if (response.status === 500) {\n          return Promise.reject(new Error(\"Server error. Status: \" + response.status));\n        }\n\n        return response.blob();\n      }).then(function (responseBlob) {\n        var data = URL.createObjectURL(responseBlob);\n\n        _this3.setState({\n          img: data\n        });\n      }).catch(function (error) {\n        displayAlert.displayAlert(error);\n      });\n    }\n  }, {\n    key: \"getUserData\",\n    value: function getUserData() {\n      var _this4 = this;\n\n      var loginInfo = this.state.loginInfo;\n      fetch(\"http://localhost:3333/api/1.0.0/user/\" + loginInfo.id, {\n        method: 'GET',\n        headers: {\n          'X-Authorization': loginInfo.token\n        }\n      }).then(function (response) {\n        if (response.status === 401) {\n          return Promise.reject(new Error(\"Unauthorised. Status: \" + response.status));\n        }\n\n        if (response.status === 404) {\n          return Promise.reject(new Error(\"Not found. Status: \" + response.status));\n        }\n\n        if (response.status === 500) {\n          return Promise.reject(new Error(\"Server error. Status: \" + response.status));\n        }\n\n        return response.json();\n      }).then(function (responseJson) {\n        _this4.setState({\n          userData: responseJson\n        });\n      }).catch(function (error) {\n        displayAlert.displayAlert(error);\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout(nav) {\n      var loginInfo = this.state.loginInfo;\n      fetch('http://localhost:3333/api/1.0.0/logout', {\n        method: 'POST',\n        headers: {\n          'X-Authorization': loginInfo.token\n        }\n      }).then(function (response) {\n        if (response.status === 401) {\n          return Promise.reject(new Error(\"Unauthorised. Status: \" + response.status));\n        }\n\n        if (response.status === 500) {\n          return Promise.reject(new Error(\"Server error. Status: \" + response.status));\n        }\n\n        nav.navigate('Login');\n        return displayAlert.displayAlert('Logged out.');\n      }).catch(function (error) {\n        displayAlert.displayAlert(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var navigation = this.props.navigation;\n      var _this$state = this.state,\n          userData = _this$state.userData,\n          img = _this$state.img;\n      return _jsx(NativeBaseProvider, {\n        children: _jsxs(Box, {\n          flex: 1,\n          p: \"5\",\n          children: [_jsxs(VStack, {\n            flex: 1,\n            children: [_jsx(Box, {\n              pb: \"5\",\n              children: _jsxs(HStack, {\n                space: 5,\n                children: [_jsx(Image, {\n                  source: {\n                    uri: img\n                  },\n                  size: 100,\n                  borderRadius: \"100\",\n                  alt: \"Profile Picture\"\n                }), _jsxs(VStack, {\n                  justifyContent: \"center\",\n                  space: 2,\n                  children: [_jsx(Text, {\n                    children: userData.first_name\n                  }), _jsx(Text, {\n                    children: userData.last_name\n                  })]\n                })]\n              })\n            }), _jsx(Divider, {\n              bg: \"muted.300\"\n            }), _jsx(Box, {\n              justifyContent: \"center\",\n              h: \"50\",\n              alignItems: \"center\",\n              children: _jsxs(Text, {\n                children: [userData.friend_count, \" Friends\"]\n              })\n            }), _jsx(Divider, {\n              bg: \"muted.300\"\n            })]\n          }), _jsx(Box, {\n            children: _jsxs(VStack, {\n              space: 5,\n              children: [_jsx(Button, {\n                h: \"50\",\n                bg: \"darkBlue.700\",\n                onPress: function onPress() {\n                  return navigation.navigate('Settings');\n                },\n                children: \"Account Settings\"\n              }), _jsx(Button, {\n                h: \"50\",\n                bg: \"darkBlue.700\",\n                onPress: function onPress() {\n                  return _this5.logout(navigation);\n                },\n                children: \"Logout\"\n              })]\n            })\n          })]\n        })\n      });\n    }\n  }]);\n\n  return ProfileScreen;\n}(Component);\n\nProfileScreen.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n    addListener: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default ProfileScreen;","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/ProfileScreen.js"],"names":["React","Component","Box","NativeBaseProvider","Text","VStack","Button","HStack","Image","Divider","PropTypes","DisplayAlert","Storage","asyncStorage","displayAlert","ProfileScreen","props","state","loginInfo","userData","img","navigation","getData","data","setState","getUserData","getProfileImage","console","log","id","addListener","fetch","method","headers","token","then","response","status","Promise","reject","Error","blob","responseBlob","URL","createObjectURL","catch","error","json","responseJson","nav","navigate","uri","first_name","last_name","friend_count","logout","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Box, NativeBaseProvider, Text, VStack, Button, HStack, Image, Divider } from 'native-base';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DisplayAlert from './DisplayAlert';\r\nimport Storage from './Storage'\r\n\r\nconst asyncStorage = new Storage();\r\n\r\nconst displayAlert = new DisplayAlert();\r\n\r\nclass ProfileScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loginInfo: {},\r\n            userData: {},\r\n            img: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { navigation } = this.props;\r\n        asyncStorage.getData((data) => {\r\n            this.setState({\r\n                loginInfo: data,\r\n            });\r\n            this.getUserData();\r\n            this.getProfileImage();\r\n            console.log(\"id: \", data.id);\r\n            navigation.addListener('focus', () => {\r\n                this.getUserData();\r\n                this.getProfileImage();\r\n            });\r\n        });\r\n    }\r\n\r\n    getProfileImage() {\r\n        const { loginInfo } = this.state;\r\n        fetch(`http://localhost:3333/api/1.0.0/user/${  loginInfo.id  }/photo`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-Authorization': loginInfo.token\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 401){\r\n                return Promise.reject(new Error(`Unauthorised. Status: ${  response.status}`));\r\n            }\r\n            if (response.status === 404){\r\n                return Promise.reject(new Error(`Not found. Status: ${  response.status}`));\r\n            }\r\n            if (response.status === 500){\r\n                return Promise.reject(new Error(`Server error. Status: ${ response.status }`));\r\n            }\r\n            return response.blob()\r\n        })\r\n        .then((responseBlob) => {\r\n            const data = URL.createObjectURL(responseBlob);\r\n            this.setState({\r\n                img: data\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            displayAlert.displayAlert(error);\r\n        })\r\n    }\r\n\r\n    getUserData() {\r\n        const { loginInfo } = this.state;\r\n        fetch(`http://localhost:3333/api/1.0.0/user/${  loginInfo.id}`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'X-Authorization': loginInfo.token\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 401){\r\n                return Promise.reject(new Error(`Unauthorised. Status: ${  response.status}`));\r\n            }\r\n            if (response.status === 404){\r\n                return Promise.reject(new Error(`Not found. Status: ${  response.status}`));\r\n            }\r\n            if (response.status === 500){\r\n                return Promise.reject(new Error(`Server error. Status: ${ response.status }`));\r\n            }\r\n\r\n            return response.json()\r\n        })\r\n        .then((responseJson) => {\r\n            this.setState({\r\n                userData: responseJson,\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            displayAlert.displayAlert(error);\r\n        })\r\n        \r\n    }\r\n\r\n    logout(nav) {\r\n        const { loginInfo } = this.state;\r\n        fetch('http://localhost:3333/api/1.0.0/logout', {\r\n            method: 'POST',\r\n            headers: {\r\n                'X-Authorization': loginInfo.token,\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 401){\r\n                return Promise.reject(new Error(`Unauthorised. Status: ${  response.status}`));\r\n            }\r\n            if (response.status === 500){\r\n                return Promise.reject(new Error(`Server error. Status: ${ response.status }`));\r\n            }\r\n            nav.navigate('Login');\r\n            return displayAlert.displayAlert('Logged out.');\r\n        })\r\n        .catch((error) => {\r\n            displayAlert.displayAlert(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { navigation } = this.props;\r\n        const { userData, img } = this.state;\r\n        return (\r\n            <NativeBaseProvider>\r\n                <Box flex={1} p=\"5\">\r\n                    <VStack flex={1}>\r\n                        <Box pb=\"5\">\r\n                            <HStack space={5}>\r\n                                <Image source={{uri: img}} size={100} borderRadius=\"100\" alt=\"Profile Picture\"/>\r\n                                {/* <Image source={{uri: \"https://wallpaperaccess.com/full/317501.jpg\"}} size={100} borderRadius={100} alt=\"test\"/> */}\r\n                                <VStack justifyContent=\"center\" space={2}>\r\n                                    <Text>{userData.first_name}</Text>\r\n                                    <Text>{userData.last_name}</Text>\r\n                                </VStack>\r\n                            </HStack>\r\n                        </Box>\r\n                        <Divider bg=\"muted.300\"/>\r\n                        <Box justifyContent=\"center\" h=\"50\" alignItems=\"center\">\r\n                            \r\n                            <Text>{userData.friend_count} Friends</Text>\r\n                            \r\n                        </Box>\r\n                        <Divider bg=\"muted.300\"/>\r\n                    </VStack>\r\n                    <Box>\r\n                        <VStack space={5}>\r\n                            <Button h=\"50\" bg=\"darkBlue.700\" onPress={() => navigation.navigate('Settings')}>Account Settings</Button>\r\n                            <Button h=\"50\" bg=\"darkBlue.700\" onPress={() => this.logout(navigation)}>Logout</Button>\r\n                        </VStack>\r\n                    </Box>\r\n                </Box>\r\n            </NativeBaseProvider>\r\n        );\r\n    }\r\n}\r\n\r\nProfileScreen.propTypes = {\r\n    navigation: PropTypes.shape({\r\n        navigate: PropTypes.func.isRequired,\r\n        addListener: PropTypes.func.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}