{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { mergeProps as $dtb0o$mergeProps, filterDOMProps as $dtb0o$filterDOMProps } from \"@react-aria/utils\";\nimport { useFocusable as $dtb0o$useFocusable } from \"@react-aria/focus\";\nimport { usePress as $dtb0o$usePress } from \"@react-aria/interactions\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $9f08aaca62c37bf3$exports = {};\n$parcel$export($9f08aaca62c37bf3$exports, \"useToggle\", function () {\n  return $9f08aaca62c37bf3$export$cbe85ee05b554577;\n});\n\nfunction $9f08aaca62c37bf3$export$cbe85ee05b554577(props, state, ref) {\n  var _props$isDisabled = props.isDisabled,\n      isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n      isRequired = props.isRequired,\n      isReadOnly = props.isReadOnly,\n      value = props.value,\n      name = props.name,\n      children = props.children,\n      ariaLabel = props['aria-label'],\n      ariaLabelledby = props['aria-labelledby'],\n      _props$validationStat = props.validationState,\n      validationState = _props$validationStat === void 0 ? 'valid' : _props$validationStat;\n\n  var onChange = function onChange(e) {\n    e.stopPropagation();\n    state.setSelected(e.target.checked);\n  };\n\n  var hasChildren = children != null;\n  var hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n\n  var _$dtb0o$usePress = $dtb0o$usePress({\n    isDisabled: isDisabled\n  }),\n      pressProps = _$dtb0o$usePress.pressProps;\n\n  var _$dtb0o$useFocusable = $dtb0o$useFocusable(props, ref),\n      focusableProps = _$dtb0o$useFocusable.focusableProps;\n\n  var interactions = $dtb0o$mergeProps(pressProps, focusableProps);\n  var domProps = $dtb0o$filterDOMProps(props, {\n    labelable: true\n  });\n  return {\n    inputProps: $dtb0o$mergeProps(domProps, _objectSpread({\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-controls': props['aria-controls'],\n      'aria-readonly': isReadOnly || undefined,\n      'aria-required': isRequired || undefined,\n      onChange: onChange,\n      disabled: isDisabled,\n      value: value,\n      name: name,\n      type: 'checkbox'\n    }, interactions))\n  };\n}\n\nexport { $9f08aaca62c37bf3$export$cbe85ee05b554577 as useToggle };","map":{"version":3,"mappings":"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","names":["mergeProps","$dtb0o$mergeProps","filterDOMProps","$dtb0o$filterDOMProps","useFocusable","$dtb0o$useFocusable","usePress","$dtb0o$usePress","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$9f08aaca62c37bf3$exports","$9f08aaca62c37bf3$export$cbe85ee05b554577","props","state","ref","isDisabled","isRequired","isReadOnly","value","name","children","ariaLabel","ariaLabelledby","validationState","onChange","stopPropagation","setSelected","target","checked","hasChildren","hasAriaLabel","console","warn","pressProps","focusableProps","interactions","domProps","labelable","inputProps","undefined","disabled","type","useToggle"],"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/@react-aria/toggle/dist/module.js"],"sourcesContent":["import {mergeProps as $dtb0o$mergeProps, filterDOMProps as $dtb0o$filterDOMProps} from \"@react-aria/utils\";\nimport {useFocusable as $dtb0o$useFocusable} from \"@react-aria/focus\";\nimport {usePress as $dtb0o$usePress} from \"@react-aria/interactions\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $9f08aaca62c37bf3$exports = {};\n\n$parcel$export($9f08aaca62c37bf3$exports, \"useToggle\", () => $9f08aaca62c37bf3$export$cbe85ee05b554577);\n\n\n\nfunction $9f08aaca62c37bf3$export$cbe85ee05b554577(props, state, ref) {\n    let { isDisabled: isDisabled = false , isRequired: isRequired , isReadOnly: isReadOnly , value: value , name: name , children: children , 'aria-label': ariaLabel , 'aria-labelledby': ariaLabelledby , validationState: validationState = 'valid'  } = props;\n    let onChange = (e)=>{\n        // since we spread props on label, onChange will end up there as well as in here.\n        // so we have to stop propagation at the lowest level that we care about\n        e.stopPropagation();\n        state.setSelected(e.target.checked);\n    };\n    let hasChildren = children != null;\n    let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n    if (!hasChildren && !hasAriaLabel) console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n    // This handles focusing the input on pointer down, which Safari does not do by default.\n    let { pressProps: pressProps  } = $dtb0o$usePress({\n        isDisabled: isDisabled\n    });\n    let { focusableProps: focusableProps  } = $dtb0o$useFocusable(props, ref);\n    let interactions = $dtb0o$mergeProps(pressProps, focusableProps);\n    let domProps = $dtb0o$filterDOMProps(props, {\n        labelable: true\n    });\n    return {\n        inputProps: $dtb0o$mergeProps(domProps, {\n            'aria-invalid': validationState === 'invalid' || undefined,\n            'aria-errormessage': props['aria-errormessage'],\n            'aria-controls': props['aria-controls'],\n            'aria-readonly': isReadOnly || undefined,\n            'aria-required': isRequired || undefined,\n            onChange: onChange,\n            disabled: isDisabled,\n            value: value,\n            name: name,\n            type: 'checkbox',\n            ...interactions\n        })\n    };\n}\n\n\n\n\nexport {$9f08aaca62c37bf3$export$cbe85ee05b554577 as useToggle};\n//# sourceMappingURL=module.js.map\n"]},"metadata":{},"sourceType":"module"}