{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useControlledState as $lfBG4$useControlledState } from \"@react-stately/utils\";\nimport { useMemo as $lfBG4$useMemo, useState as $lfBG4$useState } from \"react\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $7641130e45ddf243$exports = {};\n$parcel$export($7641130e45ddf243$exports, \"useRadioGroupState\", function () {\n  return $7641130e45ddf243$export$bca9d026f8e704eb;\n});\nvar $7641130e45ddf243$var$instance = Math.round(Math.random() * 10000000000);\nvar $7641130e45ddf243$var$i = 0;\n\nfunction $7641130e45ddf243$export$bca9d026f8e704eb(props) {\n  var name = $lfBG4$useMemo(function () {\n    return props.name || \"radio-group-\" + $7641130e45ddf243$var$instance + \"-\" + ++$7641130e45ddf243$var$i;\n  }, [props.name]);\n\n  var _$lfBG4$useControlled = $lfBG4$useControlledState(props.value, props.defaultValue, props.onChange),\n      _$lfBG4$useControlled2 = _slicedToArray(_$lfBG4$useControlled, 2),\n      selectedValue = _$lfBG4$useControlled2[0],\n      setSelected = _$lfBG4$useControlled2[1];\n\n  var _$lfBG4$useState = $lfBG4$useState(null),\n      _$lfBG4$useState2 = _slicedToArray(_$lfBG4$useState, 2),\n      lastFocusedValue = _$lfBG4$useState2[0],\n      setLastFocusedValue = _$lfBG4$useState2[1];\n\n  var setSelectedValue = function setSelectedValue(value) {\n    if (!props.isReadOnly && !props.isDisabled) setSelected(value);\n  };\n\n  return {\n    name: name,\n    selectedValue: selectedValue,\n    setSelectedValue: setSelectedValue,\n    lastFocusedValue: lastFocusedValue,\n    setLastFocusedValue: setLastFocusedValue,\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false\n  };\n}\n\nexport { $7641130e45ddf243$export$bca9d026f8e704eb as useRadioGroupState };","map":{"version":3,"mappings":";AAAA,SAAQA,kBAAkB,IAAIC,yBAA9B,QAA8D,sBAA9D;AACA,SAAQC,OAAO,IAAIC,cAAnB,EAAmCC,QAAQ,IAAIC,eAA/C,QAAqE,OAArE;;AAEA,SAASC,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8BC,CAA9B,EAAiCC,CAAjC,EAAoC;AAClCC,QAAM,CAACC,cAAP,CAAsBL,CAAtB,EAAyBC,CAAzB,EAA4B;AAACK,OAAG,EAAEJ,CAAN;AAASK,OAAG,EAAEJ,CAAd;AAAiBK,cAAU,EAAE,IAA7B;AAAmCC,gBAAY,EAAE;AAAjD,GAA5B;AACD;;AACD,IAAIC,yBAAyB,GAAG,EAAhC;AAEAX,cAAc,CAACW,yBAAD,EAA4B,oBAA5B,EAAkD;AAAA,SAAMC,yCAAN;AAAA,CAAlD,CAAd;AAGA,IAAIC,8BAA8B,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,WAA3B,CAArC;AACA,IAAIC,uBAAuB,GAAG,CAA9B;;AACA,SAASL,yCAAT,CAAmDM,KAAnD,EAA0D;AAEtD,MAAIC,IAAI,GAAGtB,cAAc,CAAC;AAAA,WAAIqB,KAAK,CAACC,IAAN,qBAA6BN,8BAA7B,SAA+D,EAAEI,uBAArE;AAAA,GAAD,EACvB,CACEC,KAAK,CAACC,IADR,CADuB,CAAzB;;AAIA,8BAAmCxB,yBAAyB,CAACuB,KAAK,CAACE,KAAP,EAAcF,KAAK,CAACG,YAApB,EAAkCH,KAAK,CAACI,QAAxC,CAA5D;AAAA;AAAA,MAAKC,aAAL;AAAA,MAAoBC,WAApB;;AACA,yBAA8CzB,eAAe,CAAC,IAAD,CAA7D;AAAA;AAAA,MAAK0B,gBAAL;AAAA,MAAuBC,mBAAvB;;AACA,MAAIC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACP,KAAD,EAAS;AAC5B,QAAI,CAACF,KAAK,CAACU,UAAP,IAAqB,CAACV,KAAK,CAACW,UAAhC,EAA4CL,WAAW,CAACJ,KAAD,CAAX;AAC/C,GAFD;;AAGA,SAAO;AACHD,QAAI,EAAEA,IADH;AAEHI,iBAAa,EAAEA,aAFZ;AAGHI,oBAAgB,EAAEA,gBAHf;AAIHF,oBAAgB,EAAEA,gBAJf;AAKHC,uBAAmB,EAAEA,mBALlB;AAMHG,cAAU,EAAEX,KAAK,CAACW,UAAN,IAAoB,KAN7B;AAOHD,cAAU,EAAEV,KAAK,CAACU,UAAN,IAAoB;AAP7B,GAAP;AASH;;AAKD,SAAQhB,yCAAyC,IAAIkB,kBAArD","names":["useControlledState","$lfBG4$useControlledState","useMemo","$lfBG4$useMemo","useState","$lfBG4$useState","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$7641130e45ddf243$exports","$7641130e45ddf243$export$bca9d026f8e704eb","$7641130e45ddf243$var$instance","Math","round","random","$7641130e45ddf243$var$i","props","name","value","defaultValue","onChange","selectedValue","setSelected","lastFocusedValue","setLastFocusedValue","setSelectedValue","isReadOnly","isDisabled","useRadioGroupState"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-stately/radio/dist/module.js"],"sourcesContent":["import {useControlledState as $lfBG4$useControlledState} from \"@react-stately/utils\";\nimport {useMemo as $lfBG4$useMemo, useState as $lfBG4$useState} from \"react\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $7641130e45ddf243$exports = {};\n\n$parcel$export($7641130e45ddf243$exports, \"useRadioGroupState\", () => $7641130e45ddf243$export$bca9d026f8e704eb);\n\n\nlet $7641130e45ddf243$var$instance = Math.round(Math.random() * 10000000000);\nlet $7641130e45ddf243$var$i = 0;\nfunction $7641130e45ddf243$export$bca9d026f8e704eb(props) {\n    // Preserved here for backward compatibility. React Aria now generates the name instead of stately.\n    let name = $lfBG4$useMemo(()=>props.name || `radio-group-${$7641130e45ddf243$var$instance}-${++$7641130e45ddf243$var$i}`\n    , [\n        props.name\n    ]);\n    let [selectedValue, setSelected] = $lfBG4$useControlledState(props.value, props.defaultValue, props.onChange);\n    let [lastFocusedValue, setLastFocusedValue] = $lfBG4$useState(null);\n    let setSelectedValue = (value)=>{\n        if (!props.isReadOnly && !props.isDisabled) setSelected(value);\n    };\n    return {\n        name: name,\n        selectedValue: selectedValue,\n        setSelectedValue: setSelectedValue,\n        lastFocusedValue: lastFocusedValue,\n        setLastFocusedValue: setLastFocusedValue,\n        isDisabled: props.isDisabled || false,\n        isReadOnly: props.isReadOnly || false\n    };\n}\n\n\n\n\nexport {$7641130e45ddf243$export$bca9d026f8e704eb as useRadioGroupState};\n//# sourceMappingURL=module.js.map\n"]},"metadata":{},"sourceType":"module"}