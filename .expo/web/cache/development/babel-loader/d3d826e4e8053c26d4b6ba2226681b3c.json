{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar getData = function getData(done) {\n  var jsonValue, data;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@spacebook_details'));\n\n        case 3:\n          jsonValue = _context.sent;\n          data = JSON.parse(jsonValue);\n          return _context.abrupt(\"return\", done(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n          return _context.abrupt(\"return\", null);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar FriendsScreen = function (_Component) {\n  _inherits(FriendsScreen, _Component);\n\n  var _super = _createSuper(FriendsScreen);\n\n  function FriendsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, FriendsScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: {},\n      friends: {}\n    };\n    return _this;\n  }\n\n  _createClass(FriendsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getData(function (data) {\n        _this2.setState({\n          data: data\n        });\n\n        _this2.getFriends();\n      });\n    }\n  }, {\n    key: \"getFriends\",\n    value: function getFriends() {\n      var _this3 = this;\n\n      var id = this.state.id;\n      console.log(id);\n      fetch(\"http://localhost:3333/api/1.0.0/user/\" + id + \"/friends\", {\n        method: 'GET',\n        headers: {\n          'X-Authorization': token\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this3.setState({\n          friends: responseJson\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var friends = this.state.friends;\n      return _jsx(View, {\n        children: _jsx(FlatList, {\n          data: friends,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(View, {\n              style: {\n                borderWidth: 1,\n                borderColor: 'gray'\n              },\n              children: [_jsx(Text, {\n                children: item.user_id\n              }), _jsx(Text, {\n                children: item.user_givenname\n              }), _jsx(Text, {\n                children: item.user_familyname\n              })]\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.user_id;\n          }\n        })\n      });\n    }\n  }]);\n\n  return FriendsScreen;\n}(Component);\n\nexport default FriendsScreen;","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/FriendsScreen.js"],"names":["React","Component","AsyncStorage","getData","done","getItem","jsonValue","data","JSON","parse","console","log","FriendsScreen","props","state","friends","setState","getFriends","id","fetch","method","headers","token","then","response","json","responseJson","catch","error","item","borderWidth","borderColor","user_id","user_givenname","user_familyname"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEgBF,YAAY,CAACG,OAAb,CAAqB,oBAArB,CAFhB;;AAAA;AAEFC,UAAAA,SAFE;AAGFC,UAAAA,IAHE,GAGKC,IAAI,CAACC,KAAL,CAAWH,SAAX,CAHL;AAAA,2CAIDF,IAAI,CAACG,IAAD,CAJH;;AAAA;AAAA;AAAA;AAMRG,UAAAA,OAAO,CAACC,GAAR;;AANQ;AAAA,2CAQL,IARK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;IAWMC,a;;;;;AACF,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTP,MAAAA,IAAI,EAAE,EADG;AAETQ,MAAAA,OAAO,EAAE;AAFA,KAAb;AAHc;AAOjB;;;;WAED,6BAAmB;AAAA;;AACfZ,MAAAA,OAAO,CAAC,UAACI,IAAD,EAAU;AACd,QAAA,MAAI,CAACS,QAAL,CAAc;AACVT,UAAAA,IAAI,EAAJA;AADU,SAAd;;AAGA,QAAA,MAAI,CAACU,UAAL;AACH,OALM,CAAP;AAMH;;;WAED,sBAAY;AAAA;;AACR,UAAQC,EAAR,GAAe,KAAKJ,KAApB,CAAQI,EAAR;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYO,EAAZ;AACAC,MAAAA,KAAK,2CAA0CD,EAA1C,eAAyD;AAC1DE,QAAAA,MAAM,EAAE,KADkD;AAE1DC,QAAAA,OAAO,EAAE;AACL,6BAAmBC;AADd;AAFiD,OAAzD,CAAL,CAMCC,IAND,CAMM,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OANN,EAOCF,IAPD,CAOM,UAACG,YAAD,EAAkB;AACpBhB,QAAAA,OAAO,CAACC,GAAR,CAAYe,YAAZ;;AACA,QAAA,MAAI,CAACV,QAAL,CAAc;AACVD,UAAAA,OAAO,EAAEW;AADC,SAAd;AAGH,OAZD,EAaCC,KAbD,CAaO,UAACC,KAAD,EAAW;AACdlB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACH,OAfD;AAgBH;;;WAED,kBAAS;AACL,UAAQb,OAAR,GAAoB,KAAKD,KAAzB,CAAQC,OAAR;AACA,aACI,KAAC,IAAD;AAAA,kBACI,KAAC,QAAD;AACI,UAAA,IAAI,EAAEA,OADV;AAEI,UAAA,UAAU,EAAE;AAAA,gBAAEc,IAAF,QAAEA,IAAF;AAAA,mBACR,MAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAACC,gBAAAA,WAAW,EAAE,CAAd;AAAiBC,gBAAAA,WAAW,EAAE;AAA9B,eAAb;AAAA,yBACI,KAAC,IAAD;AAAA,0BAAOF,IAAI,CAACG;AAAZ,gBADJ,EAEI,KAAC,IAAD;AAAA,0BAAOH,IAAI,CAACI;AAAZ,gBAFJ,EAGI,KAAC,IAAD;AAAA,0BAAOJ,IAAI,CAACK;AAAZ,gBAHJ;AAAA,cADQ;AAAA,WAFhB;AASI,UAAA,YAAY,EAAE,sBAACL,IAAD;AAAA,mBAAUA,IAAI,CAACG,OAAf;AAAA;AATlB;AADJ,QADJ;AAeH;;;;EAzDuB/B,S;;AA4D5B,eAAeW,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, FlatList } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst getData = async (done) => {\r\n    try {\r\n        const jsonValue = await AsyncStorage.getItem('@spacebook_details');\r\n        const data = JSON.parse(jsonValue);\r\n        return done(data);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return null;\r\n};\r\n\r\nclass FriendsScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: {},\r\n            friends: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        getData((data) => {\r\n            this.setState({\r\n                data\r\n            });\r\n            this.getFriends();\r\n        });\r\n    }\r\n\r\n    getFriends(){\r\n        const { id } = this.state\r\n        console.log(id);\r\n        fetch(`http://localhost:3333/api/1.0.0/user/${ id }/friends`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-Authorization': token\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            console.log(responseJson);\r\n            this.setState({\r\n                friends: responseJson\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { friends } = this.state;\r\n        return (\r\n            <View>\r\n                <FlatList\r\n                    data={friends}\r\n                    renderItem={({item}) => (\r\n                        <View style={{borderWidth: 1, borderColor: 'gray'}}>\r\n                            <Text>{item.user_id}</Text>\r\n                            <Text>{item.user_givenname}</Text>\r\n                            <Text>{item.user_familyname}</Text>\r\n                        </View>\r\n                    )}\r\n                    keyExtractor={(item) => item.user_id}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FriendsScreen;"]},"metadata":{},"sourceType":"module"}