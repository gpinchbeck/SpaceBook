{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Context = require(\"./Context\");\n\nvar _hooks = require(\"./../color-mode/hooks\");\n\nvar _hooks2 = require(\"../../hooks\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/core/hybrid-overlay/HybridProvider.tsx\";\n\nvar HybridProvider = function HybridProvider(_ref) {\n  var children = _ref.children,\n      _ref$options = _ref.options,\n      _ref$options$initialC = _ref$options.initialColorMode,\n      initialColorMode = _ref$options$initialC === void 0 ? 'light' : _ref$options$initialC,\n      _ref$options$accessib = _ref$options.accessibleColors,\n      isTextColorAccessible = _ref$options$accessib === void 0 ? false : _ref$options$accessib,\n      useSystemColorMode = _ref$options.useSystemColorMode,\n      colorModeManager = _ref.colorModeManager;\n\n  var _useModeManager = (0, _hooks.useModeManager)(initialColorMode, useSystemColorMode, colorModeManager),\n      colorMode = _useModeManager.colorMode,\n      setColorMode = _useModeManager.setColorMode;\n\n  var toggleColorMode = _react.default.useCallback(function () {\n    setColorMode(colorMode === 'light' ? 'dark' : 'light');\n  }, [colorMode, setColorMode]);\n\n  var _React$useState = _react.default.useState(isTextColorAccessible),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      accessibleColors = _React$useState2[0],\n      setAccessibleColors = _React$useState2[1];\n\n  _react.default.useEffect(function () {\n    var escapeKeyListener = null;\n\n    if (_reactNative.Platform.OS === 'web') {\n      escapeKeyListener = function escapeKeyListener(e) {\n        if (e.key === 'Escape') {\n          if (_hooks2.keyboardDismissHandlerManager.length() > 0) {\n            var lastHandler = _hooks2.keyboardDismissHandlerManager.pop();\n\n            lastHandler();\n          }\n        }\n      };\n\n      document.addEventListener('keydown', escapeKeyListener);\n    }\n\n    return function () {\n      if (_reactNative.Platform.OS === 'web') {\n        document.removeEventListener('keydown', escapeKeyListener);\n      }\n    };\n  }, []);\n\n  return _react.default.createElement(_Context.HybridContext.Provider, {\n    value: {\n      colorMode: {\n        colorMode: colorMode,\n        toggleColorMode: toggleColorMode,\n        setColorMode: setColorMode,\n        accessibleColors: accessibleColors,\n        setAccessibleColors: setAccessibleColors\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nvar _default = HybridProvider;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_slicedToArray2","_react","_Context","_hooks","_hooks2","_this","_jsxFileName","HybridProvider","_ref","children","_ref$options","options","_ref$options$initialC","initialColorMode","_ref$options$accessib","accessibleColors","isTextColorAccessible","useSystemColorMode","colorModeManager","_useModeManager","useModeManager","colorMode","setColorMode","toggleColorMode","useCallback","_React$useState","useState","_React$useState2","setAccessibleColors","useEffect","escapeKeyListener","_reactNative","Platform","OS","e","key","keyboardDismissHandlerManager","length","lastHandler","pop","document","addEventListener","removeEventListener","createElement","HybridContext","Provider","__self","__source","fileName","lineNumber","columnNumber","_default"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/native-base/lib/commonjs/core/hybrid-overlay/HybridProvider.js"],"sourcesContent":["var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=_interopRequireDefault(require(\"react\"));var _reactNative=require(\"react-native\");var _Context=require(\"./Context\");var _hooks=require(\"./../color-mode/hooks\");var _hooks2=require(\"../../hooks\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/core/hybrid-overlay/HybridProvider.tsx\";var HybridProvider=function HybridProvider(_ref){var children=_ref.children,_ref$options=_ref.options,_ref$options$initialC=_ref$options.initialColorMode,initialColorMode=_ref$options$initialC===void 0?'light':_ref$options$initialC,_ref$options$accessib=_ref$options.accessibleColors,isTextColorAccessible=_ref$options$accessib===void 0?false:_ref$options$accessib,useSystemColorMode=_ref$options.useSystemColorMode,colorModeManager=_ref.colorModeManager;var _useModeManager=(0,_hooks.useModeManager)(initialColorMode,useSystemColorMode,colorModeManager),colorMode=_useModeManager.colorMode,setColorMode=_useModeManager.setColorMode;var toggleColorMode=_react.default.useCallback(function(){setColorMode(colorMode==='light'?'dark':'light');},[colorMode,setColorMode]);var _React$useState=_react.default.useState(isTextColorAccessible),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),accessibleColors=_React$useState2[0],setAccessibleColors=_React$useState2[1];_react.default.useEffect(function(){var escapeKeyListener=null;if(_reactNative.Platform.OS==='web'){escapeKeyListener=function escapeKeyListener(e){if(e.key==='Escape'){if(_hooks2.keyboardDismissHandlerManager.length()>0){var lastHandler=_hooks2.keyboardDismissHandlerManager.pop();lastHandler();}}};document.addEventListener('keydown',escapeKeyListener);}return function(){if(_reactNative.Platform.OS==='web'){document.removeEventListener('keydown',escapeKeyListener);}};},[]);return _react.default.createElement(_Context.HybridContext.Provider,{value:{colorMode:{colorMode:colorMode,toggleColorMode:toggleColorMode,setColorMode:setColorMode,accessibleColors:accessibleColors,setAccessibleColors:setAccessibleColors}},__self:_this,__source:{fileName:_jsxFileName,lineNumber:56,columnNumber:5}},children);};var _default=HybridProvider;exports.default=_default;\n//# sourceMappingURL=HybridProvider.js.map"]},"metadata":{},"sourceType":"script"}