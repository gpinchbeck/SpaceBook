{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport DisplayAlert from \"./DisplayAlert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar displayAlert = new DisplayAlert();\n\nvar getData = function getData(done) {\n  var jsonValue, data;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@spacebook_details'));\n\n        case 3:\n          jsonValue = _context.sent;\n          data = JSON.parse(jsonValue);\n          return _context.abrupt(\"return\", done(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar Profile = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n\n    _this.getUserData = function () {\n      console.log(_this.state.login_info.id);\n    };\n\n    _this.state = {\n      login_info: {},\n      userData: []\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(1);\n      getData(function (data) {\n        _this2.setState({\n          login_info: data\n        });\n      });\n      console.log(2);\n      this.getUserData();\n    }\n  }, {\n    key: \"logout\",\n    value: function logout(nav) {\n      fetch('http://localhost:3333/api/1.0.0/logout', {\n        method: 'post',\n        headers: {\n          'X-Authorization': this.state.login_info.token\n        },\n        body: {}\n      }).then(function (response) {\n        console.log(response.status);\n\n        if (response.status == 200) {\n          displayAlert.displayAlert('Logged out.');\n          nav.navigate('Login');\n        } else if (response.status == 401 || response.status == 500) {\n          displayAlert.displayAlert(response.statusText);\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var nav = this.props.navigation;\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Profile\"\n        }), _jsxs(Text, {\n          children: [\"Login id: \", this.state.login_info.id]\n        }), _jsxs(Text, {\n          children: [\"Login token: \", this.state.login_info.token]\n        }), _jsx(Button, {\n          title: \"Logout\",\n          onPress: function onPress() {\n            return _this3.logout(nav);\n          }\n        })]\n      });\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/Profile.js"],"names":["React","Component","AsyncStorage","DisplayAlert","displayAlert","getData","done","getItem","jsonValue","data","JSON","parse","console","log","Profile","props","getUserData","state","login_info","id","userData","setState","nav","fetch","method","headers","token","body","then","response","status","navigate","statusText","catch","error","navigation","logout"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, FlatList, Text, View } from 'react-native';\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nimport DisplayAlert from \"./DisplayAlert\";\r\n\r\nconst displayAlert = new DisplayAlert();\r\n\r\nconst getData = async (done) => {\r\n    try {\r\n        const jsonValue = await AsyncStorage.getItem('@spacebook_details');\r\n        const data = JSON.parse(jsonValue);\r\n        return done(data);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            login_info: {},\r\n            userData: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(1);\r\n        getData((data) => {\r\n            this.setState({\r\n                login_info: data\r\n            });\r\n        });\r\n        console.log(2);\r\n        this.getUserData();\r\n    }\r\n\r\n    getUserData = () => {\r\n        console.log(this.state.login_info.id);\r\n        // return fetch('http://localhost:3333/api/1.0.0/user/' + this.login_info.id, {\r\n        //     method: 'get',\r\n        //     headers: {\r\n        //         'X-Authorization': this.state.login_info.token\r\n        //     },\r\n        //     body: {}\r\n        // })\r\n        // .then((response) => response.json())\r\n        // .then((responseJson) => {\r\n        //     this.setState({\r\n        //         userData: responseJson\r\n        //     });\r\n        // })\r\n        // .catch((error) => {\r\n        //     console.log(error);\r\n        // });\r\n    };\r\n\r\n    logout(nav) {\r\n        fetch('http://localhost:3333/api/1.0.0/logout', {\r\n            method: 'post',\r\n            headers: {\r\n                'X-Authorization': this.state.login_info.token\r\n            },\r\n            body: {}\r\n        })\r\n        .then((response) => {\r\n            console.log(response.status);\r\n            if (response.status == 200){\r\n                displayAlert.displayAlert('Logged out.');\r\n                nav.navigate('Login');\r\n            }\r\n            else if (response.status == 401 || response.status == 500){\r\n                displayAlert.displayAlert(response.statusText);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const nav = this.props.navigation;\r\n        return (\r\n            <View>\r\n                <Text>Profile</Text>\r\n                <Text>Login id: {this.state.login_info.id}</Text>\r\n                <Text>Login token: {this.state.login_info.token}</Text>\r\n                {/* <View>\r\n                    <FlatList data={this.state.userData}\r\n                        renderItem={({item}) => (\r\n                            <View>\r\n                                <Text>{item.first_name}</Text>\r\n                                <Text>{item.last_name}</Text>\r\n                                <Text>{item.email}</Text>\r\n                                <Text>{item.friend_count}</Text>\r\n                            </View>\r\n                        )}\r\n                        keyExtractor={(item, index) => item.id.toString()}\r\n                    />\r\n                </View> */}\r\n                <Button title=\"Logout\" onPress={() => this.logout(nav)}/>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}