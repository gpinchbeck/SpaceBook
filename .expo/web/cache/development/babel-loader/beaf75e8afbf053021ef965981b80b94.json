{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport { loadAsync } from \"./Font\";\nexport function useFonts(map) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  useEffect(function () {\n    loadAsync(map).then(function () {\n      return setLoaded(true);\n    }).catch(setError);\n  }, []);\n  return [loaded, error];\n}","map":{"version":3,"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT;AAmBA,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAC1B,kBAA4BH,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOI,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA0BL,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACAR,WAAS,CAAC,YAAM;AACZE,aAAS,CAACE,GAAD,CAAT,CACKK,IADL,CACU;AAAA,aAAMH,SAAS,CAAC,IAAD,CAAf;AAAA,KADV,EAEKI,KAFL,CAEWF,QAFX;AAGH,GAJQ,EAIN,EAJM,CAAT;AAKA,SAAO,CAACH,MAAD,EAASE,KAAT,CAAP;AACH","names":["useEffect","useState","loadAsync","useFonts","map","loaded","setLoaded","error","setError","then","catch"],"sourceRoot":"","sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/expo-font/build/FontHooks.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { loadAsync } from './Font';\n// @needsAudit\n/**\n * ```ts\n * const [loaded, error] = useFonts({ ... });\n * ```\n * Load a map of fonts with [`loadAsync`](#loadasync). This returns a `boolean` if the fonts are\n * loaded and ready to use. It also returns an error if something went wrong, to use in development.\n *\n * > Note, the fonts are not \"reloaded\" when you dynamically change the font map.\n *\n * @param map A map of `fontFamily`s to [`FontSource`](#fontsource)s. After loading the font you can\n * use the key in the `fontFamily` style prop of a `Text` element.\n *\n * @return\n * - __loaded__ (`boolean`) - A boolean to detect if the font for `fontFamily` has finished\n * loading.\n * - __error__ (`Error | null`) - An error encountered when loading the fonts.\n */\nexport function useFonts(map) {\n    const [loaded, setLoaded] = useState(false);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        loadAsync(map)\n            .then(() => setLoaded(true))\n            .catch(setError);\n    }, []);\n    return [loaded, error];\n}\n//# sourceMappingURL=FontHooks.js.map"]},"metadata":{},"sourceType":"module"}