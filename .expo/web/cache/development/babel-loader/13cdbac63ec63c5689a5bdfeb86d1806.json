{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport DisplayAlert from \"./DisplayAlert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar getData = function getData(done) {\n  var jsonValue, data;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@spacebook_details'));\n\n        case 3:\n          jsonValue = _context.sent;\n          data = JSON.parse(jsonValue);\n          return _context.abrupt(\"return\", done(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar displayAlert = new DisplayAlert();\n\nvar SettingsScreen = function (_Component) {\n  _inherits(SettingsScreen, _Component);\n\n  var _super = _createSuper(SettingsScreen);\n\n  function SettingsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SettingsScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: {},\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(SettingsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getData(function (data) {\n        _this2.setState({\n          data: data\n        });\n      });\n    }\n  }, {\n    key: \"updateDetails\",\n    value: function updateDetails() {\n      fetch('http://localhost:3333/api/1.0.0/user/' + this.state.data.id, {\n        method: 'patch',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Authorization': ProfileScreen.state.login_info.token\n        },\n        body: JSON.stringify(to_send)\n      }).then(function (response) {\n        displayAlert.displayAlert('Details updated');\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"updatePhoto\",\n    value: function updatePhoto() {\n      console.log('Update photo');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsxs(View, {\n        children: [_jsxs(View, {\n          children: [_jsx(TextInput, {\n            placeholder: \"Change first name\"\n          }), _jsx(TextInput, {\n            placeholder: \"Change last name\"\n          }), _jsx(TextInput, {\n            placeholder: \"Change email\"\n          }), _jsx(TextInput, {\n            placeholder: \"Change password\"\n          }), _jsx(Button, {\n            title: \"Update details\",\n            onPress: function onPress() {\n              return _this3.updateDetails();\n            }\n          })]\n        }), _jsx(View, {\n          children: _jsx(Button, {\n            title: \"Update picture\",\n            onPress: function onPress() {\n              return _this3.updatePhoto();\n            }\n          })\n        })]\n      });\n    }\n  }]);\n\n  return SettingsScreen;\n}(Component);\n\nexport default SettingsScreen;","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/SettingsScreen.js"],"names":["React","Component","AsyncStorage","DisplayAlert","getData","done","getItem","jsonValue","data","JSON","parse","console","log","displayAlert","SettingsScreen","props","state","first_name","last_name","email","password","setState","fetch","id","method","headers","ProfileScreen","login_info","token","body","stringify","to_send","then","response","catch","error","updateDetails","updatePhoto"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,YAAP;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEgBH,YAAY,CAACI,OAAb,CAAqB,oBAArB,CAFhB;;AAAA;AAEFC,UAAAA,SAFE;AAGFC,UAAAA,IAHE,GAGKC,IAAI,CAACC,KAAL,CAAWH,SAAX,CAHL;AAAA,2CAIDF,IAAI,CAACG,IAAD,CAJH;;AAAA;AAAA;AAAA;AAMRG,UAAAA,OAAO,CAACC,GAAR;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAUA,IAAMC,YAAY,GAAG,IAAIV,YAAJ,EAArB;;IAEMW,c;;;;;AACF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTR,MAAAA,IAAI,EAAE,EADG;AAETS,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,KAAK,EAAE,EAJE;AAKTC,MAAAA,QAAQ,EAAE;AALD,KAAb;AAHe;AAUlB;;;;WAED,6BAAmB;AAAA;;AACfhB,MAAAA,OAAO,CAAC,UAACI,IAAD,EAAU;AACd,QAAA,MAAI,CAACa,QAAL,CAAc;AACVb,UAAAA,IAAI,EAAEA;AADI,SAAd;AAGH,OAJM,CAAP;AAKH;;;WAED,yBAAe;AACXc,MAAAA,KAAK,CAAC,0CAA0C,KAAKN,KAAL,CAAWR,IAAX,CAAgBe,EAA3D,EAA+D;AAChEC,QAAAA,MAAM,EAAE,OADwD;AAEhEC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,6BAAmBC,aAAa,CAACV,KAAd,CAAoBW,UAApB,CAA+BC;AAF7C,SAFuD;AAMhEC,QAAAA,IAAI,EAAEpB,IAAI,CAACqB,SAAL,CAAeC,OAAf;AAN0D,OAA/D,CAAL,CAQCC,IARD,CAQM,UAACC,QAAD,EAAc;AAChBpB,QAAAA,YAAY,CAACA,YAAb,CAA0B,iBAA1B;AACH,OAVD,EAWCqB,KAXD,CAWO,UAACC,KAAD,EAAW;AACdxB,QAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAZ;AACH,OAbD;AAcH;;;WAED,uBAAa;AACTxB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;;;WAED,kBAAS;AAAA;;AACL,aACI,MAAC,IAAD;AAAA,mBACI,MAAC,IAAD;AAAA,qBACI,KAAC,SAAD;AAAW,YAAA,WAAW,EAAC;AAAvB,YADJ,EAEI,KAAC,SAAD;AAAW,YAAA,WAAW,EAAC;AAAvB,YAFJ,EAGI,KAAC,SAAD;AAAW,YAAA,WAAW,EAAC;AAAvB,YAHJ,EAII,KAAC,SAAD;AAAW,YAAA,WAAW,EAAC;AAAvB,YAJJ,EAKI,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,gBAAd;AAA+B,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACwB,aAAL,EAAN;AAAA;AAAxC,YALJ;AAAA,UADJ,EAQI,KAAC,IAAD;AAAA,oBACI,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,gBAAd;AAA+B,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACC,WAAL,EAAN;AAAA;AAAxC;AADJ,UARJ;AAAA,QADJ;AAcH;;;;EAzDwBpC,S;;AA4D7B,eAAea,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, TextInput, Button } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport DisplayAlert from './DisplayAlert';\r\n\r\nconst getData = async (done) => {\r\n    try {\r\n        const jsonValue = await AsyncStorage.getItem('@spacebook_details');\r\n        const data = JSON.parse(jsonValue);\r\n        return done(data);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nconst displayAlert = new DisplayAlert();\r\n\r\nclass SettingsScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: {},\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        getData((data) => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n        });\r\n    }\r\n\r\n    updateDetails(){\r\n        fetch('http://localhost:3333/api/1.0.0/user/' + this.state.data.id, {\r\n            method: 'patch',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-Authorization': ProfileScreen.state.login_info.token\r\n            },\r\n            body: JSON.stringify(to_send)\r\n        })\r\n        .then((response) => {\r\n            displayAlert.displayAlert('Details updated');\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    updatePhoto(){\r\n        console.log('Update photo');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <View>\r\n                <View>\r\n                    <TextInput placeholder='Change first name'/>\r\n                    <TextInput placeholder='Change last name' />\r\n                    <TextInput placeholder='Change email' />\r\n                    <TextInput placeholder='Change password' />\r\n                    <Button title='Update details' onPress={() => this.updateDetails()}/>\r\n                </View>\r\n                <View>\r\n                    <Button title='Update picture' onPress={() => this.updatePhoto()}/>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SettingsScreen;"]},"metadata":{},"sourceType":"module"}