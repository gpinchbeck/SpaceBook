{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NativeBaseProvider, Box, Input, Button, FlatList, Text, Icon, HStack } from 'native-base';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport DisplayAlert from \"./DisplayAlert\";\nimport Storage from \"./Storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar asyncStorage = new Storage();\nvar displayAlert = new DisplayAlert();\n\nvar FindFreindsScreen = function (_Component) {\n  _inherits(FindFreindsScreen, _Component);\n\n  var _super = _createSuper(FindFreindsScreen);\n\n  function FindFreindsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, FindFreindsScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      searchText: '',\n      data: {},\n      users: []\n    };\n    return _this;\n  }\n\n  _createClass(FindFreindsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      asyncStorage.getData(function (data) {\n        _this2.setState({\n          data: data\n        });\n\n        _this2.getUsers();\n      });\n    }\n  }, {\n    key: \"getUsers\",\n    value: function getUsers() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          searchText = _this$state.searchText,\n          data = _this$state.data;\n      var url = \"http://localhost:3333/api/1.0.0/search\";\n\n      if (searchText !== '') {\n        url = url + \"?q=\" + searchText;\n      }\n\n      fetch(url, {\n        method: 'GET',\n        headers: {\n          'X-Authorization': data.token\n        }\n      }).then(function (response) {\n        if (response.status === 400) {\n          return Promise.reject(new Error(\"Bad request. Status: \" + response.status));\n        }\n\n        if (response.status === 401) {\n          return Promise.reject(new Error(\"Unauthorised. Status: \" + response.status));\n        }\n\n        if (response.status === 500) {\n          return Promise.reject(new Error(\"Server error. Status: \" + response.status));\n        }\n\n        return response.json();\n      }).then(function (responseJson) {\n        _this3.setState({\n          users: responseJson\n        });\n      }).catch(function (error) {\n        displayAlert.displayAlert(error);\n      });\n    }\n  }, {\n    key: \"addFriend\",\n    value: function addFriend(friendId) {\n      var data = this.state.data;\n      fetch(\"http://localhost:3333/api/1.0.0/user/\" + friendId + \"/friends\", {\n        method: 'POST',\n        headers: {\n          'X-Authorization': data.token\n        }\n      }).then(function (response) {\n        if (response.status === 401) {\n          return Promise.reject(new Error(\"Unauthorised. Status: \" + response.status));\n        }\n\n        if (response.status === 403) {\n          return Promise.reject(new Error(\"User is already added as a friend. Status: \" + response.status));\n        }\n\n        if (response.status === 404) {\n          return Promise.reject(new Error(\"Not found. Status: \" + response.status));\n        }\n\n        if (response.status === 500) {\n          return Promise.reject(new Error(\"Server error. Status: \" + response.status));\n        }\n\n        return displayAlert.displayAlert('Request sent.');\n      }).catch(function (error) {\n        displayAlert.displayAlert(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          users = _this$state2.users,\n          searchText = _this$state2.searchText,\n          data = _this$state2.data;\n      return _jsx(NativeBaseProvider, {\n        children: _jsxs(Box, {\n          children: [_jsx(Box, {\n            children: _jsx(Input, {\n              InputRightElement: _jsx(Button, {\n                children: \"Search\"\n              })\n            })\n          }), _jsx(Box, {\n            children: _jsx(FlatList, {\n              extraData: users,\n              data: users,\n              renderItem: function renderItem(_ref) {\n                var item = _ref.item;\n                return _jsx(Box, {\n                  children: item.user_id !== data.id && _jsx(Box, {\n                    children: _jsxs(HStack, {\n                      bg: \"red.300\",\n                      w: \"100%\",\n                      flex: 1,\n                      children: [_jsxs(Text, {\n                        children: [item.user_givenname, \" \", item.user_familyname]\n                      }), _jsx(Button, {\n                        pos: \"absolute\",\n                        right: 0,\n                        onPress: function onPress() {\n                          return _this4.addFriend(item.user_id);\n                        },\n                        children: _jsx(Icon, {\n                          as: _jsx(MaterialIcons, {\n                            name: \"add\"\n                          }),\n                          size: 5,\n                          mr: \"2\"\n                        })\n                      })]\n                    })\n                  })\n                });\n              },\n              keyExtractor: function keyExtractor(item) {\n                return item.user_id;\n              }\n            })\n          })]\n        })\n      });\n    }\n  }]);\n\n  return FindFreindsScreen;\n}(Component);\n\nexport default FindFreindsScreen;","map":{"version":3,"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/components/FindFriendsScreen.js"],"names":["React","Component","NativeBaseProvider","Box","Input","Button","FlatList","Text","Icon","HStack","MaterialIcons","DisplayAlert","Storage","asyncStorage","displayAlert","FindFreindsScreen","props","state","searchText","data","users","getData","setState","getUsers","url","fetch","method","headers","token","then","response","status","Promise","reject","Error","json","responseJson","catch","error","friendId","item","user_id","id","user_givenname","user_familyname","addFriend"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { NativeBaseProvider, Box, Input, Button, FlatList, Text, Icon, HStack } from 'native-base';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport DisplayAlert from './DisplayAlert';\r\nimport Storage from './Storage'\r\n\r\nconst asyncStorage = new Storage();\r\n\r\nconst displayAlert = new DisplayAlert();\r\n\r\nclass FindFreindsScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchText: '',\r\n            data: {},\r\n            users: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        asyncStorage.getData((data) => {\r\n            this.setState({\r\n                data\r\n            });\r\n            this.getUsers();\r\n        });\r\n    }\r\n\r\n    getUsers(){\r\n        const { searchText, data } = this.state;\r\n        let url = `http://localhost:3333/api/1.0.0/search`;\r\n        if (searchText !== ''){\r\n            url = `${ url }?q=${ searchText }`;\r\n        }\r\n        fetch(url,{\r\n            method: 'GET',\r\n            headers: {\r\n                'X-Authorization': data.token\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 400){\r\n                return Promise.reject(new Error(`Bad request. Status: ${  response.status}`));\r\n            }\r\n            if (response.status === 401){\r\n                return Promise.reject(new Error(`Unauthorised. Status: ${  response.status}`));\r\n            }\r\n            if (response.status === 500){\r\n                return Promise.reject(new Error(`Server error. Status: ${ response.status }`));\r\n            } \r\n            return response.json()\r\n        })\r\n        .then((responseJson) => {\r\n            this.setState({\r\n                users: responseJson\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            displayAlert.displayAlert(error);\r\n        });\r\n    }\r\n\r\n    addFriend(friendId){\r\n        const { data } = this.state;\r\n        fetch(`http://localhost:3333/api/1.0.0/user/${ friendId }/friends`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'X-Authorization': data.token\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 401){\r\n                return Promise.reject(new Error(`Unauthorised. Status: ${  response.status}`));\r\n            }\r\n            if (response.status === 403){\r\n                return Promise.reject(new Error(`User is already added as a friend. Status: ${  response.status}`));\r\n            }\r\n            if (response.status === 404){\r\n                return Promise.reject(new Error(`Not found. Status: ${  response.status}`));\r\n            }\r\n            if (response.status === 500){\r\n                return Promise.reject(new Error(`Server error. Status: ${ response.status }`));\r\n            } \r\n            return displayAlert.displayAlert('Request sent.');\r\n        })\r\n        .catch((error) => {\r\n            displayAlert.displayAlert(error);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { users, searchText, data } = this.state;\r\n        return (\r\n            <NativeBaseProvider>\r\n                <Box>\r\n                    <Box>\r\n                        <Input InputRightElement={<Button>Search</Button>}/>\r\n                    </Box>\r\n                    <Box>\r\n                        <FlatList extraData={users} data={users}\r\n                        renderItem={({item}) => (\r\n                            <Box>\r\n                                { item.user_id !== data.id && <Box>\r\n                                    <HStack bg=\"red.300\" w=\"100%\" flex={1}>\r\n                                        <Text>{item.user_givenname} {item.user_familyname}</Text>\r\n                                        <Button pos=\"absolute\" right={0} onPress={() => this.addFriend(item.user_id)}><Icon as={<MaterialIcons name=\"add\"/>} size={5} mr=\"2\"/></Button>\r\n                                    </HStack>\r\n                                </Box> }\r\n                            </Box>\r\n                        )}\r\n                        keyExtractor={(item) => item.user_id}\r\n                    />\r\n                    </Box>\r\n                </Box>\r\n            </NativeBaseProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FindFreindsScreen;"]},"metadata":{},"sourceType":"module"}