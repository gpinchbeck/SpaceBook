{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { snapValueToStep as $drHW0$snapValueToStep, clamp as $drHW0$clamp } from \"@react-aria/utils\";\nimport { useControlledState as $drHW0$useControlledState } from \"@react-stately/utils\";\nimport { useState as $drHW0$useState, useRef as $drHW0$useRef } from \"react\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $8f011f344c0ccbcc$exports = {};\n$parcel$export($8f011f344c0ccbcc$exports, \"useSliderState\", function () {\n  return $8f011f344c0ccbcc$export$e5fda3247f5d67f9;\n});\nvar $8f011f344c0ccbcc$var$DEFAULT_MIN_VALUE = 0;\nvar $8f011f344c0ccbcc$var$DEFAULT_MAX_VALUE = 100;\nvar $8f011f344c0ccbcc$var$DEFAULT_STEP_VALUE = 1;\n\nfunction $8f011f344c0ccbcc$export$e5fda3247f5d67f9(props) {\n  var isDisabled = props.isDisabled,\n      _props$minValue = props.minValue,\n      minValue = _props$minValue === void 0 ? $8f011f344c0ccbcc$var$DEFAULT_MIN_VALUE : _props$minValue,\n      _props$maxValue = props.maxValue,\n      maxValue = _props$maxValue === void 0 ? $8f011f344c0ccbcc$var$DEFAULT_MAX_VALUE : _props$maxValue,\n      formatter = props.numberFormatter,\n      _props$step = props.step,\n      step = _props$step === void 0 ? $8f011f344c0ccbcc$var$DEFAULT_STEP_VALUE : _props$step;\n\n  var _defaultValue;\n\n  var _$drHW0$useControlled = $drHW0$useControlledState(props.value, (_defaultValue = props.defaultValue) !== null && _defaultValue !== void 0 ? _defaultValue : [minValue], props.onChange),\n      _$drHW0$useControlled2 = _slicedToArray(_$drHW0$useControlled, 2),\n      values = _$drHW0$useControlled2[0],\n      setValues = _$drHW0$useControlled2[1];\n\n  var _$drHW0$useState = $drHW0$useState(new Array(values.length).fill(false)),\n      _$drHW0$useState2 = _slicedToArray(_$drHW0$useState, 2),\n      isDraggings = _$drHW0$useState2[0],\n      setDraggings = _$drHW0$useState2[1];\n\n  var isEditablesRef = $drHW0$useRef(new Array(values.length).fill(true));\n\n  var _$drHW0$useState3 = $drHW0$useState(undefined),\n      _$drHW0$useState4 = _slicedToArray(_$drHW0$useState3, 2),\n      focusedIndex = _$drHW0$useState4[0],\n      setFocusedIndex = _$drHW0$useState4[1];\n\n  var valuesRef = $drHW0$useRef(null);\n  valuesRef.current = values;\n  var isDraggingsRef = $drHW0$useRef(null);\n  isDraggingsRef.current = isDraggings;\n\n  function getValuePercent(value) {\n    return (value - minValue) / (maxValue - minValue);\n  }\n\n  function getThumbMinValue(index) {\n    return index === 0 ? minValue : values[index - 1];\n  }\n\n  function getThumbMaxValue(index) {\n    return index === values.length - 1 ? maxValue : values[index + 1];\n  }\n\n  function isThumbEditable(index) {\n    return isEditablesRef.current[index];\n  }\n\n  function setThumbEditable(index, editable) {\n    isEditablesRef.current[index] = editable;\n  }\n\n  function updateValue(index, value) {\n    if (isDisabled || !isThumbEditable(index)) return;\n    var thisMin = getThumbMinValue(index);\n    var thisMax = getThumbMaxValue(index);\n    value = $drHW0$snapValueToStep(value, thisMin, thisMax, step);\n    valuesRef.current = $8f011f344c0ccbcc$var$replaceIndex(valuesRef.current, index, value);\n    setValues(valuesRef.current);\n  }\n\n  function updateDragging(index, dragging) {\n    if (isDisabled || !isThumbEditable(index)) return;\n    var wasDragging = isDraggingsRef.current[index];\n    isDraggingsRef.current = $8f011f344c0ccbcc$var$replaceIndex(isDraggingsRef.current, index, dragging);\n    setDraggings(isDraggingsRef.current);\n    if (props.onChangeEnd && wasDragging && !isDraggingsRef.current.some(Boolean)) props.onChangeEnd(valuesRef.current);\n  }\n\n  function getFormattedValue(value) {\n    return formatter.format(value);\n  }\n\n  function setThumbPercent(index, percent) {\n    updateValue(index, getPercentValue(percent));\n  }\n\n  function getRoundedValue(value) {\n    return Math.round((value - minValue) / step) * step + minValue;\n  }\n\n  function getPercentValue(percent) {\n    var val = percent * (maxValue - minValue) + minValue;\n    return $drHW0$clamp(getRoundedValue(val), minValue, maxValue);\n  }\n\n  return {\n    values: values,\n    getThumbValue: function getThumbValue(index) {\n      return values[index];\n    },\n    setThumbValue: updateValue,\n    setThumbPercent: setThumbPercent,\n    isThumbDragging: function isThumbDragging(index) {\n      return isDraggings[index];\n    },\n    setThumbDragging: updateDragging,\n    focusedThumb: focusedIndex,\n    setFocusedThumb: setFocusedIndex,\n    getThumbPercent: function getThumbPercent(index) {\n      return getValuePercent(values[index]);\n    },\n    getValuePercent: getValuePercent,\n    getThumbValueLabel: function getThumbValueLabel(index) {\n      return getFormattedValue(values[index]);\n    },\n    getFormattedValue: getFormattedValue,\n    getThumbMinValue: getThumbMinValue,\n    getThumbMaxValue: getThumbMaxValue,\n    getPercentValue: getPercentValue,\n    isThumbEditable: isThumbEditable,\n    setThumbEditable: setThumbEditable,\n    step: step\n  };\n}\n\nfunction $8f011f344c0ccbcc$var$replaceIndex(array, index, value) {\n  if (array[index] === value) return array;\n  return [].concat(_toConsumableArray(array.slice(0, index)), [value], _toConsumableArray(array.slice(index + 1)));\n}\n\nexport { $8f011f344c0ccbcc$export$e5fda3247f5d67f9 as useSliderState };","map":{"version":3,"mappings":"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","names":["snapValueToStep","$drHW0$snapValueToStep","clamp","$drHW0$clamp","useControlledState","$drHW0$useControlledState","useState","$drHW0$useState","useRef","$drHW0$useRef","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$8f011f344c0ccbcc$exports","$8f011f344c0ccbcc$export$e5fda3247f5d67f9","$8f011f344c0ccbcc$var$DEFAULT_MIN_VALUE","$8f011f344c0ccbcc$var$DEFAULT_MAX_VALUE","$8f011f344c0ccbcc$var$DEFAULT_STEP_VALUE","props","isDisabled","minValue","maxValue","formatter","numberFormatter","step","_defaultValue","value","defaultValue","onChange","values","setValues","Array","length","fill","isDraggings","setDraggings","isEditablesRef","undefined","focusedIndex","setFocusedIndex","valuesRef","current","isDraggingsRef","getValuePercent","getThumbMinValue","index","getThumbMaxValue","isThumbEditable","setThumbEditable","editable","updateValue","thisMin","thisMax","$8f011f344c0ccbcc$var$replaceIndex","updateDragging","dragging","wasDragging","onChangeEnd","some","Boolean","getFormattedValue","format","setThumbPercent","percent","getPercentValue","getRoundedValue","Math","round","val","getThumbValue","setThumbValue","isThumbDragging","setThumbDragging","focusedThumb","setFocusedThumb","getThumbPercent","getThumbValueLabel","array","slice","useSliderState"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-stately/slider/dist/module.js"],"sourcesContent":["import {snapValueToStep as $drHW0$snapValueToStep, clamp as $drHW0$clamp} from \"@react-aria/utils\";\nimport {useControlledState as $drHW0$useControlledState} from \"@react-stately/utils\";\nimport {useState as $drHW0$useState, useRef as $drHW0$useRef} from \"react\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $8f011f344c0ccbcc$exports = {};\n\n$parcel$export($8f011f344c0ccbcc$exports, \"useSliderState\", () => $8f011f344c0ccbcc$export$e5fda3247f5d67f9);\n\n\n\nconst $8f011f344c0ccbcc$var$DEFAULT_MIN_VALUE = 0;\nconst $8f011f344c0ccbcc$var$DEFAULT_MAX_VALUE = 100;\nconst $8f011f344c0ccbcc$var$DEFAULT_STEP_VALUE = 1;\nfunction $8f011f344c0ccbcc$export$e5fda3247f5d67f9(props) {\n    const { isDisabled: isDisabled , minValue: minValue = $8f011f344c0ccbcc$var$DEFAULT_MIN_VALUE , maxValue: maxValue = $8f011f344c0ccbcc$var$DEFAULT_MAX_VALUE , numberFormatter: formatter , step: step = $8f011f344c0ccbcc$var$DEFAULT_STEP_VALUE  } = props;\n    var _defaultValue;\n    const [values, setValues] = $drHW0$useControlledState(props.value, (_defaultValue = props.defaultValue) !== null && _defaultValue !== void 0 ? _defaultValue : [\n        minValue\n    ], props.onChange);\n    const [isDraggings, setDraggings] = $drHW0$useState(new Array(values.length).fill(false));\n    const isEditablesRef = $drHW0$useRef(new Array(values.length).fill(true));\n    const [focusedIndex, setFocusedIndex] = $drHW0$useState(undefined);\n    const valuesRef = $drHW0$useRef(null);\n    valuesRef.current = values;\n    const isDraggingsRef = $drHW0$useRef(null);\n    isDraggingsRef.current = isDraggings;\n    function getValuePercent(value) {\n        return (value - minValue) / (maxValue - minValue);\n    }\n    function getThumbMinValue(index) {\n        return index === 0 ? minValue : values[index - 1];\n    }\n    function getThumbMaxValue(index) {\n        return index === values.length - 1 ? maxValue : values[index + 1];\n    }\n    function isThumbEditable(index) {\n        return isEditablesRef.current[index];\n    }\n    function setThumbEditable(index, editable) {\n        isEditablesRef.current[index] = editable;\n    }\n    function updateValue(index, value) {\n        if (isDisabled || !isThumbEditable(index)) return;\n        const thisMin = getThumbMinValue(index);\n        const thisMax = getThumbMaxValue(index);\n        // Round value to multiple of step, clamp value between min and max\n        value = $drHW0$snapValueToStep(value, thisMin, thisMax, step);\n        valuesRef.current = $8f011f344c0ccbcc$var$replaceIndex(valuesRef.current, index, value);\n        setValues(valuesRef.current);\n    }\n    function updateDragging(index, dragging) {\n        if (isDisabled || !isThumbEditable(index)) return;\n        const wasDragging = isDraggingsRef.current[index];\n        isDraggingsRef.current = $8f011f344c0ccbcc$var$replaceIndex(isDraggingsRef.current, index, dragging);\n        setDraggings(isDraggingsRef.current);\n        // Call onChangeEnd if no handles are dragging.\n        if (props.onChangeEnd && wasDragging && !isDraggingsRef.current.some(Boolean)) props.onChangeEnd(valuesRef.current);\n    }\n    function getFormattedValue(value) {\n        return formatter.format(value);\n    }\n    function setThumbPercent(index, percent) {\n        updateValue(index, getPercentValue(percent));\n    }\n    function getRoundedValue(value) {\n        return Math.round((value - minValue) / step) * step + minValue;\n    }\n    function getPercentValue(percent) {\n        const val = percent * (maxValue - minValue) + minValue;\n        return $drHW0$clamp(getRoundedValue(val), minValue, maxValue);\n    }\n    return {\n        values: values,\n        getThumbValue: (index)=>values[index]\n        ,\n        setThumbValue: updateValue,\n        setThumbPercent: setThumbPercent,\n        isThumbDragging: (index)=>isDraggings[index]\n        ,\n        setThumbDragging: updateDragging,\n        focusedThumb: focusedIndex,\n        setFocusedThumb: setFocusedIndex,\n        getThumbPercent: (index)=>getValuePercent(values[index])\n        ,\n        getValuePercent: getValuePercent,\n        getThumbValueLabel: (index)=>getFormattedValue(values[index])\n        ,\n        getFormattedValue: getFormattedValue,\n        getThumbMinValue: getThumbMinValue,\n        getThumbMaxValue: getThumbMaxValue,\n        getPercentValue: getPercentValue,\n        isThumbEditable: isThumbEditable,\n        setThumbEditable: setThumbEditable,\n        step: step\n    };\n}\nfunction $8f011f344c0ccbcc$var$replaceIndex(array, index, value) {\n    if (array[index] === value) return array;\n    return [\n        ...array.slice(0, index),\n        value,\n        ...array.slice(index + 1)\n    ];\n}\n\n\n\n\nexport {$8f011f344c0ccbcc$export$e5fda3247f5d67f9 as useSliderState};\n//# sourceMappingURL=module.js.map\n"]},"metadata":{},"sourceType":"module"}