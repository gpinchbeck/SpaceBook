{"ast":null,"code":"import * as React from 'react';\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nexport default function useOnRouteFocus(_ref) {\n  var router = _ref.router,\n      getState = _ref.getState,\n      sourceRouteKey = _ref.key,\n      setState = _ref.setState;\n\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n      onRouteFocusParent = _React$useContext.onRouteFocus;\n\n  return React.useCallback(function (key) {\n    var state = getState();\n    var result = router.getStateForRouteFocus(state, key);\n\n    if (result !== state) {\n      setState(result);\n    }\n\n    if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {\n      onRouteFocusParent(sourceRouteKey);\n    }\n  }, [getState, onRouteFocusParent, router, setState, sourceRouteKey]);\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,wBAAP;AAOA,eAAe,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC5C,MACEC,MADF,GAKID,IALJ,CACEC,MADF;AAAA,MAEEC,QAFF,GAKIF,IALJ,CAEEE,QAFF;AAAA,MAGOC,cAHP,GAKIH,IALJ,CAGEI,GAHF;AAAA,MAIEC,QAJF,GAKIL,IALJ,CAIEK,QAJF;;AAMA,0BAEIR,KAAK,CAACS,UAAN,CAAiBR,wBAAjB,CAFJ;AAAA,MACgBS,kBADhB,qBACEC,YADF;;AAGA,SAAOX,KAAK,CAACY,WAAN,CAAkB,aAAG,EAAI;AAC9B,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;AACA,QAAMS,MAAM,GAAGV,MAAM,CAACW,qBAAP,CAA6BF,KAA7B,EAAoCN,GAApC,CAAf;;AAEA,QAAIO,MAAM,KAAKD,KAAf,EAAsB;AACpBL,cAAQ,CAACM,MAAD,CAAR;AACD;;AAED,QAAIJ,kBAAkB,KAAKM,SAAvB,IAAoCV,cAAc,KAAKU,SAA3D,EAAsE;AACpEN,wBAAkB,CAACJ,cAAD,CAAlB;AACD;AACF,GAXM,EAWJ,CAACD,QAAD,EAAWK,kBAAX,EAA+BN,MAA/B,EAAuCI,QAAvC,EAAiDF,cAAjD,CAXI,CAAP;AAYD","names":["React","NavigationBuilderContext","useOnRouteFocus","_ref","router","getState","sourceRouteKey","key","setState","useContext","onRouteFocusParent","onRouteFocus","useCallback","state","result","getStateForRouteFocus","undefined"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-navigation/core/lib/module/useOnRouteFocus.js"],"sourcesContent":["import * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\n\n/**\n * Hook to handle focus actions for a route.\n * Focus action needs to be treated specially, coz when a nested route is focused,\n * the parent navigators also needs to be focused.\n */\nexport default function useOnRouteFocus(_ref) {\n  let {\n    router,\n    getState,\n    key: sourceRouteKey,\n    setState\n  } = _ref;\n  const {\n    onRouteFocus: onRouteFocusParent\n  } = React.useContext(NavigationBuilderContext);\n  return React.useCallback(key => {\n    const state = getState();\n    const result = router.getStateForRouteFocus(state, key);\n\n    if (result !== state) {\n      setState(result);\n    }\n\n    if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {\n      onRouteFocusParent(sourceRouteKey);\n    }\n  }, [getState, onRouteFocusParent, router, setState, sourceRouteKey]);\n}\n//# sourceMappingURL=useOnRouteFocus.js.map"]},"metadata":{},"sourceType":"module"}