{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport NavigationContext from \"./NavigationContext\";\nimport NavigationRouteContext from \"./NavigationRouteContext\";\nimport SceneView from \"./SceneView\";\nimport useNavigationCache from \"./useNavigationCache\";\nimport useRouteCache from \"./useRouteCache\";\nexport default function useDescriptors(_ref) {\n  var state = _ref.state,\n      screens = _ref.screens,\n      navigation = _ref.navigation,\n      screenOptions = _ref.screenOptions,\n      defaultScreenOptions = _ref.defaultScreenOptions,\n      onAction = _ref.onAction,\n      getState = _ref.getState,\n      setState = _ref.setState,\n      addListener = _ref.addListener,\n      addKeyedListener = _ref.addKeyedListener,\n      onRouteFocus = _ref.onRouteFocus,\n      router = _ref.router,\n      emitter = _ref.emitter;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      options = _React$useState2[0],\n      setOptions = _React$useState2[1];\n\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n      onDispatchAction = _React$useContext.onDispatchAction,\n      onOptionsChange = _React$useContext.onOptionsChange,\n      stackRef = _React$useContext.stackRef;\n\n  var context = React.useMemo(function () {\n    return {\n      navigation: navigation,\n      onAction: onAction,\n      addListener: addListener,\n      addKeyedListener: addKeyedListener,\n      onRouteFocus: onRouteFocus,\n      onDispatchAction: onDispatchAction,\n      onOptionsChange: onOptionsChange,\n      stackRef: stackRef\n    };\n  }, [navigation, onAction, addListener, addKeyedListener, onRouteFocus, onDispatchAction, onOptionsChange, stackRef]);\n  var navigations = useNavigationCache({\n    state: state,\n    getState: getState,\n    navigation: navigation,\n    setOptions: setOptions,\n    router: router,\n    emitter: emitter\n  });\n  var routes = useRouteCache(state.routes);\n  return routes.reduce(function (acc, route, i) {\n    var config = screens[route.name];\n    var screen = config.props;\n    var navigation = navigations[route.key];\n    var optionsList = [screenOptions].concat(_toConsumableArray(config.options ? config.options.filter(Boolean) : []), [screen.options, options[route.key]]);\n    var customOptions = optionsList.reduce(function (acc, curr) {\n      return _extends(acc, typeof curr !== 'function' ? curr : curr({\n        route: route,\n        navigation: navigation\n      }));\n    }, {});\n\n    var mergedOptions = _objectSpread(_objectSpread({}, typeof defaultScreenOptions === 'function' ? defaultScreenOptions({\n      route: route,\n      navigation: navigation,\n      options: customOptions\n    }) : defaultScreenOptions), customOptions);\n\n    var clearOptions = function clearOptions() {\n      return setOptions(function (o) {\n        if (route.key in o) {\n          var _route$key = route.key,\n              _ = o[_route$key],\n              rest = _objectWithoutProperties(o, [_route$key].map(_toPropertyKey));\n\n          return rest;\n        }\n\n        return o;\n      });\n    };\n\n    acc[route.key] = {\n      route: route,\n      navigation: navigation,\n      render: function render() {\n        return React.createElement(NavigationBuilderContext.Provider, {\n          key: route.key,\n          value: context\n        }, React.createElement(NavigationContext.Provider, {\n          value: navigation\n        }, React.createElement(NavigationRouteContext.Provider, {\n          value: route\n        }, React.createElement(SceneView, {\n          navigation: navigation,\n          route: route,\n          screen: screen,\n          routeState: state.routes[i].state,\n          getState: getState,\n          setState: setState,\n          options: mergedOptions,\n          clearOptions: clearOptions\n        }))));\n      },\n      options: mergedOptions\n    };\n    return acc;\n  }, {});\n}","map":{"version":3,"mappings":"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","names":["React","NavigationBuilderContext","NavigationContext","NavigationRouteContext","SceneView","useNavigationCache","useRouteCache","useDescriptors","_ref","state","screens","navigation","screenOptions","defaultScreenOptions","onAction","getState","setState","addListener","addKeyedListener","onRouteFocus","router","emitter","useState","options","setOptions","useContext","onDispatchAction","onOptionsChange","stackRef","context","useMemo","navigations","routes","reduce","acc","route","i","config","name","screen","props","key","optionsList","filter","Boolean","customOptions","curr","mergedOptions","clearOptions","o","_","rest","render","createElement","Provider","value","routeState"],"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/@react-navigation/core/lib/module/useDescriptors.js"],"sourcesContent":["import * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport SceneView from './SceneView';\nimport useNavigationCache from './useNavigationCache';\nimport useRouteCache from './useRouteCache';\n\n/**\n * Hook to create descriptor objects for the child routes.\n *\n * A descriptor object provides 3 things:\n * - Helper method to render a screen\n * - Options specified by the screen for the navigator\n * - Navigation object intended for the route\n */\nexport default function useDescriptors(_ref) {\n  let {\n    state,\n    screens,\n    navigation,\n    screenOptions,\n    defaultScreenOptions,\n    onAction,\n    getState,\n    setState,\n    addListener,\n    addKeyedListener,\n    onRouteFocus,\n    router,\n    emitter\n  } = _ref;\n  const [options, setOptions] = React.useState({});\n  const {\n    onDispatchAction,\n    onOptionsChange,\n    stackRef\n  } = React.useContext(NavigationBuilderContext);\n  const context = React.useMemo(() => ({\n    navigation,\n    onAction,\n    addListener,\n    addKeyedListener,\n    onRouteFocus,\n    onDispatchAction,\n    onOptionsChange,\n    stackRef\n  }), [navigation, onAction, addListener, addKeyedListener, onRouteFocus, onDispatchAction, onOptionsChange, stackRef]);\n  const navigations = useNavigationCache({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter\n  });\n  const routes = useRouteCache(state.routes);\n  return routes.reduce((acc, route, i) => {\n    const config = screens[route.name];\n    const screen = config.props;\n    const navigation = navigations[route.key];\n    const optionsList = [// The default `screenOptions` passed to the navigator\n    screenOptions, // The `screenOptions` props passed to `Group` elements\n    ...(config.options ? config.options.filter(Boolean) : []), // The `options` prop passed to `Screen` elements,\n    screen.options, // The options set via `navigation.setOptions`\n    options[route.key]];\n    const customOptions = optionsList.reduce((acc, curr) => Object.assign(acc, typeof curr !== 'function' ? curr : curr({\n      route,\n      navigation\n    })), {});\n    const mergedOptions = { ...(typeof defaultScreenOptions === 'function' ? // @ts-expect-error: ts gives incorrect error here\n      defaultScreenOptions({\n        route,\n        navigation,\n        options: customOptions\n      }) : defaultScreenOptions),\n      ...customOptions\n    };\n\n    const clearOptions = () => setOptions(o => {\n      if (route.key in o) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const {\n          [route.key]: _,\n          ...rest\n        } = o;\n        return rest;\n      }\n\n      return o;\n    });\n\n    acc[route.key] = {\n      route,\n      // @ts-expect-error: it's missing action helpers, fix later\n      navigation,\n\n      render() {\n        return /*#__PURE__*/React.createElement(NavigationBuilderContext.Provider, {\n          key: route.key,\n          value: context\n        }, /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n          value: navigation\n        }, /*#__PURE__*/React.createElement(NavigationRouteContext.Provider, {\n          value: route\n        }, /*#__PURE__*/React.createElement(SceneView, {\n          navigation: navigation,\n          route: route,\n          screen: screen,\n          routeState: state.routes[i].state,\n          getState: getState,\n          setState: setState,\n          options: mergedOptions,\n          clearOptions: clearOptions\n        }))));\n      },\n\n      options: mergedOptions\n    };\n    return acc;\n  }, {});\n}\n//# sourceMappingURL=useDescriptors.js.map"]},"metadata":{},"sourceType":"module"}