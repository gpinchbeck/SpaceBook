{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useRef as $dgwbL$useRef, useEffect as $dgwbL$useEffect, useMemo as $dgwbL$useMemo } from \"react\";\nimport { getFocusableTreeWalker as $dgwbL$getFocusableTreeWalker, focusSafely as $dgwbL$focusSafely } from \"@react-aria/focus\";\nimport { focusWithoutScrolling as $dgwbL$focusWithoutScrolling, useEvent as $dgwbL$useEvent, scrollIntoView as $dgwbL$scrollIntoView, mergeProps as $dgwbL$mergeProps, isAppleDevice as $dgwbL$isAppleDevice, isMac as $dgwbL$isMac } from \"@react-aria/utils\";\nimport { useLocale as $dgwbL$useLocale, useCollator as $dgwbL$useCollator } from \"@react-aria/i18n\";\nimport { usePress as $dgwbL$usePress, useLongPress as $dgwbL$useLongPress } from \"@react-aria/interactions\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $52ac987c016884e9$exports = {};\n$parcel$export($52ac987c016884e9$exports, \"useSelectableCollection\", function () {\n  return $52ac987c016884e9$export$d6daf82dcd84e87c;\n});\n\nfunction $c636d3b6065ca9f6$export$d3e3bd3e26688c04(e) {\n  return $dgwbL$isAppleDevice() ? e.altKey : e.ctrlKey;\n}\n\nfunction $c636d3b6065ca9f6$export$16792effe837dba3(e) {\n  if ($dgwbL$isMac()) return e.metaKey;\n  return e.ctrlKey;\n}\n\nvar $a6f03d1cafa48b51$exports = {};\n$parcel$export($a6f03d1cafa48b51$exports, \"useTypeSelect\", function () {\n  return $a6f03d1cafa48b51$export$e32c88dfddc6e1d8;\n});\n\nfunction $a6f03d1cafa48b51$export$e32c88dfddc6e1d8(options) {\n  var keyboardDelegate = options.keyboardDelegate,\n      selectionManager = options.selectionManager,\n      onTypeSelect = options.onTypeSelect;\n  var state = $dgwbL$useRef({\n    search: '',\n    timeout: null\n  }).current;\n\n  var onKeyDown = function onKeyDown(e) {\n    var character = $a6f03d1cafa48b51$var$getStringForKey(e.key);\n    if (!character || e.ctrlKey || e.metaKey) return;\n\n    if (character === ' ' && state.search.trim().length > 0) {\n      e.preventDefault();\n      if (!('continuePropagation' in e)) e.stopPropagation();\n    }\n\n    state.search += character;\n    var key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);\n    if (key == null) key = keyboardDelegate.getKeyForSearch(state.search);\n\n    if (key != null) {\n      selectionManager.setFocusedKey(key);\n      if (onTypeSelect) onTypeSelect(key);\n    }\n\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function () {\n      state.search = '';\n    }, 500);\n  };\n\n  return {\n    typeSelectProps: {\n      onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null\n    }\n  };\n}\n\nfunction $a6f03d1cafa48b51$var$getStringForKey(key) {\n  if (key.length === 1 || !/^[A-Z]/i.test(key)) return key;\n  return '';\n}\n\nfunction $52ac987c016884e9$export$d6daf82dcd84e87c(options) {\n  var manager = options.selectionManager,\n      delegate = options.keyboardDelegate,\n      ref = options.ref,\n      _options$autoFocus = options.autoFocus,\n      autoFocus = _options$autoFocus === void 0 ? false : _options$autoFocus,\n      _options$shouldFocusW = options.shouldFocusWrap,\n      shouldFocusWrap = _options$shouldFocusW === void 0 ? false : _options$shouldFocusW,\n      _options$disallowEmpt = options.disallowEmptySelection,\n      disallowEmptySelection = _options$disallowEmpt === void 0 ? false : _options$disallowEmpt,\n      _options$disallowSele = options.disallowSelectAll,\n      disallowSelectAll = _options$disallowSele === void 0 ? false : _options$disallowSele,\n      _options$selectOnFocu = options.selectOnFocus,\n      selectOnFocus = _options$selectOnFocu === void 0 ? manager.selectionBehavior === 'replace' : _options$selectOnFocu,\n      _options$disallowType = options.disallowTypeAhead,\n      disallowTypeAhead = _options$disallowType === void 0 ? false : _options$disallowType,\n      shouldUseVirtualFocus = options.shouldUseVirtualFocus,\n      _options$allowsTabNav = options.allowsTabNavigation,\n      allowsTabNavigation = _options$allowsTabNav === void 0 ? false : _options$allowsTabNav,\n      isVirtualized = options.isVirtualized,\n      _options$scrollRef = options.scrollRef,\n      scrollRef = _options$scrollRef === void 0 ? ref : _options$scrollRef;\n\n  var _$dgwbL$useLocale = $dgwbL$useLocale(),\n      direction = _$dgwbL$useLocale.direction;\n\n  var onKeyDown = function onKeyDown(e) {\n    if (e.altKey && e.key === 'Tab') e.preventDefault();\n    if (!ref.current.contains(e.target)) return;\n\n    var navigateToKey = function navigateToKey(key, childFocus) {\n      if (key != null) {\n        manager.setFocusedKey(key, childFocus);\n        if (e.shiftKey && manager.selectionMode === 'multiple') manager.extendSelection(key);else if (selectOnFocus && !$c636d3b6065ca9f6$export$d3e3bd3e26688c04(e)) manager.replaceSelection(key);\n      }\n    };\n\n    switch (e.key) {\n      case 'ArrowDown':\n        if (delegate.getKeyBelow) {\n          var ref4, ref1;\n          e.preventDefault();\n          var nextKey = manager.focusedKey != null ? delegate.getKeyBelow(manager.focusedKey) : (ref4 = delegate.getFirstKey) === null || ref4 === void 0 ? void 0 : ref4.call(delegate);\n          if (nextKey == null && shouldFocusWrap) nextKey = (ref1 = delegate.getFirstKey) === null || ref1 === void 0 ? void 0 : ref1.call(delegate, manager.focusedKey);\n          navigateToKey(nextKey);\n        }\n\n        break;\n\n      case 'ArrowUp':\n        if (delegate.getKeyAbove) {\n          var ref2, ref3;\n          e.preventDefault();\n\n          var _nextKey = manager.focusedKey != null ? delegate.getKeyAbove(manager.focusedKey) : (ref2 = delegate.getLastKey) === null || ref2 === void 0 ? void 0 : ref2.call(delegate);\n\n          if (_nextKey == null && shouldFocusWrap) _nextKey = (ref3 = delegate.getLastKey) === null || ref3 === void 0 ? void 0 : ref3.call(delegate, manager.focusedKey);\n          navigateToKey(_nextKey);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (delegate.getKeyLeftOf) {\n          e.preventDefault();\n\n          var _nextKey2 = delegate.getKeyLeftOf(manager.focusedKey);\n\n          navigateToKey(_nextKey2, direction === 'rtl' ? 'first' : 'last');\n        }\n\n        break;\n\n      case 'ArrowRight':\n        if (delegate.getKeyRightOf) {\n          e.preventDefault();\n\n          var _nextKey3 = delegate.getKeyRightOf(manager.focusedKey);\n\n          navigateToKey(_nextKey3, direction === 'rtl' ? 'last' : 'first');\n        }\n\n        break;\n\n      case 'Home':\n        if (delegate.getFirstKey) {\n          e.preventDefault();\n          var firstKey = delegate.getFirstKey(manager.focusedKey, $c636d3b6065ca9f6$export$16792effe837dba3(e));\n          manager.setFocusedKey(firstKey);\n          if ($c636d3b6065ca9f6$export$16792effe837dba3(e) && e.shiftKey && manager.selectionMode === 'multiple') manager.extendSelection(firstKey);else if (selectOnFocus) manager.replaceSelection(firstKey);\n        }\n\n        break;\n\n      case 'End':\n        if (delegate.getLastKey) {\n          e.preventDefault();\n          var lastKey = delegate.getLastKey(manager.focusedKey, $c636d3b6065ca9f6$export$16792effe837dba3(e));\n          manager.setFocusedKey(lastKey);\n          if ($c636d3b6065ca9f6$export$16792effe837dba3(e) && e.shiftKey && manager.selectionMode === 'multiple') manager.extendSelection(lastKey);else if (selectOnFocus) manager.replaceSelection(lastKey);\n        }\n\n        break;\n\n      case 'PageDown':\n        if (delegate.getKeyPageBelow) {\n          e.preventDefault();\n\n          var _nextKey4 = delegate.getKeyPageBelow(manager.focusedKey);\n\n          navigateToKey(_nextKey4);\n        }\n\n        break;\n\n      case 'PageUp':\n        if (delegate.getKeyPageAbove) {\n          e.preventDefault();\n\n          var _nextKey5 = delegate.getKeyPageAbove(manager.focusedKey);\n\n          navigateToKey(_nextKey5);\n        }\n\n        break;\n\n      case 'a':\n        if ($c636d3b6065ca9f6$export$16792effe837dba3(e) && manager.selectionMode === 'multiple' && disallowSelectAll !== true) {\n          e.preventDefault();\n          manager.selectAll();\n        }\n\n        break;\n\n      case 'Escape':\n        e.preventDefault();\n        if (!disallowEmptySelection) manager.clearSelection();\n        break;\n\n      case 'Tab':\n        if (!allowsTabNavigation) {\n          if (e.shiftKey) ref.current.focus();else {\n            var walker = $dgwbL$getFocusableTreeWalker(ref.current, {\n              tabbable: true\n            });\n            var next;\n            var last;\n\n            do {\n              last = walker.lastChild();\n              if (last) next = last;\n            } while (last);\n\n            if (next && !next.contains(document.activeElement)) $dgwbL$focusWithoutScrolling(next);\n          }\n          break;\n        }\n\n    }\n  };\n\n  var scrollPos = $dgwbL$useRef({\n    top: 0,\n    left: 0\n  });\n  $dgwbL$useEvent(scrollRef, 'scroll', isVirtualized ? null : function () {\n    scrollPos.current = {\n      top: scrollRef.current.scrollTop,\n      left: scrollRef.current.scrollLeft\n    };\n  });\n\n  var onFocus = function onFocus(e) {\n    if (manager.isFocused) {\n      if (!e.currentTarget.contains(e.target)) manager.setFocused(false);\n      return;\n    }\n\n    if (!e.currentTarget.contains(e.target)) return;\n    manager.setFocused(true);\n\n    if (manager.focusedKey == null) {\n      var navigateToFirstKey = function navigateToFirstKey(key) {\n        if (key != null) {\n          manager.setFocusedKey(key);\n          if (selectOnFocus) manager.replaceSelection(key);\n        }\n      };\n\n      var relatedTarget = e.relatedTarget;\n\n      var _lastSelectedKey, _firstSelectedKey;\n\n      if (relatedTarget && e.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING) navigateToFirstKey((_lastSelectedKey = manager.lastSelectedKey) !== null && _lastSelectedKey !== void 0 ? _lastSelectedKey : delegate.getLastKey());else navigateToFirstKey((_firstSelectedKey = manager.firstSelectedKey) !== null && _firstSelectedKey !== void 0 ? _firstSelectedKey : delegate.getFirstKey());\n    } else if (!isVirtualized) {\n      scrollRef.current.scrollTop = scrollPos.current.top;\n      scrollRef.current.scrollLeft = scrollPos.current.left;\n      var element = scrollRef.current.querySelector(\"[data-key=\\\"\" + manager.focusedKey + \"\\\"]\");\n\n      if (element) {\n        $dgwbL$focusWithoutScrolling(element);\n        $dgwbL$scrollIntoView(scrollRef.current, element);\n      }\n    }\n  };\n\n  var onBlur = function onBlur(e) {\n    if (!e.currentTarget.contains(e.relatedTarget)) manager.setFocused(false);\n  };\n\n  var autoFocusRef = $dgwbL$useRef(autoFocus);\n  $dgwbL$useEffect(function () {\n    if (autoFocusRef.current) {\n      var focusedKey = null;\n      if (autoFocus === 'first') focusedKey = delegate.getFirstKey();\n      if (autoFocus === 'last') focusedKey = delegate.getLastKey();\n      var selectedKeys = manager.selectedKeys;\n      if (selectedKeys.size) focusedKey = selectedKeys.values().next().value;\n      manager.setFocused(true);\n      manager.setFocusedKey(focusedKey);\n      if (focusedKey == null && !shouldUseVirtualFocus) $dgwbL$focusSafely(ref.current);\n    }\n\n    autoFocusRef.current = false;\n  }, []);\n  $dgwbL$useEffect(function () {\n    if (!isVirtualized && manager.focusedKey && (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current)) {\n      var element = scrollRef.current.querySelector(\"[data-key=\\\"\" + manager.focusedKey + \"\\\"]\");\n      if (element) $dgwbL$scrollIntoView(scrollRef.current, element);\n    }\n  }, [isVirtualized, scrollRef, manager.focusedKey]);\n  var handlers = {\n    onKeyDown: onKeyDown,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onMouseDown: function onMouseDown(e) {\n      if (e.currentTarget.contains(e.target)) e.preventDefault();\n    }\n  };\n\n  var _$a6f03d1cafa48b51$ex = $a6f03d1cafa48b51$export$e32c88dfddc6e1d8({\n    keyboardDelegate: delegate,\n    selectionManager: manager\n  }),\n      typeSelectProps = _$a6f03d1cafa48b51$ex.typeSelectProps;\n\n  if (!disallowTypeAhead) handlers = $dgwbL$mergeProps(typeSelectProps, handlers);\n  var tabIndex;\n  if (!shouldUseVirtualFocus) tabIndex = manager.focusedKey == null ? 0 : -1;\n  return {\n    collectionProps: _objectSpread(_objectSpread({}, handlers), {}, {\n      tabIndex: tabIndex\n    })\n  };\n}\n\nvar $5ec5a493f6042709$exports = {};\n$parcel$export($5ec5a493f6042709$exports, \"useSelectableItem\", function () {\n  return $5ec5a493f6042709$export$ecf600387e221c37;\n});\n\nfunction $5ec5a493f6042709$export$ecf600387e221c37(options) {\n  var manager = options.selectionManager,\n      key = options.key,\n      ref = options.ref,\n      shouldSelectOnPressUp = options.shouldSelectOnPressUp,\n      isVirtualized = options.isVirtualized,\n      shouldUseVirtualFocus = options.shouldUseVirtualFocus,\n      focus = options.focus,\n      isDisabled = options.isDisabled,\n      onAction = options.onAction;\n\n  var onSelect = function onSelect(e) {\n    if (e.pointerType === 'keyboard' && $c636d3b6065ca9f6$export$d3e3bd3e26688c04(e)) manager.toggleSelection(key);else {\n      if (manager.selectionMode === 'none') return;\n\n      if (manager.selectionMode === 'single') {\n        if (manager.isSelected(key) && !manager.disallowEmptySelection) manager.toggleSelection(key);else manager.replaceSelection(key);\n      } else if (e && e.shiftKey) manager.extendSelection(key);else if (manager.selectionBehavior === 'toggle' || e && ($c636d3b6065ca9f6$export$16792effe837dba3(e) || e.pointerType === 'touch' || e.pointerType === 'virtual')) manager.toggleSelection(key);else manager.replaceSelection(key);\n    }\n  };\n\n  var isFocused = key === manager.focusedKey;\n  $dgwbL$useEffect(function () {\n    if (isFocused && manager.isFocused && !shouldUseVirtualFocus && document.activeElement !== ref.current) {\n      if (focus) focus();else $dgwbL$focusSafely(ref.current);\n    }\n  }, [ref, isFocused, manager.focusedKey, manager.childFocusStrategy, manager.isFocused, shouldUseVirtualFocus]);\n  var itemProps = {};\n  if (!shouldUseVirtualFocus) itemProps = {\n    tabIndex: isFocused ? 0 : -1,\n    onFocus: function onFocus(e) {\n      if (e.target === ref.current) manager.setFocusedKey(key);\n    }\n  };\n  var modality = $dgwbL$useRef(null);\n  var hasPrimaryAction = onAction && manager.selectionMode === 'none';\n  var hasSecondaryAction = onAction && manager.selectionMode !== 'none' && manager.selectionBehavior === 'replace';\n  var allowsSelection = !isDisabled && manager.canSelectItem(key);\n  var itemPressProps = {};\n\n  if (shouldSelectOnPressUp) {\n    itemPressProps.onPressStart = function (e) {\n      modality.current = e.pointerType;\n      if (e.pointerType === 'keyboard') onSelect(e);\n    };\n\n    itemPressProps.onPressUp = function (e) {\n      if (e.pointerType !== 'keyboard') onSelect(e);\n    };\n\n    itemPressProps.onPress = hasPrimaryAction ? function () {\n      return onAction();\n    } : null;\n  } else {\n    itemPressProps.onPressStart = function (e) {\n      modality.current = e.pointerType;\n      if (e.pointerType !== 'touch' && e.pointerType !== 'virtual') onSelect(e);\n    };\n\n    itemPressProps.onPress = function (e) {\n      if (e.pointerType === 'touch' || e.pointerType === 'virtual' || hasPrimaryAction) {\n        if (hasPrimaryAction || hasSecondaryAction) onAction();else onSelect(e);\n      }\n    };\n  }\n\n  if (!isVirtualized) itemProps['data-key'] = key;\n  itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;\n\n  var _$dgwbL$usePress = $dgwbL$usePress(itemPressProps),\n      pressProps = _$dgwbL$usePress.pressProps,\n      isPressed = _$dgwbL$usePress.isPressed;\n\n  var onDoubleClick = hasSecondaryAction ? function (e) {\n    if (modality.current === 'mouse') {\n      e.stopPropagation();\n      e.preventDefault();\n      onAction();\n    }\n  } : undefined;\n\n  var _$dgwbL$useLongPress = $dgwbL$useLongPress({\n    isDisabled: !hasSecondaryAction,\n    onLongPress: function onLongPress(e) {\n      if (e.pointerType === 'touch') {\n        onSelect(e);\n        manager.setSelectionBehavior('toggle');\n      }\n    }\n  }),\n      longPressProps = _$dgwbL$useLongPress.longPressProps;\n\n  var onKeyUp = hasSecondaryAction ? function (e) {\n    if (e.key === 'Enter') onAction();\n  } : undefined;\n  return {\n    itemProps: $dgwbL$mergeProps(itemProps, allowsSelection || hasPrimaryAction ? pressProps : {}, hasSecondaryAction ? longPressProps : {}, {\n      onKeyUp: onKeyUp,\n      onDoubleClick: onDoubleClick\n    }),\n    isPressed: isPressed\n  };\n}\n\nvar $38e0ab555fbd8768$exports = {};\n$parcel$export($38e0ab555fbd8768$exports, \"useSelectableList\", function () {\n  return $38e0ab555fbd8768$export$b95089534ab7c1fd;\n});\nvar $8dd8d9b0d53d6ca8$exports = {};\n$parcel$export($8dd8d9b0d53d6ca8$exports, \"ListKeyboardDelegate\", function () {\n  return $8dd8d9b0d53d6ca8$export$a05409b8bb224a5a;\n});\n\nvar $8dd8d9b0d53d6ca8$export$a05409b8bb224a5a = function () {\n  function $8dd8d9b0d53d6ca8$export$a05409b8bb224a5a(collection, disabledKeys, ref, collator) {\n    _classCallCheck(this, $8dd8d9b0d53d6ca8$export$a05409b8bb224a5a);\n\n    this.collection = collection;\n    this.disabledKeys = disabledKeys;\n    this.ref = ref;\n    this.collator = collator;\n  }\n\n  _createClass($8dd8d9b0d53d6ca8$export$a05409b8bb224a5a, [{\n    key: \"getKeyBelow\",\n    value: function getKeyBelow(key) {\n      key = this.collection.getKeyAfter(key);\n\n      while (key != null) {\n        var item = this.collection.getItem(key);\n        if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n        key = this.collection.getKeyAfter(key);\n      }\n    }\n  }, {\n    key: \"getKeyAbove\",\n    value: function getKeyAbove(key) {\n      key = this.collection.getKeyBefore(key);\n\n      while (key != null) {\n        var item = this.collection.getItem(key);\n        if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n        key = this.collection.getKeyBefore(key);\n      }\n    }\n  }, {\n    key: \"getFirstKey\",\n    value: function getFirstKey() {\n      var key = this.collection.getFirstKey();\n\n      while (key != null) {\n        var item = this.collection.getItem(key);\n        if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n        key = this.collection.getKeyAfter(key);\n      }\n    }\n  }, {\n    key: \"getLastKey\",\n    value: function getLastKey() {\n      var key = this.collection.getLastKey();\n\n      while (key != null) {\n        var item = this.collection.getItem(key);\n        if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n        key = this.collection.getKeyBefore(key);\n      }\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(key) {\n      return this.ref.current.querySelector(\"[data-key=\\\"\" + key + \"\\\"]\");\n    }\n  }, {\n    key: \"getKeyPageAbove\",\n    value: function getKeyPageAbove(key) {\n      var menu = this.ref.current;\n      var item = this.getItem(key);\n      if (!item) return null;\n      var pageY = Math.max(0, item.offsetTop + item.offsetHeight - menu.offsetHeight);\n\n      while (item && item.offsetTop > pageY) {\n        key = this.getKeyAbove(key);\n        item = this.getItem(key);\n      }\n\n      return key;\n    }\n  }, {\n    key: \"getKeyPageBelow\",\n    value: function getKeyPageBelow(key) {\n      var menu = this.ref.current;\n      var item = this.getItem(key);\n      if (!item) return null;\n      var pageY = Math.min(menu.scrollHeight, item.offsetTop - item.offsetHeight + menu.offsetHeight);\n\n      while (item && item.offsetTop < pageY) {\n        key = this.getKeyBelow(key);\n        item = this.getItem(key);\n      }\n\n      return key;\n    }\n  }, {\n    key: \"getKeyForSearch\",\n    value: function getKeyForSearch(search, fromKey) {\n      if (!this.collator) return null;\n      var collection = this.collection;\n      var key = fromKey || this.getFirstKey();\n\n      while (key != null) {\n        var item = collection.getItem(key);\n        var substring = item.textValue.slice(0, search.length);\n        if (item.textValue && this.collator.compare(substring, search) === 0) return key;\n        key = this.getKeyBelow(key);\n      }\n\n      return null;\n    }\n  }]);\n\n  return $8dd8d9b0d53d6ca8$export$a05409b8bb224a5a;\n}();\n\nfunction $38e0ab555fbd8768$export$b95089534ab7c1fd(props) {\n  var selectionManager = props.selectionManager,\n      collection = props.collection,\n      disabledKeys = props.disabledKeys,\n      ref = props.ref,\n      keyboardDelegate = props.keyboardDelegate,\n      autoFocus = props.autoFocus,\n      shouldFocusWrap = props.shouldFocusWrap,\n      isVirtualized = props.isVirtualized,\n      disallowEmptySelection = props.disallowEmptySelection,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? false : _props$selectOnFocus,\n      disallowTypeAhead = props.disallowTypeAhead,\n      shouldUseVirtualFocus = props.shouldUseVirtualFocus,\n      allowsTabNavigation = props.allowsTabNavigation;\n  var collator = $dgwbL$useCollator({\n    usage: 'search',\n    sensitivity: 'base'\n  });\n  var delegate = $dgwbL$useMemo(function () {\n    return keyboardDelegate || new $8dd8d9b0d53d6ca8$export$a05409b8bb224a5a(collection, disabledKeys, ref, collator);\n  }, [keyboardDelegate, collection, disabledKeys, ref, collator]);\n\n  var _$52ac987c016884e9$ex = $52ac987c016884e9$export$d6daf82dcd84e87c({\n    ref: ref,\n    selectionManager: selectionManager,\n    keyboardDelegate: delegate,\n    autoFocus: autoFocus,\n    shouldFocusWrap: shouldFocusWrap,\n    disallowEmptySelection: disallowEmptySelection,\n    selectOnFocus: selectOnFocus,\n    disallowTypeAhead: disallowTypeAhead,\n    shouldUseVirtualFocus: shouldUseVirtualFocus,\n    allowsTabNavigation: allowsTabNavigation,\n    isVirtualized: isVirtualized,\n    scrollRef: ref\n  }),\n      collectionProps = _$52ac987c016884e9$ex.collectionProps;\n\n  return {\n    listProps: collectionProps\n  };\n}\n\nexport { $52ac987c016884e9$export$d6daf82dcd84e87c as useSelectableCollection, $5ec5a493f6042709$export$ecf600387e221c37 as useSelectableItem, $38e0ab555fbd8768$export$b95089534ab7c1fd as useSelectableList, $8dd8d9b0d53d6ca8$export$a05409b8bb224a5a as ListKeyboardDelegate, $a6f03d1cafa48b51$export$e32c88dfddc6e1d8 as useTypeSelect };","map":{"version":3,"mappings":"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","names":["useRef","$dgwbL$useRef","useEffect","$dgwbL$useEffect","useMemo","$dgwbL$useMemo","getFocusableTreeWalker","$dgwbL$getFocusableTreeWalker","focusSafely","$dgwbL$focusSafely","focusWithoutScrolling","$dgwbL$focusWithoutScrolling","useEvent","$dgwbL$useEvent","scrollIntoView","$dgwbL$scrollIntoView","mergeProps","$dgwbL$mergeProps","isAppleDevice","$dgwbL$isAppleDevice","isMac","$dgwbL$isMac","useLocale","$dgwbL$useLocale","useCollator","$dgwbL$useCollator","usePress","$dgwbL$usePress","useLongPress","$dgwbL$useLongPress","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$52ac987c016884e9$exports","$52ac987c016884e9$export$d6daf82dcd84e87c","$c636d3b6065ca9f6$export$d3e3bd3e26688c04","altKey","ctrlKey","$c636d3b6065ca9f6$export$16792effe837dba3","metaKey","$a6f03d1cafa48b51$exports","$a6f03d1cafa48b51$export$e32c88dfddc6e1d8","options","keyboardDelegate","selectionManager","onTypeSelect","state","search","timeout","current","onKeyDown","character","$a6f03d1cafa48b51$var$getStringForKey","key","trim","length","preventDefault","stopPropagation","getKeyForSearch","focusedKey","setFocusedKey","clearTimeout","setTimeout","typeSelectProps","onKeyDownCapture","test","manager","delegate","ref","autoFocus","shouldFocusWrap","disallowEmptySelection","disallowSelectAll","selectOnFocus","selectionBehavior","disallowTypeAhead","shouldUseVirtualFocus","allowsTabNavigation","isVirtualized","scrollRef","direction","contains","target","navigateToKey","childFocus","shiftKey","selectionMode","extendSelection","replaceSelection","getKeyBelow","ref4","ref1","nextKey","getFirstKey","call","getKeyAbove","ref2","ref3","getLastKey","getKeyLeftOf","getKeyRightOf","firstKey","lastKey","getKeyPageBelow","getKeyPageAbove","selectAll","clearSelection","focus","walker","tabbable","next","last","lastChild","document","activeElement","scrollPos","top","left","scrollTop","scrollLeft","onFocus","isFocused","currentTarget","setFocused","navigateToFirstKey","relatedTarget","_lastSelectedKey","_firstSelectedKey","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","lastSelectedKey","firstSelectedKey","element","querySelector","onBlur","autoFocusRef","selectedKeys","size","values","value","handlers","onMouseDown","tabIndex","collectionProps","$5ec5a493f6042709$exports","$5ec5a493f6042709$export$ecf600387e221c37","shouldSelectOnPressUp","isDisabled","onAction","onSelect","pointerType","toggleSelection","isSelected","childFocusStrategy","itemProps","modality","hasPrimaryAction","hasSecondaryAction","allowsSelection","canSelectItem","itemPressProps","onPressStart","onPressUp","onPress","preventFocusOnPress","pressProps","isPressed","onDoubleClick","undefined","onLongPress","setSelectionBehavior","longPressProps","onKeyUp","$38e0ab555fbd8768$exports","$38e0ab555fbd8768$export$b95089534ab7c1fd","$8dd8d9b0d53d6ca8$exports","$8dd8d9b0d53d6ca8$export$a05409b8bb224a5a","collection","disabledKeys","collator","getKeyAfter","item","getItem","type","has","getKeyBefore","menu","pageY","Math","max","offsetTop","offsetHeight","min","scrollHeight","fromKey","substring","textValue","slice","compare","props","usage","sensitivity","listProps","useSelectableCollection","useSelectableItem","useSelectableList","ListKeyboardDelegate","useTypeSelect"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-aria/selection/dist/module.js"],"sourcesContent":["import {useRef as $dgwbL$useRef, useEffect as $dgwbL$useEffect, useMemo as $dgwbL$useMemo} from \"react\";\nimport {getFocusableTreeWalker as $dgwbL$getFocusableTreeWalker, focusSafely as $dgwbL$focusSafely} from \"@react-aria/focus\";\nimport {focusWithoutScrolling as $dgwbL$focusWithoutScrolling, useEvent as $dgwbL$useEvent, scrollIntoView as $dgwbL$scrollIntoView, mergeProps as $dgwbL$mergeProps, isAppleDevice as $dgwbL$isAppleDevice, isMac as $dgwbL$isMac} from \"@react-aria/utils\";\nimport {useLocale as $dgwbL$useLocale, useCollator as $dgwbL$useCollator} from \"@react-aria/i18n\";\nimport {usePress as $dgwbL$usePress, useLongPress as $dgwbL$useLongPress} from \"@react-aria/interactions\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $52ac987c016884e9$exports = {};\n\n$parcel$export($52ac987c016884e9$exports, \"useSelectableCollection\", () => $52ac987c016884e9$export$d6daf82dcd84e87c);\n\n\n\n\n\nfunction $c636d3b6065ca9f6$export$d3e3bd3e26688c04(e) {\n    // Ctrl + Arrow Up/Arrow Down has a system wide meaning on macOS, so use Alt instead.\n    // On Windows and Ubuntu, Alt + Space has a system wide meaning.\n    return $dgwbL$isAppleDevice() ? e.altKey : e.ctrlKey;\n}\nfunction $c636d3b6065ca9f6$export$16792effe837dba3(e) {\n    if ($dgwbL$isMac()) return e.metaKey;\n    return e.ctrlKey;\n}\n\n\n\nvar $a6f03d1cafa48b51$exports = {};\n\n$parcel$export($a6f03d1cafa48b51$exports, \"useTypeSelect\", () => $a6f03d1cafa48b51$export$e32c88dfddc6e1d8);\n\nfunction $a6f03d1cafa48b51$export$e32c88dfddc6e1d8(options) {\n    let { keyboardDelegate: keyboardDelegate , selectionManager: selectionManager , onTypeSelect: onTypeSelect  } = options;\n    let state = $dgwbL$useRef({\n        search: '',\n        timeout: null\n    }).current;\n    let onKeyDown = (e)=>{\n        let character = $a6f03d1cafa48b51$var$getStringForKey(e.key);\n        if (!character || e.ctrlKey || e.metaKey) return;\n        // Do not propagate the Spacebar event if it's meant to be part of the search.\n        // When we time out, the search term becomes empty, hence the check on length.\n        // Trimming is to account for the case of pressing the Spacebar more than once,\n        // which should cycle through the selection/deselection of the focused item.\n        if (character === ' ' && state.search.trim().length > 0) {\n            e.preventDefault();\n            if (!('continuePropagation' in e)) e.stopPropagation();\n        }\n        state.search += character;\n        // Use the delegate to find a key to focus.\n        // Prioritize items after the currently focused item, falling back to searching the whole list.\n        let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);\n        // If no key found, search from the top.\n        if (key == null) key = keyboardDelegate.getKeyForSearch(state.search);\n        if (key != null) {\n            selectionManager.setFocusedKey(key);\n            if (onTypeSelect) onTypeSelect(key);\n        }\n        clearTimeout(state.timeout);\n        state.timeout = setTimeout(()=>{\n            state.search = '';\n        }, 500);\n    };\n    return {\n        typeSelectProps: {\n            // Using a capturing listener to catch the keydown event before\n            // other hooks in order to handle the Spacebar event.\n            onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null\n        }\n    };\n}\nfunction $a6f03d1cafa48b51$var$getStringForKey(key) {\n    // If the key is of length 1, it is an ASCII value.\n    // Otherwise, if there are no ASCII characters in the key name,\n    // it is a Unicode character.\n    // See https://www.w3.org/TR/uievents-key/\n    if (key.length === 1 || !/^[A-Z]/i.test(key)) return key;\n    return '';\n}\n\n\nfunction $52ac987c016884e9$export$d6daf82dcd84e87c(options) {\n    let { selectionManager: manager , keyboardDelegate: delegate , ref: ref , autoFocus: autoFocus = false , shouldFocusWrap: shouldFocusWrap = false , disallowEmptySelection: disallowEmptySelection = false , disallowSelectAll: disallowSelectAll = false , selectOnFocus: selectOnFocus = manager.selectionBehavior === 'replace' , disallowTypeAhead: disallowTypeAhead = false , shouldUseVirtualFocus: shouldUseVirtualFocus , allowsTabNavigation: allowsTabNavigation = false , isVirtualized: isVirtualized , scrollRef: // If no scrollRef is provided, assume the collection ref is the scrollable region\n    scrollRef = ref  } = options;\n    let { direction: direction  } = $dgwbL$useLocale();\n    let onKeyDown = (e)=>{\n        // Prevent option + tab from doing anything since it doesn't move focus to the cells, only buttons/checkboxes\n        if (e.altKey && e.key === 'Tab') e.preventDefault();\n        // Keyboard events bubble through portals. Don't handle keyboard events\n        // for elements outside the collection (e.g. menus).\n        if (!ref.current.contains(e.target)) return;\n        const navigateToKey = (key, childFocus)=>{\n            if (key != null) {\n                manager.setFocusedKey(key, childFocus);\n                if (e.shiftKey && manager.selectionMode === 'multiple') manager.extendSelection(key);\n                else if (selectOnFocus && !$c636d3b6065ca9f6$export$d3e3bd3e26688c04(e)) manager.replaceSelection(key);\n            }\n        };\n        switch(e.key){\n            case 'ArrowDown':\n                if (delegate.getKeyBelow) {\n                    var ref4, ref1;\n                    e.preventDefault();\n                    let nextKey = manager.focusedKey != null ? delegate.getKeyBelow(manager.focusedKey) : (ref4 = delegate.getFirstKey) === null || ref4 === void 0 ? void 0 : ref4.call(delegate);\n                    if (nextKey == null && shouldFocusWrap) nextKey = (ref1 = delegate.getFirstKey) === null || ref1 === void 0 ? void 0 : ref1.call(delegate, manager.focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case 'ArrowUp':\n                if (delegate.getKeyAbove) {\n                    var ref2, ref3;\n                    e.preventDefault();\n                    let nextKey = manager.focusedKey != null ? delegate.getKeyAbove(manager.focusedKey) : (ref2 = delegate.getLastKey) === null || ref2 === void 0 ? void 0 : ref2.call(delegate);\n                    if (nextKey == null && shouldFocusWrap) nextKey = (ref3 = delegate.getLastKey) === null || ref3 === void 0 ? void 0 : ref3.call(delegate, manager.focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case 'ArrowLeft':\n                if (delegate.getKeyLeftOf) {\n                    e.preventDefault();\n                    let nextKey = delegate.getKeyLeftOf(manager.focusedKey);\n                    navigateToKey(nextKey, direction === 'rtl' ? 'first' : 'last');\n                }\n                break;\n            case 'ArrowRight':\n                if (delegate.getKeyRightOf) {\n                    e.preventDefault();\n                    let nextKey = delegate.getKeyRightOf(manager.focusedKey);\n                    navigateToKey(nextKey, direction === 'rtl' ? 'last' : 'first');\n                }\n                break;\n            case 'Home':\n                if (delegate.getFirstKey) {\n                    e.preventDefault();\n                    let firstKey = delegate.getFirstKey(manager.focusedKey, $c636d3b6065ca9f6$export$16792effe837dba3(e));\n                    manager.setFocusedKey(firstKey);\n                    if ($c636d3b6065ca9f6$export$16792effe837dba3(e) && e.shiftKey && manager.selectionMode === 'multiple') manager.extendSelection(firstKey);\n                    else if (selectOnFocus) manager.replaceSelection(firstKey);\n                }\n                break;\n            case 'End':\n                if (delegate.getLastKey) {\n                    e.preventDefault();\n                    let lastKey = delegate.getLastKey(manager.focusedKey, $c636d3b6065ca9f6$export$16792effe837dba3(e));\n                    manager.setFocusedKey(lastKey);\n                    if ($c636d3b6065ca9f6$export$16792effe837dba3(e) && e.shiftKey && manager.selectionMode === 'multiple') manager.extendSelection(lastKey);\n                    else if (selectOnFocus) manager.replaceSelection(lastKey);\n                }\n                break;\n            case 'PageDown':\n                if (delegate.getKeyPageBelow) {\n                    e.preventDefault();\n                    let nextKey = delegate.getKeyPageBelow(manager.focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case 'PageUp':\n                if (delegate.getKeyPageAbove) {\n                    e.preventDefault();\n                    let nextKey = delegate.getKeyPageAbove(manager.focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case 'a':\n                if ($c636d3b6065ca9f6$export$16792effe837dba3(e) && manager.selectionMode === 'multiple' && disallowSelectAll !== true) {\n                    e.preventDefault();\n                    manager.selectAll();\n                }\n                break;\n            case 'Escape':\n                e.preventDefault();\n                if (!disallowEmptySelection) manager.clearSelection();\n                break;\n            case 'Tab':\n                if (!allowsTabNavigation) {\n                    // There may be elements that are \"tabbable\" inside a collection (e.g. in a grid cell).\n                    // However, collections should be treated as a single tab stop, with arrow key navigation internally.\n                    // We don't control the rendering of these, so we can't override the tabIndex to prevent tabbing.\n                    // Instead, we handle the Tab key, and move focus manually to the first/last tabbable element\n                    // in the collection, so that the browser default behavior will apply starting from that element\n                    // rather than the currently focused one.\n                    if (e.shiftKey) ref.current.focus();\n                    else {\n                        let walker = $dgwbL$getFocusableTreeWalker(ref.current, {\n                            tabbable: true\n                        });\n                        let next;\n                        let last;\n                        do {\n                            last = walker.lastChild();\n                            if (last) next = last;\n                        }while (last)\n                        if (next && !next.contains(document.activeElement)) $dgwbL$focusWithoutScrolling(next);\n                    }\n                    break;\n                }\n        }\n    };\n    // Store the scroll position so we can restore it later.\n    let scrollPos = $dgwbL$useRef({\n        top: 0,\n        left: 0\n    });\n    $dgwbL$useEvent(scrollRef, 'scroll', isVirtualized ? null : ()=>{\n        scrollPos.current = {\n            top: scrollRef.current.scrollTop,\n            left: scrollRef.current.scrollLeft\n        };\n    });\n    let onFocus = (e)=>{\n        if (manager.isFocused) {\n            // If a focus event bubbled through a portal, reset focus state.\n            if (!e.currentTarget.contains(e.target)) manager.setFocused(false);\n            return;\n        }\n        // Focus events can bubble through portals. Ignore these events.\n        if (!e.currentTarget.contains(e.target)) return;\n        manager.setFocused(true);\n        if (manager.focusedKey == null) {\n            let navigateToFirstKey = (key)=>{\n                if (key != null) {\n                    manager.setFocusedKey(key);\n                    if (selectOnFocus) manager.replaceSelection(key);\n                }\n            };\n            // If the user hasn't yet interacted with the collection, there will be no focusedKey set.\n            // Attempt to detect whether the user is tabbing forward or backward into the collection\n            // and either focus the first or last item accordingly.\n            let relatedTarget = e.relatedTarget;\n            var _lastSelectedKey, _firstSelectedKey;\n            if (relatedTarget && e.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING) navigateToFirstKey((_lastSelectedKey = manager.lastSelectedKey) !== null && _lastSelectedKey !== void 0 ? _lastSelectedKey : delegate.getLastKey());\n            else navigateToFirstKey((_firstSelectedKey = manager.firstSelectedKey) !== null && _firstSelectedKey !== void 0 ? _firstSelectedKey : delegate.getFirstKey());\n        } else if (!isVirtualized) {\n            // Restore the scroll position to what it was before.\n            scrollRef.current.scrollTop = scrollPos.current.top;\n            scrollRef.current.scrollLeft = scrollPos.current.left;\n            // Refocus and scroll the focused item into view if it exists within the scrollable region.\n            let element = scrollRef.current.querySelector(`[data-key=\"${manager.focusedKey}\"]`);\n            if (element) {\n                // This prevents a flash of focus on the first/last element in the collection\n                $dgwbL$focusWithoutScrolling(element);\n                $dgwbL$scrollIntoView(scrollRef.current, element);\n            }\n        }\n    };\n    let onBlur = (e)=>{\n        // Don't set blurred and then focused again if moving focus within the collection.\n        if (!e.currentTarget.contains(e.relatedTarget)) manager.setFocused(false);\n    };\n    const autoFocusRef = $dgwbL$useRef(autoFocus);\n    $dgwbL$useEffect(()=>{\n        if (autoFocusRef.current) {\n            let focusedKey = null;\n            // Check focus strategy to determine which item to focus\n            if (autoFocus === 'first') focusedKey = delegate.getFirstKey();\n            if (autoFocus === 'last') focusedKey = delegate.getLastKey();\n            // If there are any selected keys, make the first one the new focus target\n            let selectedKeys = manager.selectedKeys;\n            if (selectedKeys.size) focusedKey = selectedKeys.values().next().value;\n            manager.setFocused(true);\n            manager.setFocusedKey(focusedKey);\n            // If no default focus key is selected, focus the collection itself.\n            if (focusedKey == null && !shouldUseVirtualFocus) $dgwbL$focusSafely(ref.current);\n        }\n        autoFocusRef.current = false;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    // If not virtualized, scroll the focused element into view when the focusedKey changes.\n    // When virtualized, Virtualizer handles this internally.\n    $dgwbL$useEffect(()=>{\n        if (!isVirtualized && manager.focusedKey && (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current)) {\n            let element = scrollRef.current.querySelector(`[data-key=\"${manager.focusedKey}\"]`);\n            if (element) $dgwbL$scrollIntoView(scrollRef.current, element);\n        }\n    }, [\n        isVirtualized,\n        scrollRef,\n        manager.focusedKey\n    ]);\n    let handlers = {\n        onKeyDown: onKeyDown,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onMouseDown (e) {\n            // Ignore events that bubbled through portals.\n            if (e.currentTarget.contains(e.target)) // Prevent focus going to the collection when clicking on the scrollbar.\n            e.preventDefault();\n        }\n    };\n    let { typeSelectProps: typeSelectProps  } = $a6f03d1cafa48b51$export$e32c88dfddc6e1d8({\n        keyboardDelegate: delegate,\n        selectionManager: manager\n    });\n    if (!disallowTypeAhead) handlers = $dgwbL$mergeProps(typeSelectProps, handlers);\n    // If nothing is focused within the collection, make the collection itself tabbable.\n    // This will be marshalled to either the first or last item depending on where focus came from.\n    // If using virtual focus, don't set a tabIndex at all so that VoiceOver on iOS 14 doesn't try\n    // to move real DOM focus to the element anyway.\n    let tabIndex;\n    if (!shouldUseVirtualFocus) tabIndex = manager.focusedKey == null ? 0 : -1;\n    return {\n        collectionProps: {\n            ...handlers,\n            tabIndex: tabIndex\n        }\n    };\n}\n\n\nvar $5ec5a493f6042709$exports = {};\n\n$parcel$export($5ec5a493f6042709$exports, \"useSelectableItem\", () => $5ec5a493f6042709$export$ecf600387e221c37);\n\n\n\n\n\nfunction $5ec5a493f6042709$export$ecf600387e221c37(options) {\n    let { selectionManager: manager , key: key , ref: ref , shouldSelectOnPressUp: shouldSelectOnPressUp , isVirtualized: isVirtualized , shouldUseVirtualFocus: shouldUseVirtualFocus , focus: focus , isDisabled: isDisabled , onAction: onAction  } = options;\n    let onSelect = (e)=>{\n        if (e.pointerType === 'keyboard' && $c636d3b6065ca9f6$export$d3e3bd3e26688c04(e)) manager.toggleSelection(key);\n        else {\n            if (manager.selectionMode === 'none') return;\n            if (manager.selectionMode === 'single') {\n                if (manager.isSelected(key) && !manager.disallowEmptySelection) manager.toggleSelection(key);\n                else manager.replaceSelection(key);\n            } else if (e && e.shiftKey) manager.extendSelection(key);\n            else if (manager.selectionBehavior === 'toggle' || e && ($c636d3b6065ca9f6$export$16792effe837dba3(e) || e.pointerType === 'touch' || e.pointerType === 'virtual')) // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n            manager.toggleSelection(key);\n            else manager.replaceSelection(key);\n        }\n    };\n    // Focus the associated DOM node when this item becomes the focusedKey\n    let isFocused = key === manager.focusedKey;\n    $dgwbL$useEffect(()=>{\n        if (isFocused && manager.isFocused && !shouldUseVirtualFocus && document.activeElement !== ref.current) {\n            if (focus) focus();\n            else $dgwbL$focusSafely(ref.current);\n        }\n    }, [\n        ref,\n        isFocused,\n        manager.focusedKey,\n        manager.childFocusStrategy,\n        manager.isFocused,\n        shouldUseVirtualFocus\n    ]);\n    // Set tabIndex to 0 if the element is focused, or -1 otherwise so that only the last focused\n    // item is tabbable.  If using virtual focus, don't set a tabIndex at all so that VoiceOver\n    // on iOS 14 doesn't try to move real DOM focus to the item anyway.\n    let itemProps = {\n    };\n    if (!shouldUseVirtualFocus) itemProps = {\n        tabIndex: isFocused ? 0 : -1,\n        onFocus (e) {\n            if (e.target === ref.current) manager.setFocusedKey(key);\n        }\n    };\n    let modality = $dgwbL$useRef(null);\n    let hasPrimaryAction = onAction && manager.selectionMode === 'none';\n    let hasSecondaryAction = onAction && manager.selectionMode !== 'none' && manager.selectionBehavior === 'replace';\n    let allowsSelection = !isDisabled && manager.canSelectItem(key);\n    // By default, selection occurs on pointer down. This can be strange if selecting an\n    // item causes the UI to disappear immediately (e.g. menus).\n    // If shouldSelectOnPressUp is true, we use onPressUp instead of onPressStart.\n    // onPress requires a pointer down event on the same element as pointer up. For menus,\n    // we want to be able to have the pointer down on the trigger that opens the menu and\n    // the pointer up on the menu item rather than requiring a separate press.\n    // For keyboard events, selection still occurs on key down.\n    let itemPressProps = {\n    };\n    if (shouldSelectOnPressUp) {\n        itemPressProps.onPressStart = (e)=>{\n            modality.current = e.pointerType;\n            if (e.pointerType === 'keyboard') onSelect(e);\n        };\n        itemPressProps.onPressUp = (e)=>{\n            if (e.pointerType !== 'keyboard') onSelect(e);\n        };\n        itemPressProps.onPress = hasPrimaryAction ? ()=>onAction()\n         : null;\n    } else {\n        // On touch, it feels strange to select on touch down, so we special case this.\n        itemPressProps.onPressStart = (e)=>{\n            modality.current = e.pointerType;\n            if (e.pointerType !== 'touch' && e.pointerType !== 'virtual') onSelect(e);\n        };\n        itemPressProps.onPress = (e)=>{\n            if (e.pointerType === 'touch' || e.pointerType === 'virtual' || hasPrimaryAction) {\n                // Single tap on touch with selectionBehavior = 'replace' performs an action, i.e. navigation.\n                // Also perform action on press up when selectionMode = 'none'.\n                if (hasPrimaryAction || hasSecondaryAction) onAction();\n                else onSelect(e);\n            }\n        };\n    }\n    if (!isVirtualized) itemProps['data-key'] = key;\n    itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;\n    let { pressProps: pressProps , isPressed: isPressed  } = $dgwbL$usePress(itemPressProps);\n    // Double clicking with a mouse with selectionBehavior = 'replace' performs an action.\n    let onDoubleClick = hasSecondaryAction ? (e)=>{\n        if (modality.current === 'mouse') {\n            e.stopPropagation();\n            e.preventDefault();\n            onAction();\n        }\n    } : undefined;\n    // Long pressing an item with touch when selectionBehavior = 'replace' switches the selection behavior\n    // to 'toggle'. This changes the single tap behavior from performing an action (i.e. navigating) to\n    // selecting, and may toggle the appearance of a UI affordance like checkboxes on each item.\n    // TODO: what about when drag and drop is also enabled??\n    let { longPressProps: longPressProps  } = $dgwbL$useLongPress({\n        isDisabled: !hasSecondaryAction,\n        onLongPress (e) {\n            if (e.pointerType === 'touch') {\n                onSelect(e);\n                manager.setSelectionBehavior('toggle');\n            }\n        }\n    });\n    // Pressing the Enter key with selectionBehavior = 'replace' performs an action (i.e. navigation).\n    let onKeyUp = hasSecondaryAction ? (e)=>{\n        if (e.key === 'Enter') onAction();\n    } : undefined;\n    return {\n        itemProps: $dgwbL$mergeProps(itemProps, allowsSelection || hasPrimaryAction ? pressProps : {\n        }, hasSecondaryAction ? longPressProps : {\n        }, {\n            onKeyUp: onKeyUp,\n            onDoubleClick: onDoubleClick\n        }),\n        isPressed: isPressed\n    };\n}\n\n\nvar $38e0ab555fbd8768$exports = {};\n\n$parcel$export($38e0ab555fbd8768$exports, \"useSelectableList\", () => $38e0ab555fbd8768$export$b95089534ab7c1fd);\n\nvar $8dd8d9b0d53d6ca8$exports = {};\n\n$parcel$export($8dd8d9b0d53d6ca8$exports, \"ListKeyboardDelegate\", () => $8dd8d9b0d53d6ca8$export$a05409b8bb224a5a);\nclass $8dd8d9b0d53d6ca8$export$a05409b8bb224a5a {\n    getKeyBelow(key) {\n        key = this.collection.getKeyAfter(key);\n        while(key != null){\n            let item = this.collection.getItem(key);\n            if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n            key = this.collection.getKeyAfter(key);\n        }\n    }\n    getKeyAbove(key) {\n        key = this.collection.getKeyBefore(key);\n        while(key != null){\n            let item = this.collection.getItem(key);\n            if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n            key = this.collection.getKeyBefore(key);\n        }\n    }\n    getFirstKey() {\n        let key = this.collection.getFirstKey();\n        while(key != null){\n            let item = this.collection.getItem(key);\n            if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n            key = this.collection.getKeyAfter(key);\n        }\n    }\n    getLastKey() {\n        let key = this.collection.getLastKey();\n        while(key != null){\n            let item = this.collection.getItem(key);\n            if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n            key = this.collection.getKeyBefore(key);\n        }\n    }\n    getItem(key) {\n        return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n    }\n    getKeyPageAbove(key) {\n        let menu = this.ref.current;\n        let item = this.getItem(key);\n        if (!item) return null;\n        let pageY = Math.max(0, item.offsetTop + item.offsetHeight - menu.offsetHeight);\n        while(item && item.offsetTop > pageY){\n            key = this.getKeyAbove(key);\n            item = this.getItem(key);\n        }\n        return key;\n    }\n    getKeyPageBelow(key) {\n        let menu = this.ref.current;\n        let item = this.getItem(key);\n        if (!item) return null;\n        let pageY = Math.min(menu.scrollHeight, item.offsetTop - item.offsetHeight + menu.offsetHeight);\n        while(item && item.offsetTop < pageY){\n            key = this.getKeyBelow(key);\n            item = this.getItem(key);\n        }\n        return key;\n    }\n    getKeyForSearch(search, fromKey) {\n        if (!this.collator) return null;\n        let collection = this.collection;\n        let key = fromKey || this.getFirstKey();\n        while(key != null){\n            let item = collection.getItem(key);\n            let substring = item.textValue.slice(0, search.length);\n            if (item.textValue && this.collator.compare(substring, search) === 0) return key;\n            key = this.getKeyBelow(key);\n        }\n        return null;\n    }\n    constructor(collection, disabledKeys, ref, collator){\n        this.collection = collection;\n        this.disabledKeys = disabledKeys;\n        this.ref = ref;\n        this.collator = collator;\n    }\n}\n\n\n\n\nfunction $38e0ab555fbd8768$export$b95089534ab7c1fd(props) {\n    let { selectionManager: selectionManager , collection: collection , disabledKeys: disabledKeys , ref: ref , keyboardDelegate: keyboardDelegate , autoFocus: autoFocus , shouldFocusWrap: shouldFocusWrap , isVirtualized: isVirtualized , disallowEmptySelection: disallowEmptySelection , selectOnFocus: selectOnFocus = false , disallowTypeAhead: disallowTypeAhead , shouldUseVirtualFocus: shouldUseVirtualFocus , allowsTabNavigation: allowsTabNavigation  } = props;\n    // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n    // When virtualized, the layout object will be passed in as a prop and override this.\n    let collator = $dgwbL$useCollator({\n        usage: 'search',\n        sensitivity: 'base'\n    });\n    let delegate = $dgwbL$useMemo(()=>keyboardDelegate || new $8dd8d9b0d53d6ca8$export$a05409b8bb224a5a(collection, disabledKeys, ref, collator)\n    , [\n        keyboardDelegate,\n        collection,\n        disabledKeys,\n        ref,\n        collator\n    ]);\n    let { collectionProps: collectionProps  } = $52ac987c016884e9$export$d6daf82dcd84e87c({\n        ref: ref,\n        selectionManager: selectionManager,\n        keyboardDelegate: delegate,\n        autoFocus: autoFocus,\n        shouldFocusWrap: shouldFocusWrap,\n        disallowEmptySelection: disallowEmptySelection,\n        selectOnFocus: selectOnFocus,\n        disallowTypeAhead: disallowTypeAhead,\n        shouldUseVirtualFocus: shouldUseVirtualFocus,\n        allowsTabNavigation: allowsTabNavigation,\n        isVirtualized: isVirtualized,\n        scrollRef: ref\n    });\n    return {\n        listProps: collectionProps\n    };\n}\n\n\n\n\n\n\nexport {$52ac987c016884e9$export$d6daf82dcd84e87c as useSelectableCollection, $5ec5a493f6042709$export$ecf600387e221c37 as useSelectableItem, $38e0ab555fbd8768$export$b95089534ab7c1fd as useSelectableList, $8dd8d9b0d53d6ca8$export$a05409b8bb224a5a as ListKeyboardDelegate, $a6f03d1cafa48b51$export$e32c88dfddc6e1d8 as useTypeSelect};\n//# sourceMappingURL=module.js.map\n"]},"metadata":{},"sourceType":"module"}