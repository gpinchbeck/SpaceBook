{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"initialRouteName\", \"children\", \"screenListeners\", \"screenOptions\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { createNavigatorFactory, StackActions, StackRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport NativeStackView from \"../views/NativeStackView\";\n\nfunction NativeStackNavigator(_ref) {\n  var initialRouteName = _ref.initialRouteName,\n      children = _ref.children,\n      screenListeners = _ref.screenListeners,\n      screenOptions = _ref.screenOptions,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useNavigationBuilder = useNavigationBuilder(StackRouter, {\n    initialRouteName: initialRouteName,\n    children: children,\n    screenListeners: screenListeners,\n    screenOptions: screenOptions\n  }),\n      state = _useNavigationBuilder.state,\n      descriptors = _useNavigationBuilder.descriptors,\n      navigation = _useNavigationBuilder.navigation,\n      NavigationContent = _useNavigationBuilder.NavigationContent;\n\n  React.useEffect(function () {\n    var _navigation$addListen;\n\n    return navigation === null || navigation === void 0 ? void 0 : (_navigation$addListen = navigation.addListener) === null || _navigation$addListen === void 0 ? void 0 : _navigation$addListen.call(navigation, 'tabPress', function (e) {\n      var isFocused = navigation.isFocused();\n      requestAnimationFrame(function () {\n        if (state.index > 0 && isFocused && !e.defaultPrevented) {\n          navigation.dispatch(_objectSpread(_objectSpread({}, StackActions.popToTop()), {}, {\n            target: state.key\n          }));\n        }\n      });\n    });\n  }, [navigation, state.index, state.key]);\n  return React.createElement(NavigationContent, null, React.createElement(NativeStackView, _extends({}, rest, {\n    state: state,\n    navigation: navigation,\n    descriptors: descriptors\n  })));\n}\n\nexport default createNavigatorFactory(NativeStackNavigator);","map":{"version":3,"mappings":";;;;;;;;AAAA,SAASA,QAAT,GAAoB;AAAEA,UAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,gBAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,sBAAT,EAAiCC,YAAjC,EAA+CC,WAA/C,EAA4DC,oBAA5D,QAAwF,0BAAxF;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,eAAP;;AAEA,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AAClC,MACEC,gBADF,GAMID,IANJ,CACEC,gBADF;AAAA,MAEEC,QAFF,GAMIF,IANJ,CAEEE,QAFF;AAAA,MAGEC,eAHF,GAMIH,IANJ,CAGEG,eAHF;AAAA,MAIEC,aAJF,GAMIJ,IANJ,CAIEI,aAJF;AAAA,MAKKC,IALL,4BAMIL,IANJ;;AAOA,8BAKIJ,oBAAoB,CAACD,WAAD,EAAc;AACpCM,oBAAgB,EAAhBA,gBADoC;AAEpCC,YAAQ,EAARA,QAFoC;AAGpCC,mBAAe,EAAfA,eAHoC;AAIpCC,iBAAa,EAAbA;AAJoC,GAAd,CALxB;AAAA,MACEE,KADF,yBACEA,KADF;AAAA,MAEEC,WAFF,yBAEEA,WAFF;AAAA,MAGEC,UAHF,yBAGEA,UAHF;AAAA,MAIEC,iBAJF,yBAIEA,iBAJF;;AAWAZ,OAAK,CAACa,SAAN,CAAgB,YAAM;AACpB,QAAIC,qBAAJ;;AAEA,WAAOH,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwD,CAACG,qBAAqB,GAAGH,UAAU,CAACI,WAApC,MAAqD,IAArD,IAA6DD,qBAAqB,KAAK,KAAK,CAA5F,GAAgG,KAAK,CAArG,GAAyGA,qBAAqB,CAACpB,IAAtB,CAA2BiB,UAA3B,EAAuC,UAAvC,EAAmD,WAAC,EAAI;AAC9N,UAAMK,SAAS,GAAGL,UAAU,CAACK,SAAX,EAAlB;AAGAC,2BAAqB,CAAC,YAAM;AAC1B,YAAIR,KAAK,CAACS,KAAN,GAAc,CAAd,IAAmBF,SAAnB,IAAgC,CAACG,CAAC,CAACC,gBAAvC,EAAyD;AAGvDT,oBAAU,CAACU,QAAX,iCAAyBxB,YAAY,CAACyB,QAAb,EAAzB;AACEpC,kBAAM,EAAEuB,KAAK,CAAClB;AADhB;AAGD;AACF,OARoB,CAArB;AASD,KAbuK,CAAxK;AAcD,GAjBD,EAiBG,CAACoB,UAAD,EAAaF,KAAK,CAACS,KAAnB,EAA0BT,KAAK,CAAClB,GAAhC,CAjBH;AAkBA,SAAoBS,KAAK,CAACuB,aAAN,CAAoBX,iBAApB,EAAuC,IAAvC,EAA0DZ,KAAK,CAACuB,aAAN,CAAoBtB,eAApB,EAAqClB,QAAQ,CAAC,EAAD,EAAKyB,IAAL,EAAW;AACpIC,SAAK,EAAEA,KAD6H;AAEpIE,cAAU,EAAEA,UAFwH;AAGpID,eAAW,EAAEA;AAHuH,GAAX,CAA7C,CAA1D,CAApB;AAKD;;AAED,eAAed,sBAAsB,CAACM,oBAAD,CAArC","names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","createNavigatorFactory","StackActions","StackRouter","useNavigationBuilder","React","NativeStackView","NativeStackNavigator","_ref","initialRouteName","children","screenListeners","screenOptions","rest","state","descriptors","navigation","NavigationContent","useEffect","_navigation$addListen","addListener","isFocused","requestAnimationFrame","index","e","defaultPrevented","dispatch","popToTop","createElement"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-navigation/native-stack/lib/module/navigators/createNativeStackNavigator.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { createNavigatorFactory, StackActions, StackRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport NativeStackView from '../views/NativeStackView';\n\nfunction NativeStackNavigator(_ref) {\n  let {\n    initialRouteName,\n    children,\n    screenListeners,\n    screenOptions,\n    ...rest\n  } = _ref;\n  const {\n    state,\n    descriptors,\n    navigation,\n    NavigationContent\n  } = useNavigationBuilder(StackRouter, {\n    initialRouteName,\n    children,\n    screenListeners,\n    screenOptions\n  });\n  React.useEffect(() => {\n    var _navigation$addListen;\n\n    return navigation === null || navigation === void 0 ? void 0 : (_navigation$addListen = navigation.addListener) === null || _navigation$addListen === void 0 ? void 0 : _navigation$addListen.call(navigation, 'tabPress', e => {\n      const isFocused = navigation.isFocused(); // Run the operation in the next frame so we're sure all listeners have been run\n      // This is necessary to know if preventDefault() has been called\n\n      requestAnimationFrame(() => {\n        if (state.index > 0 && isFocused && !e.defaultPrevented) {\n          // When user taps on already focused tab and we're inside the tab,\n          // reset the stack to replicate native behaviour\n          navigation.dispatch({ ...StackActions.popToTop(),\n            target: state.key\n          });\n        }\n      });\n    });\n  }, [navigation, state.index, state.key]);\n  return /*#__PURE__*/React.createElement(NavigationContent, null, /*#__PURE__*/React.createElement(NativeStackView, _extends({}, rest, {\n    state: state,\n    navigation: navigation,\n    descriptors: descriptors\n  })));\n}\n\nexport default createNavigatorFactory(NativeStackNavigator);\n//# sourceMappingURL=createNativeStackNavigator.js.map"]},"metadata":{},"sourceType":"module"}