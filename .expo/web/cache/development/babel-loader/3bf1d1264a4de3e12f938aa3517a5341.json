{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { usePress } from '@react-native-aria/interactions';\nimport { useSelectableItem } from '@react-aria/selection';\nimport { useMapDomPropsToRN } from '@react-native-aria/utils';\nvar tabsIds = new WeakMap();\nexport function useTab(props, state, ref) {\n  var item = props.item,\n      propsDisabled = props.isDisabled;\n  var key = item.key;\n  var manager = state.selectionManager,\n      selectedKey = state.selectedKey;\n  var isSelected = key === selectedKey;\n\n  var _useSelectableItem = useSelectableItem({\n    selectionManager: manager,\n    key: key,\n    ref: ref\n  }),\n      itemProps = _useSelectableItem.itemProps;\n\n  var isDisabled = propsDisabled || state.disabledKeys.has(key);\n\n  var _usePress = usePress(_objectSpread(_objectSpread({}, itemProps), {}, {\n    isDisabled: isDisabled\n  })),\n      pressProps = _usePress.pressProps;\n\n  var tabId = generateId(state, key, 'tab');\n  var tabPanelId = generateId(state, key, 'tabpanel');\n  var tabIndex = pressProps.tabIndex;\n\n  if (isSelected && !isDisabled) {\n    tabIndex = 0;\n  }\n\n  var onMouseDown = function onMouseDown(e) {\n    return e.stopPropagation();\n  };\n\n  var tabPropsTemp = _objectSpread(_objectSpread({}, pressProps), {}, {\n    onMouseDown: onMouseDown,\n    'id': tabId,\n    'aria-selected': isSelected,\n    'aria-disabled': isDisabled || undefined,\n    'aria-controls': isSelected ? tabPanelId : undefined,\n    'tabIndex': isDisabled ? undefined : tabIndex,\n    'role': 'tab'\n  });\n\n  var tabProps = useMapDomPropsToRN(tabPropsTemp, ref);\n  return {\n    tabProps: tabProps\n  };\n}\n\nfunction generateId(state, key, role) {\n  if (typeof key === 'string') {\n    key = key.replace(/\\s+/g, '');\n  }\n\n  var baseId = tabsIds.get(state);\n  return baseId + \"-\" + role + \"-\" + key;\n}","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,iCAAzB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,IAAMC,OAAO,GAAG,IAAIC,OAAJ,EAAhB;AACA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,GAA9B,EAAmC;AACxC,MACEC,IADF,GAGIH,KAHJ,CACEG,IADF;AAAA,MAEcC,aAFd,GAGIJ,KAHJ,CAEEK,UAFF;AAIA,MACEC,GADF,GAEIH,IAFJ,CACEG,GADF;AAGA,MACoBC,OADpB,GAGIN,KAHJ,CACEO,gBADF;AAAA,MAEEC,WAFF,GAGIR,KAHJ,CAEEQ,WAFF;AAIA,MAAIC,UAAU,GAAGJ,GAAG,KAAKG,WAAzB;;AACA,2BAEId,iBAAiB,CAAC;AACpBa,oBAAgB,EAAED,OADE;AAEpBD,OAAG,EAAHA,GAFoB;AAGpBJ,OAAG,EAAHA;AAHoB,GAAD,CAFrB;AAAA,MACES,SADF,sBACEA,SADF;;AAOA,MAAIN,UAAU,GAAGD,aAAa,IAAIH,KAAK,CAACW,YAAN,CAAmBC,GAAnB,CAAuBP,GAAvB,CAAlC;;AACA,kBAEIZ,QAAQ,iCAAMiB,SAAN;AACVN,cAAU,EAAVA;AADU,KAFZ;AAAA,MACES,UADF,aACEA,UADF;;AAKA,MAAIC,KAAK,GAAGC,UAAU,CAACf,KAAD,EAAQK,GAAR,EAAa,KAAb,CAAtB;AACA,MAAIW,UAAU,GAAGD,UAAU,CAACf,KAAD,EAAQK,GAAR,EAAa,UAAb,CAA3B;AACA,MACEY,QADF,GAEIJ,UAFJ,CACEI,QADF;;AAIA,MAAIR,UAAU,IAAI,CAACL,UAAnB,EAA+B;AAC7Ba,YAAQ,GAAG,CAAX;AACD;;AAOD,MAAMC,WAAW,GAAG,SAAdA,WAAc,EAAC;AAAA,WAAIC,CAAC,CAACC,eAAF,EAAJ;AAAA,GAArB;;AAEA,MAAMC,YAAY,mCAAQR,UAAR;AAChBK,eAAW,EAAXA,WADgB;AAEhB,UAAMJ,KAFU;AAGhB,qBAAiBL,UAHD;AAIhB,qBAAiBL,UAAU,IAAIkB,SAJf;AAKhB,qBAAiBb,UAAU,GAAGO,UAAH,GAAgBM,SAL3B;AAMhB,gBAAYlB,UAAU,GAAGkB,SAAH,GAAeL,QANrB;AAOhB,YAAQ;AAPQ,IAAlB;;AASA,MAAMM,QAAQ,GAAG5B,kBAAkB,CAAC0B,YAAD,EAAepB,GAAf,CAAnC;AACA,SAAO;AACLsB,YAAQ,EAARA;AADK,GAAP;AAGD;;AAED,SAASR,UAAT,CAAoBf,KAApB,EAA2BK,GAA3B,EAAgCmB,IAAhC,EAAsC;AACpC,MAAI,OAAOnB,GAAP,KAAe,QAAnB,EAA6B;AAC3BA,OAAG,GAAGA,GAAG,CAACoB,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAN;AACD;;AAED,MAAIC,MAAM,GAAG9B,OAAO,CAAC+B,GAAR,CAAY3B,KAAZ,CAAb;AACA,SAAU0B,MAAV,SAAoBF,IAApB,SAA4BnB,GAA5B;AACD","names":["usePress","useSelectableItem","useMapDomPropsToRN","tabsIds","WeakMap","useTab","props","state","ref","item","propsDisabled","isDisabled","key","manager","selectionManager","selectedKey","isSelected","itemProps","disabledKeys","has","pressProps","tabId","generateId","tabPanelId","tabIndex","onMouseDown","e","stopPropagation","tabPropsTemp","undefined","tabProps","role","replace","baseId","get"],"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/@react-native-aria/tabs/lib/module/useTab.web.js"],"sourcesContent":["import { usePress } from '@react-native-aria/interactions';\nimport { useSelectableItem } from '@react-aria/selection';\nimport { useMapDomPropsToRN } from '@react-native-aria/utils';\nconst tabsIds = new WeakMap();\nexport function useTab(props, state, ref) {\n  let {\n    item,\n    isDisabled: propsDisabled\n  } = props;\n  let {\n    key\n  } = item;\n  let {\n    selectionManager: manager,\n    selectedKey\n  } = state;\n  let isSelected = key === selectedKey;\n  let {\n    itemProps\n  } = useSelectableItem({\n    selectionManager: manager,\n    key,\n    ref\n  });\n  let isDisabled = propsDisabled || state.disabledKeys.has(key);\n  let {\n    pressProps\n  } = usePress({ ...itemProps,\n    isDisabled\n  });\n  let tabId = generateId(state, key, 'tab');\n  let tabPanelId = generateId(state, key, 'tabpanel');\n  let {\n    tabIndex\n  } = pressProps; // selected tab should have tabIndex=0, when it initializes\n\n  if (isSelected && !isDisabled) {\n    tabIndex = 0;\n  } // Putting this as a last resort, after several hours of debugging.\n  // Why?\n  // tabListProps adds onMouseDown with preventDefault in useSelectableCollection.ts (React Aria) and react-native-web uses onClick for onPress.\n  // This results in tab button not getting focused when clicked\n  // See this example - https://codesandbox.io/s/issue-i-know-but-dont-know-why-1-ydyw5?file=/src/App.js\n\n\n  const onMouseDown = e => e.stopPropagation();\n\n  const tabPropsTemp = { ...pressProps,\n    onMouseDown,\n    'id': tabId,\n    'aria-selected': isSelected,\n    'aria-disabled': isDisabled || undefined,\n    'aria-controls': isSelected ? tabPanelId : undefined,\n    'tabIndex': isDisabled ? undefined : tabIndex,\n    'role': 'tab'\n  };\n  const tabProps = useMapDomPropsToRN(tabPropsTemp, ref);\n  return {\n    tabProps\n  };\n}\n\nfunction generateId(state, key, role) {\n  if (typeof key === 'string') {\n    key = key.replace(/\\s+/g, '');\n  }\n\n  let baseId = tabsIds.get(state);\n  return `${baseId}-${role}-${key}`;\n}\n//# sourceMappingURL=useTab.web.js.map"]},"metadata":{},"sourceType":"module"}