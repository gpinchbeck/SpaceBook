{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"key\", \"routeNames\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { CommonActions } from '@react-navigation/routers';\nimport * as React from 'react';\nimport checkDuplicateRouteNames from \"./checkDuplicateRouteNames\";\nimport checkSerializable from \"./checkSerializable\";\nimport { NOT_INITIALIZED_ERROR } from \"./createNavigationContainerRef\";\nimport EnsureSingleNavigator from \"./EnsureSingleNavigator\";\nimport findFocusedRoute from \"./findFocusedRoute\";\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport NavigationContainerRefContext from \"./NavigationContainerRefContext\";\nimport NavigationContext from \"./NavigationContext\";\nimport NavigationRouteContext from \"./NavigationRouteContext\";\nimport NavigationStateContext from \"./NavigationStateContext\";\nimport UnhandledActionContext from \"./UnhandledActionContext\";\nimport useChildListeners from \"./useChildListeners\";\nimport useEventEmitter from \"./useEventEmitter\";\nimport useKeyedChildListeners from \"./useKeyedChildListeners\";\nimport useOptionsGetters from \"./useOptionsGetters\";\nimport { ScheduleUpdateContext } from \"./useScheduleUpdate\";\nimport useSyncState from \"./useSyncState\";\nvar serializableWarnings = [];\nvar duplicateNameWarnings = [];\n\nvar getPartialState = function getPartialState(state) {\n  if (state === undefined) {\n    return;\n  }\n\n  var key = state.key,\n      routeNames = state.routeNames,\n      partialState = _objectWithoutProperties(state, _excluded);\n\n  return _objectSpread(_objectSpread({}, partialState), {}, {\n    stale: true,\n    routes: state.routes.map(function (route) {\n      if (route.state === undefined) {\n        return route;\n      }\n\n      return _objectSpread(_objectSpread({}, route), {}, {\n        state: getPartialState(route.state)\n      });\n    })\n  });\n};\n\nvar BaseNavigationContainer = React.forwardRef(function BaseNavigationContainer(_ref, ref) {\n  var initialState = _ref.initialState,\n      onStateChange = _ref.onStateChange,\n      onUnhandledAction = _ref.onUnhandledAction,\n      independent = _ref.independent,\n      children = _ref.children;\n  var parent = React.useContext(NavigationStateContext);\n\n  if (!parent.isDefault && !independent) {\n    throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");\n  }\n\n  var _useSyncState = useSyncState(function () {\n    return getPartialState(initialState == null ? undefined : initialState);\n  }),\n      _useSyncState2 = _slicedToArray(_useSyncState, 5),\n      state = _useSyncState2[0],\n      getState = _useSyncState2[1],\n      setState = _useSyncState2[2],\n      scheduleUpdate = _useSyncState2[3],\n      flushUpdates = _useSyncState2[4];\n\n  var isFirstMountRef = React.useRef(true);\n  var navigatorKeyRef = React.useRef();\n  var getKey = React.useCallback(function () {\n    return navigatorKeyRef.current;\n  }, []);\n  var setKey = React.useCallback(function (key) {\n    navigatorKeyRef.current = key;\n  }, []);\n\n  var _useChildListeners = useChildListeners(),\n      listeners = _useChildListeners.listeners,\n      addListener = _useChildListeners.addListener;\n\n  var _useKeyedChildListene = useKeyedChildListeners(),\n      keyedListeners = _useKeyedChildListene.keyedListeners,\n      addKeyedListener = _useKeyedChildListene.addKeyedListener;\n\n  var dispatch = React.useCallback(function (action) {\n    if (listeners.focus[0] == null) {\n      console.error(NOT_INITIALIZED_ERROR);\n    } else {\n      listeners.focus[0](function (navigation) {\n        return navigation.dispatch(action);\n      });\n    }\n  }, [listeners.focus]);\n  var canGoBack = React.useCallback(function () {\n    if (listeners.focus[0] == null) {\n      return false;\n    }\n\n    var _listeners$focus$ = listeners.focus[0](function (navigation) {\n      return navigation.canGoBack();\n    }),\n        result = _listeners$focus$.result,\n        handled = _listeners$focus$.handled;\n\n    if (handled) {\n      return result;\n    } else {\n      return false;\n    }\n  }, [listeners.focus]);\n  var resetRoot = React.useCallback(function (state) {\n    var _state$key, _keyedListeners$getSt, _keyedListeners$getSt2;\n\n    var target = (_state$key = state === null || state === void 0 ? void 0 : state.key) !== null && _state$key !== void 0 ? _state$key : (_keyedListeners$getSt = (_keyedListeners$getSt2 = keyedListeners.getState).root) === null || _keyedListeners$getSt === void 0 ? void 0 : _keyedListeners$getSt.call(_keyedListeners$getSt2).key;\n\n    if (target == null) {\n      console.error(NOT_INITIALIZED_ERROR);\n    } else {\n      listeners.focus[0](function (navigation) {\n        return navigation.dispatch(_objectSpread(_objectSpread({}, CommonActions.reset(state)), {}, {\n          target: target\n        }));\n      });\n    }\n  }, [keyedListeners.getState, listeners.focus]);\n  var getRootState = React.useCallback(function () {\n    var _keyedListeners$getSt3, _keyedListeners$getSt4;\n\n    return (_keyedListeners$getSt3 = (_keyedListeners$getSt4 = keyedListeners.getState).root) === null || _keyedListeners$getSt3 === void 0 ? void 0 : _keyedListeners$getSt3.call(_keyedListeners$getSt4);\n  }, [keyedListeners.getState]);\n  var getCurrentRoute = React.useCallback(function () {\n    var state = getRootState();\n\n    if (state == null) {\n      return undefined;\n    }\n\n    var route = findFocusedRoute(state);\n    return route;\n  }, [getRootState]);\n  var emitter = useEventEmitter();\n\n  var _useOptionsGetters = useOptionsGetters({}),\n      addOptionsGetter = _useOptionsGetters.addOptionsGetter,\n      getCurrentOptions = _useOptionsGetters.getCurrentOptions;\n\n  var navigation = React.useMemo(function () {\n    return _objectSpread(_objectSpread(_objectSpread({}, Object.keys(CommonActions).reduce(function (acc, name) {\n      acc[name] = function () {\n        return dispatch(CommonActions[name].apply(CommonActions, arguments));\n      };\n\n      return acc;\n    }, {})), emitter.create('root')), {}, {\n      dispatch: dispatch,\n      resetRoot: resetRoot,\n      isFocused: function isFocused() {\n        return true;\n      },\n      canGoBack: canGoBack,\n      getParent: function getParent() {\n        return undefined;\n      },\n      getState: function getState() {\n        return stateRef.current;\n      },\n      getRootState: getRootState,\n      getCurrentRoute: getCurrentRoute,\n      getCurrentOptions: getCurrentOptions,\n      isReady: function isReady() {\n        return listeners.focus[0] != null;\n      }\n    });\n  }, [canGoBack, dispatch, emitter, getCurrentOptions, getCurrentRoute, getRootState, listeners.focus, resetRoot]);\n  React.useImperativeHandle(ref, function () {\n    return navigation;\n  }, [navigation]);\n  var onDispatchAction = React.useCallback(function (action, noop) {\n    emitter.emit({\n      type: '__unsafe_action__',\n      data: {\n        action: action,\n        noop: noop,\n        stack: stackRef.current\n      }\n    });\n  }, [emitter]);\n  var lastEmittedOptionsRef = React.useRef();\n  var onOptionsChange = React.useCallback(function (options) {\n    if (lastEmittedOptionsRef.current === options) {\n      return;\n    }\n\n    lastEmittedOptionsRef.current = options;\n    emitter.emit({\n      type: 'options',\n      data: {\n        options: options\n      }\n    });\n  }, [emitter]);\n  var stackRef = React.useRef();\n  var builderContext = React.useMemo(function () {\n    return {\n      addListener: addListener,\n      addKeyedListener: addKeyedListener,\n      onDispatchAction: onDispatchAction,\n      onOptionsChange: onOptionsChange,\n      stackRef: stackRef\n    };\n  }, [addListener, addKeyedListener, onDispatchAction, onOptionsChange]);\n  var scheduleContext = React.useMemo(function () {\n    return {\n      scheduleUpdate: scheduleUpdate,\n      flushUpdates: flushUpdates\n    };\n  }, [scheduleUpdate, flushUpdates]);\n  var isInitialRef = React.useRef(true);\n  var getIsInitial = React.useCallback(function () {\n    return isInitialRef.current;\n  }, []);\n  var context = React.useMemo(function () {\n    return {\n      state: state,\n      getState: getState,\n      setState: setState,\n      getKey: getKey,\n      setKey: setKey,\n      getIsInitial: getIsInitial,\n      addOptionsGetter: addOptionsGetter\n    };\n  }, [state, getState, setState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  var onStateChangeRef = React.useRef(onStateChange);\n  var stateRef = React.useRef(state);\n  React.useEffect(function () {\n    isInitialRef.current = false;\n    onStateChangeRef.current = onStateChange;\n    stateRef.current = state;\n  });\n  React.useEffect(function () {\n    var hydratedState = getRootState();\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (hydratedState !== undefined) {\n        var serializableResult = checkSerializable(hydratedState);\n\n        if (!serializableResult.serializable) {\n          var location = serializableResult.location,\n              reason = serializableResult.reason;\n          var path = '';\n          var pointer = hydratedState;\n          var params = false;\n\n          for (var i = 0; i < location.length; i++) {\n            var curr = location[i];\n            var prev = location[i - 1];\n            pointer = pointer[curr];\n\n            if (!params && curr === 'state') {\n              continue;\n            } else if (!params && curr === 'routes') {\n              if (path) {\n                path += ' > ';\n              }\n            } else if (!params && typeof curr === 'number' && prev === 'routes') {\n              var _pointer;\n\n              path += (_pointer = pointer) === null || _pointer === void 0 ? void 0 : _pointer.name;\n            } else if (!params) {\n              path += \" > \" + curr;\n              params = true;\n            } else {\n              if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                path += \"[\" + curr + \"]\";\n              } else if (/^[a-z$_]+$/i.test(curr)) {\n                path += \".\" + curr;\n              } else {\n                path += \"[\" + JSON.stringify(curr) + \"]\";\n              }\n            }\n          }\n\n          var message = \"Non-serializable values were found in the navigation state. Check:\\n\\n\" + path + \" (\" + reason + \")\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\";\n\n          if (!serializableWarnings.includes(message)) {\n            serializableWarnings.push(message);\n            console.warn(message);\n          }\n        }\n\n        var duplicateRouteNamesResult = checkDuplicateRouteNames(hydratedState);\n\n        if (duplicateRouteNamesResult.length) {\n          var _message = \"Found screens with the same name nested inside one another. Check:\\n\" + duplicateRouteNamesResult.map(function (locations) {\n            return \"\\n\" + locations.join(', ');\n          }) + \"\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.\";\n\n          if (!duplicateNameWarnings.includes(_message)) {\n            duplicateNameWarnings.push(_message);\n            console.warn(_message);\n          }\n        }\n      }\n    }\n\n    emitter.emit({\n      type: 'state',\n      data: {\n        state: state\n      }\n    });\n\n    if (!isFirstMountRef.current && onStateChangeRef.current) {\n      onStateChangeRef.current(hydratedState);\n    }\n\n    isFirstMountRef.current = false;\n  }, [getRootState, emitter, state]);\n  var defaultOnUnhandledAction = React.useCallback(function (action) {\n    if (process.env.NODE_ENV === 'production') {\n      return;\n    }\n\n    var payload = action.payload;\n    var message = \"The action '\" + action.type + \"'\" + (payload ? \" with payload \" + JSON.stringify(action.payload) : '') + \" was not handled by any navigator.\";\n\n    switch (action.type) {\n      case 'NAVIGATE':\n      case 'PUSH':\n      case 'REPLACE':\n      case 'JUMP_TO':\n        if (payload !== null && payload !== void 0 && payload.name) {\n          message += \"\\n\\nDo you have a screen named '\" + payload.name + \"'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\";\n        } else {\n          message += \"\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.\";\n        }\n\n        break;\n\n      case 'GO_BACK':\n      case 'POP':\n      case 'POP_TO_TOP':\n        message += \"\\n\\nIs there any screen to go back to?\";\n        break;\n\n      case 'OPEN_DRAWER':\n      case 'CLOSE_DRAWER':\n      case 'TOGGLE_DRAWER':\n        message += \"\\n\\nIs your screen inside a Drawer navigator?\";\n        break;\n    }\n\n    message += \"\\n\\nThis is a development-only warning and won't be shown in production.\";\n    console.error(message);\n  }, []);\n  var element = React.createElement(NavigationContainerRefContext.Provider, {\n    value: navigation\n  }, React.createElement(ScheduleUpdateContext.Provider, {\n    value: scheduleContext\n  }, React.createElement(NavigationBuilderContext.Provider, {\n    value: builderContext\n  }, React.createElement(NavigationStateContext.Provider, {\n    value: context\n  }, React.createElement(UnhandledActionContext.Provider, {\n    value: onUnhandledAction !== null && onUnhandledAction !== void 0 ? onUnhandledAction : defaultOnUnhandledAction\n  }, React.createElement(EnsureSingleNavigator, null, children))))));\n\n  if (independent) {\n    element = React.createElement(NavigationRouteContext.Provider, {\n      value: undefined\n    }, React.createElement(NavigationContext.Provider, {\n      value: undefined\n    }, element));\n  }\n\n  return element;\n});\nexport default BaseNavigationContainer;","map":{"version":3,"mappings":"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","names":["CommonActions","React","checkDuplicateRouteNames","checkSerializable","NOT_INITIALIZED_ERROR","EnsureSingleNavigator","findFocusedRoute","NavigationBuilderContext","NavigationContainerRefContext","NavigationContext","NavigationRouteContext","NavigationStateContext","UnhandledActionContext","useChildListeners","useEventEmitter","useKeyedChildListeners","useOptionsGetters","ScheduleUpdateContext","useSyncState","serializableWarnings","duplicateNameWarnings","getPartialState","state","undefined","key","routeNames","partialState","stale","routes","map","route","BaseNavigationContainer","forwardRef","_ref","ref","initialState","onStateChange","onUnhandledAction","independent","children","parent","useContext","isDefault","Error","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","listeners","addListener","keyedListeners","addKeyedListener","dispatch","focus","console","error","navigation","action","canGoBack","result","handled","resetRoot","_state$key","_keyedListeners$getSt","_keyedListeners$getSt2","target","root","call","reset","getRootState","_keyedListeners$getSt3","_keyedListeners$getSt4","getCurrentRoute","emitter","addOptionsGetter","getCurrentOptions","useMemo","Object","keys","reduce","acc","name","arguments","create","isFocused","getParent","stateRef","isReady","useImperativeHandle","onDispatchAction","noop","emit","type","data","stack","stackRef","lastEmittedOptionsRef","onOptionsChange","options","builderContext","scheduleContext","isInitialRef","getIsInitial","context","onStateChangeRef","useEffect","hydratedState","process","env","NODE_ENV","serializableResult","serializable","location","reason","path","pointer","params","i","length","curr","prev","_pointer","test","JSON","stringify","message","includes","push","warn","duplicateRouteNamesResult","locations","join","defaultOnUnhandledAction","payload","element","createElement","Provider","value"],"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/@react-navigation/core/lib/module/BaseNavigationContainer.js"],"sourcesContent":["import { CommonActions } from '@react-navigation/routers';\nimport * as React from 'react';\nimport checkDuplicateRouteNames from './checkDuplicateRouteNames';\nimport checkSerializable from './checkSerializable';\nimport { NOT_INITIALIZED_ERROR } from './createNavigationContainerRef';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport findFocusedRoute from './findFocusedRoute';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationContainerRefContext from './NavigationContainerRefContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport useChildListeners from './useChildListeners';\nimport useEventEmitter from './useEventEmitter';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useSyncState from './useSyncState';\nconst serializableWarnings = [];\nconst duplicateNameWarnings = [];\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\n\nconst getPartialState = state => {\n  if (state === undefined) {\n    return;\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  const {\n    key,\n    routeNames,\n    ...partialState\n  } = state;\n  return { ...partialState,\n    stale: true,\n    routes: state.routes.map(route => {\n      if (route.state === undefined) {\n        return route;\n      }\n\n      return { ...route,\n        state: getPartialState(route.state)\n      };\n    })\n  };\n};\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\n\n\nconst BaseNavigationContainer = /*#__PURE__*/React.forwardRef(function BaseNavigationContainer(_ref, ref) {\n  let {\n    initialState,\n    onStateChange,\n    onUnhandledAction,\n    independent,\n    children\n  } = _ref;\n  const parent = React.useContext(NavigationStateContext);\n\n  if (!parent.isDefault && !independent) {\n    throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");\n  }\n\n  const [state, getState, setState, scheduleUpdate, flushUpdates] = useSyncState(() => getPartialState(initialState == null ? undefined : initialState));\n  const isFirstMountRef = React.useRef(true);\n  const navigatorKeyRef = React.useRef();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n  const setKey = React.useCallback(key => {\n    navigatorKeyRef.current = key;\n  }, []);\n  const {\n    listeners,\n    addListener\n  } = useChildListeners();\n  const {\n    keyedListeners,\n    addKeyedListener\n  } = useKeyedChildListeners();\n  const dispatch = React.useCallback(action => {\n    if (listeners.focus[0] == null) {\n      console.error(NOT_INITIALIZED_ERROR);\n    } else {\n      listeners.focus[0](navigation => navigation.dispatch(action));\n    }\n  }, [listeners.focus]);\n  const canGoBack = React.useCallback(() => {\n    if (listeners.focus[0] == null) {\n      return false;\n    }\n\n    const {\n      result,\n      handled\n    } = listeners.focus[0](navigation => navigation.canGoBack());\n\n    if (handled) {\n      return result;\n    } else {\n      return false;\n    }\n  }, [listeners.focus]);\n  const resetRoot = React.useCallback(state => {\n    var _state$key, _keyedListeners$getSt, _keyedListeners$getSt2;\n\n    const target = (_state$key = state === null || state === void 0 ? void 0 : state.key) !== null && _state$key !== void 0 ? _state$key : (_keyedListeners$getSt = (_keyedListeners$getSt2 = keyedListeners.getState).root) === null || _keyedListeners$getSt === void 0 ? void 0 : _keyedListeners$getSt.call(_keyedListeners$getSt2).key;\n\n    if (target == null) {\n      console.error(NOT_INITIALIZED_ERROR);\n    } else {\n      listeners.focus[0](navigation => navigation.dispatch({ ...CommonActions.reset(state),\n        target\n      }));\n    }\n  }, [keyedListeners.getState, listeners.focus]);\n  const getRootState = React.useCallback(() => {\n    var _keyedListeners$getSt3, _keyedListeners$getSt4;\n\n    return (_keyedListeners$getSt3 = (_keyedListeners$getSt4 = keyedListeners.getState).root) === null || _keyedListeners$getSt3 === void 0 ? void 0 : _keyedListeners$getSt3.call(_keyedListeners$getSt4);\n  }, [keyedListeners.getState]);\n  const getCurrentRoute = React.useCallback(() => {\n    const state = getRootState();\n\n    if (state == null) {\n      return undefined;\n    }\n\n    const route = findFocusedRoute(state);\n    return route;\n  }, [getRootState]);\n  const emitter = useEventEmitter();\n  const {\n    addOptionsGetter,\n    getCurrentOptions\n  } = useOptionsGetters({});\n  const navigation = React.useMemo(() => ({ ...Object.keys(CommonActions).reduce((acc, name) => {\n      acc[name] = function () {\n        return (// @ts-expect-error: this is ok\n          dispatch(CommonActions[name](...arguments))\n        );\n      };\n\n      return acc;\n    }, {}),\n    ...emitter.create('root'),\n    dispatch,\n    resetRoot,\n    isFocused: () => true,\n    canGoBack,\n    getParent: () => undefined,\n    getState: () => stateRef.current,\n    getRootState,\n    getCurrentRoute,\n    getCurrentOptions,\n    isReady: () => listeners.focus[0] != null\n  }), [canGoBack, dispatch, emitter, getCurrentOptions, getCurrentRoute, getRootState, listeners.focus, resetRoot]);\n  React.useImperativeHandle(ref, () => navigation, [navigation]);\n  const onDispatchAction = React.useCallback((action, noop) => {\n    emitter.emit({\n      type: '__unsafe_action__',\n      data: {\n        action,\n        noop,\n        stack: stackRef.current\n      }\n    });\n  }, [emitter]);\n  const lastEmittedOptionsRef = React.useRef();\n  const onOptionsChange = React.useCallback(options => {\n    if (lastEmittedOptionsRef.current === options) {\n      return;\n    }\n\n    lastEmittedOptionsRef.current = options;\n    emitter.emit({\n      type: 'options',\n      data: {\n        options\n      }\n    });\n  }, [emitter]);\n  const stackRef = React.useRef();\n  const builderContext = React.useMemo(() => ({\n    addListener,\n    addKeyedListener,\n    onDispatchAction,\n    onOptionsChange,\n    stackRef\n  }), [addListener, addKeyedListener, onDispatchAction, onOptionsChange]);\n  const scheduleContext = React.useMemo(() => ({\n    scheduleUpdate,\n    flushUpdates\n  }), [scheduleUpdate, flushUpdates]);\n  const isInitialRef = React.useRef(true);\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n  const context = React.useMemo(() => ({\n    state,\n    getState,\n    setState,\n    getKey,\n    setKey,\n    getIsInitial,\n    addOptionsGetter\n  }), [state, getState, setState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  const onStateChangeRef = React.useRef(onStateChange);\n  const stateRef = React.useRef(state);\n  React.useEffect(() => {\n    isInitialRef.current = false;\n    onStateChangeRef.current = onStateChange;\n    stateRef.current = state;\n  });\n  React.useEffect(() => {\n    const hydratedState = getRootState();\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (hydratedState !== undefined) {\n        const serializableResult = checkSerializable(hydratedState);\n\n        if (!serializableResult.serializable) {\n          const {\n            location,\n            reason\n          } = serializableResult;\n          let path = '';\n          let pointer = hydratedState;\n          let params = false;\n\n          for (let i = 0; i < location.length; i++) {\n            const curr = location[i];\n            const prev = location[i - 1];\n            pointer = pointer[curr];\n\n            if (!params && curr === 'state') {\n              continue;\n            } else if (!params && curr === 'routes') {\n              if (path) {\n                path += ' > ';\n              }\n            } else if (!params && typeof curr === 'number' && prev === 'routes') {\n              var _pointer;\n\n              path += (_pointer = pointer) === null || _pointer === void 0 ? void 0 : _pointer.name;\n            } else if (!params) {\n              path += ` > ${curr}`;\n              params = true;\n            } else {\n              if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                path += `[${curr}]`;\n              } else if (/^[a-z$_]+$/i.test(curr)) {\n                path += `.${curr}`;\n              } else {\n                path += `[${JSON.stringify(curr)}]`;\n              }\n            }\n          }\n\n          const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n          if (!serializableWarnings.includes(message)) {\n            serializableWarnings.push(message);\n            console.warn(message);\n          }\n        }\n\n        const duplicateRouteNamesResult = checkDuplicateRouteNames(hydratedState);\n\n        if (duplicateRouteNamesResult.length) {\n          const message = `Found screens with the same name nested inside one another. Check:\\n${duplicateRouteNamesResult.map(locations => `\\n${locations.join(', ')}`)}\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.`;\n\n          if (!duplicateNameWarnings.includes(message)) {\n            duplicateNameWarnings.push(message);\n            console.warn(message);\n          }\n        }\n      }\n    }\n\n    emitter.emit({\n      type: 'state',\n      data: {\n        state\n      }\n    });\n\n    if (!isFirstMountRef.current && onStateChangeRef.current) {\n      onStateChangeRef.current(hydratedState);\n    }\n\n    isFirstMountRef.current = false;\n  }, [getRootState, emitter, state]);\n  const defaultOnUnhandledAction = React.useCallback(action => {\n    if (process.env.NODE_ENV === 'production') {\n      return;\n    }\n\n    const payload = action.payload;\n    let message = `The action '${action.type}'${payload ? ` with payload ${JSON.stringify(action.payload)}` : ''} was not handled by any navigator.`;\n\n    switch (action.type) {\n      case 'NAVIGATE':\n      case 'PUSH':\n      case 'REPLACE':\n      case 'JUMP_TO':\n        if (payload !== null && payload !== void 0 && payload.name) {\n          message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n        } else {\n          message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n        }\n\n        break;\n\n      case 'GO_BACK':\n      case 'POP':\n      case 'POP_TO_TOP':\n        message += `\\n\\nIs there any screen to go back to?`;\n        break;\n\n      case 'OPEN_DRAWER':\n      case 'CLOSE_DRAWER':\n      case 'TOGGLE_DRAWER':\n        message += `\\n\\nIs your screen inside a Drawer navigator?`;\n        break;\n    }\n\n    message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n    console.error(message);\n  }, []);\n  let element = /*#__PURE__*/React.createElement(NavigationContainerRefContext.Provider, {\n    value: navigation\n  }, /*#__PURE__*/React.createElement(ScheduleUpdateContext.Provider, {\n    value: scheduleContext\n  }, /*#__PURE__*/React.createElement(NavigationBuilderContext.Provider, {\n    value: builderContext\n  }, /*#__PURE__*/React.createElement(NavigationStateContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(UnhandledActionContext.Provider, {\n    value: onUnhandledAction !== null && onUnhandledAction !== void 0 ? onUnhandledAction : defaultOnUnhandledAction\n  }, /*#__PURE__*/React.createElement(EnsureSingleNavigator, null, children))))));\n\n  if (independent) {\n    // We need to clear any existing contexts for nested independent container to work correctly\n    element = /*#__PURE__*/React.createElement(NavigationRouteContext.Provider, {\n      value: undefined\n    }, /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n      value: undefined\n    }, element));\n  }\n\n  return element;\n});\nexport default BaseNavigationContainer;\n//# sourceMappingURL=BaseNavigationContainer.js.map"]},"metadata":{},"sourceType":"module"}