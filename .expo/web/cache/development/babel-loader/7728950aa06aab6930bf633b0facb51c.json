{"ast":null,"code":"var _global$contexts;\n\nimport * as React from 'react';\nvar contexts = '__react_navigation__elements_contexts';\nglobal[contexts] = (_global$contexts = global[contexts]) !== null && _global$contexts !== void 0 ? _global$contexts : new Map();\nexport default function getNamedContext(name, initialValue) {\n  var context = global[contexts].get(name);\n\n  if (context) {\n    return context;\n  }\n\n  context = React.createContext(initialValue);\n  context.displayName = name;\n  global[contexts].set(name, context);\n  return context;\n}","map":{"version":3,"mappings":"AAAA,IAAIA,gBAAJ;;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,IAAMC,QAAQ,GAAG,uCAAjB;AAEAC,MAAM,CAACD,QAAD,CAAN,GAAmB,CAACF,gBAAgB,GAAGG,MAAM,CAACD,QAAD,CAA1B,MAA0C,IAA1C,IAAkDF,gBAAgB,KAAK,KAAK,CAA5E,GAAgFA,gBAAhF,GAAmG,IAAII,GAAJ,EAAtH;AACA,eAAe,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,YAA/B,EAA6C;AAC1D,MAAIC,OAAO,GAAGL,MAAM,CAACD,QAAD,CAAN,CAAiBO,GAAjB,CAAqBH,IAArB,CAAd;;AAEA,MAAIE,OAAJ,EAAa;AACX,WAAOA,OAAP;AACD;;AAEDA,SAAO,GAAgBP,KAAK,CAACS,aAAN,CAAoBH,YAApB,CAAvB;AACAC,SAAO,CAACG,WAAR,GAAsBL,IAAtB;AACAH,QAAM,CAACD,QAAD,CAAN,CAAiBU,GAAjB,CAAqBN,IAArB,EAA2BE,OAA3B;AACA,SAAOA,OAAP;AACD","names":["_global$contexts","React","contexts","global","Map","getNamedContext","name","initialValue","context","get","createContext","displayName","set"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-navigation/elements/lib/module/getNamedContext.js"],"sourcesContent":["var _global$contexts;\n\nimport * as React from 'react';\nconst contexts = '__react_navigation__elements_contexts';\n// We use a global variable to keep our contexts so that we can reuse same contexts across packages\nglobal[contexts] = (_global$contexts = global[contexts]) !== null && _global$contexts !== void 0 ? _global$contexts : new Map();\nexport default function getNamedContext(name, initialValue) {\n  let context = global[contexts].get(name);\n\n  if (context) {\n    return context;\n  }\n\n  context = /*#__PURE__*/React.createContext(initialValue);\n  context.displayName = name;\n  global[contexts].set(name, context);\n  return context;\n}\n//# sourceMappingURL=getNamedContext.js.map"]},"metadata":{},"sourceType":"module"}