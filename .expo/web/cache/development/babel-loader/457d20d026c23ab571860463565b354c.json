{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ProfileScreen from \"./ProfileScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SettingsScreen = function (_Component) {\n  _inherits(SettingsScreen, _Component);\n\n  var _super = _createSuper(SettingsScreen);\n\n  function SettingsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SettingsScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(SettingsScreen, [{\n    key: \"updateDetails\",\n    value: function updateDetails() {\n      console.log(this.props);\n    }\n  }, {\n    key: \"updatePhoto\",\n    value: function updatePhoto() {\n      console.log('Update photo');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        children: [_jsxs(View, {\n          children: [_jsx(TextInput, {\n            placeholder: \"Change first name\"\n          }), _jsx(TextInput, {\n            placeholder: \"Change last name\"\n          }), _jsx(TextInput, {\n            placeholder: \"Change email\"\n          }), _jsx(TextInput, {\n            placeholder: \"Change password\"\n          }), _jsx(Button, {\n            title: \"Update details\",\n            onPress: function onPress() {\n              return _this2.updateDetails();\n            }\n          })]\n        }), _jsx(View, {\n          children: _jsx(Button, {\n            title: \"Update picture\",\n            onPress: function onPress() {\n              return _this2.updatePhoto();\n            }\n          })\n        })]\n      });\n    }\n  }]);\n\n  return SettingsScreen;\n}(Component);\n\nexport default SettingsScreen;","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/SettingsScreen.js"],"names":["React","Component","ProfileScreen","SettingsScreen","props","state","first_name","last_name","email","password","console","log","updateDetails","updatePhoto"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAGA,OAAOC,aAAP;;;;IAEMC,c;;;;;AACF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,SAAS,EAAE,EAFF;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,QAAQ,EAAE;AAJD,KAAb;AAHe;AASlB;;;;WAED,yBAAe;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AASH;;;WAED,uBAAa;AACTM,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;;;WAED,kBAAS;AAAA;;AACL,aACI,MAAC,IAAD;AAAA,mBACI,MAAC,IAAD;AAAA,qBACI,KAAC,SAAD;AAAW,YAAA,WAAW,EAAC;AAAvB,YADJ,EAEI,KAAC,SAAD;AAAW,YAAA,WAAW,EAAC;AAAvB,YAFJ,EAGI,KAAC,SAAD;AAAW,YAAA,WAAW,EAAC;AAAvB,YAHJ,EAII,KAAC,SAAD;AAAW,YAAA,WAAW,EAAC;AAAvB,YAJJ,EAKI,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,gBAAd;AAA+B,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACC,aAAL,EAAN;AAAA;AAAxC,YALJ;AAAA,UADJ,EAQI,KAAC,IAAD;AAAA,oBACI,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,gBAAd;AAA+B,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACC,WAAL,EAAN;AAAA;AAAxC;AADJ,UARJ;AAAA,QADJ;AAcH;;;;EA3CwBZ,S;;AA8C7B,eAAeE,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, TextInput, Button } from 'react-native';\r\n\r\nimport ProfileScreen from './ProfileScreen';\r\n\r\nclass SettingsScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    updateDetails(){\r\n        console.log(this.props);\r\n        // console.log('Update details', ProfileScreen.state.login_info.id);\r\n        // fetch('http://localhost:3333/api/1.0.0/user/' + ProfileScreen.state.login_info.id, {\r\n        //     method: 'patch',\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         'X-Authorization': ProfileScreen.state.login_info.token\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    updatePhoto(){\r\n        console.log('Update photo');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <View>\r\n                <View>\r\n                    <TextInput placeholder='Change first name'/>\r\n                    <TextInput placeholder='Change last name' />\r\n                    <TextInput placeholder='Change email' />\r\n                    <TextInput placeholder='Change password' />\r\n                    <Button title='Update details' onPress={() => this.updateDetails()}/>\r\n                </View>\r\n                <View>\r\n                    <Button title='Update picture' onPress={() => this.updatePhoto()}/>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SettingsScreen;"]},"metadata":{},"sourceType":"module"}