{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport NavigationRouteContext from \"./NavigationRouteContext\";\nvar VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\nexport var shouldPreventRemove = function shouldPreventRemove(emitter, beforeRemoveListeners, currentRoutes, nextRoutes, action) {\n  var _action$VISITED_ROUTE;\n\n  var nextRouteKeys = nextRoutes.map(function (route) {\n    return route.key;\n  });\n  var removedRoutes = currentRoutes.filter(function (route) {\n    return !nextRouteKeys.includes(route.key);\n  }).reverse();\n  var visitedRouteKeys = (_action$VISITED_ROUTE = action[VISITED_ROUTE_KEYS]) !== null && _action$VISITED_ROUTE !== void 0 ? _action$VISITED_ROUTE : new Set();\n\n  var beforeRemoveAction = _objectSpread(_objectSpread({}, action), {}, _defineProperty({}, VISITED_ROUTE_KEYS, visitedRouteKeys));\n\n  for (var _iterator = _createForOfIteratorHelperLoose(removedRoutes), _step; !(_step = _iterator()).done;) {\n    var route = _step.value;\n\n    var _beforeRemoveListener;\n\n    if (visitedRouteKeys.has(route.key)) {\n      continue;\n    }\n\n    var isPrevented = (_beforeRemoveListener = beforeRemoveListeners[route.key]) === null || _beforeRemoveListener === void 0 ? void 0 : _beforeRemoveListener.call(beforeRemoveListeners, beforeRemoveAction);\n\n    if (isPrevented) {\n      return true;\n    }\n\n    visitedRouteKeys.add(route.key);\n    var event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: {\n        action: beforeRemoveAction\n      },\n      canPreventDefault: true\n    });\n\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n\n  return false;\n};\nexport default function useOnPreventRemove(_ref) {\n  var getState = _ref.getState,\n      emitter = _ref.emitter,\n      beforeRemoveListeners = _ref.beforeRemoveListeners;\n\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n      addKeyedListener = _React$useContext.addKeyedListener;\n\n  var route = React.useContext(NavigationRouteContext);\n  var routeKey = route === null || route === void 0 ? void 0 : route.key;\n  React.useEffect(function () {\n    if (routeKey) {\n      return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('beforeRemove', routeKey, function (action) {\n        var state = getState();\n        return shouldPreventRemove(emitter, beforeRemoveListeners, state.routes, [], action);\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,wBAAP;AACA,OAAOC,sBAAP;AACA,IAAMC,kBAAkB,GAAGC,MAAM,CAAC,oBAAD,CAAjC;AACA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,OAAD,EAAUC,qBAAV,EAAiCC,aAAjC,EAAgDC,UAAhD,EAA4DC,MAA5D,EAAuE;AACxG,MAAIC,qBAAJ;;AAEA,MAAMC,aAAa,GAAGH,UAAU,CAACI,GAAX,CAAe,eAAK;AAAA,WAAIC,KAAK,CAACC,GAAV;AAAA,GAApB,CAAtB;AAEA,MAAMC,aAAa,GAAGR,aAAa,CAACS,MAAd,CAAqB,eAAK;AAAA,WAAI,CAACL,aAAa,CAACM,QAAd,CAAuBJ,KAAK,CAACC,GAA7B,CAAL;AAAA,GAA1B,EAAkEI,OAAlE,EAAtB;AACA,MAAMC,gBAAgB,GACtB,CAACT,qBAAqB,GAAGD,MAAM,CAACP,kBAAD,CAA/B,MAAyD,IAAzD,IAAiEQ,qBAAqB,KAAK,KAAK,CAAhG,GAAoGA,qBAApG,GAA4H,IAAIU,GAAJ,EAD5H;;AAEA,MAAMC,kBAAkB,mCAAQZ,MAAR,2BACrBP,kBADqB,EACAiB,gBADA,EAAxB;;AAIA,uDAAoBJ,aAApB,wCAAmC;AAAA,QAAxBF,KAAwB;;AACjC,QAAIS,qBAAJ;;AAEA,QAAIH,gBAAgB,CAACI,GAAjB,CAAqBV,KAAK,CAACC,GAA3B,CAAJ,EAAqC;AAEnC;AACD;;AAGD,QAAMU,WAAW,GAAG,CAACF,qBAAqB,GAAGhB,qBAAqB,CAACO,KAAK,CAACC,GAAP,CAA9C,MAA+D,IAA/D,IAAuEQ,qBAAqB,KAAK,KAAK,CAAtG,GAA0G,KAAK,CAA/G,GAAmHA,qBAAqB,CAACG,IAAtB,CAA2BnB,qBAA3B,EAAkDe,kBAAlD,CAAvI;;AAEA,QAAIG,WAAJ,EAAiB;AACf,aAAO,IAAP;AACD;;AAEDL,oBAAgB,CAACO,GAAjB,CAAqBb,KAAK,CAACC,GAA3B;AACA,QAAMa,KAAK,GAAGtB,OAAO,CAACuB,IAAR,CAAa;AACzBC,UAAI,EAAE,cADmB;AAEzBC,YAAM,EAAEjB,KAAK,CAACC,GAFW;AAGzBiB,UAAI,EAAE;AACJtB,cAAM,EAAEY;AADJ,OAHmB;AAMzBW,uBAAiB,EAAE;AANM,KAAb,CAAd;;AASA,QAAIL,KAAK,CAACM,gBAAV,EAA4B;AAC1B,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD,CA3CM;AA4CP,eAAe,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AAC/C,MACEC,QADF,GAIID,IAJJ,CACEC,QADF;AAAA,MAEE/B,OAFF,GAII8B,IAJJ,CAEE9B,OAFF;AAAA,MAGEC,qBAHF,GAII6B,IAJJ,CAGE7B,qBAHF;;AAKA,0BAEIP,KAAK,CAACsC,UAAN,CAAiBrC,wBAAjB,CAFJ;AAAA,MACEsC,gBADF,qBACEA,gBADF;;AAGA,MAAMzB,KAAK,GAAGd,KAAK,CAACsC,UAAN,CAAiBpC,sBAAjB,CAAd;AACA,MAAMsC,QAAQ,GAAG1B,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAACC,GAArE;AACAf,OAAK,CAACyC,SAAN,CAAgB,YAAM;AACpB,QAAID,QAAJ,EAAc;AACZ,aAAOD,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAAC,cAAD,EAAiBC,QAAjB,EAA2B,gBAAM,EAAI;AAC9H,YAAME,KAAK,GAAGL,QAAQ,EAAtB;AACA,eAAOhC,mBAAmB,CAACC,OAAD,EAAUC,qBAAV,EAAiCmC,KAAK,CAACC,MAAvC,EAA+C,EAA/C,EAAmDjC,MAAnD,CAA1B;AACD,OAH0F,CAA3F;AAID;AACF,GAPD,EAOG,CAAC6B,gBAAD,EAAmBhC,qBAAnB,EAA0CD,OAA1C,EAAmD+B,QAAnD,EAA6DG,QAA7D,CAPH;AAQD","names":["React","NavigationBuilderContext","NavigationRouteContext","VISITED_ROUTE_KEYS","Symbol","shouldPreventRemove","emitter","beforeRemoveListeners","currentRoutes","nextRoutes","action","_action$VISITED_ROUTE","nextRouteKeys","map","route","key","removedRoutes","filter","includes","reverse","visitedRouteKeys","Set","beforeRemoveAction","_beforeRemoveListener","has","isPrevented","call","add","event","emit","type","target","data","canPreventDefault","defaultPrevented","useOnPreventRemove","_ref","getState","useContext","addKeyedListener","routeKey","useEffect","state","routes"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-navigation/core/lib/module/useOnPreventRemove.js"],"sourcesContent":["import * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nconst VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\nexport const shouldPreventRemove = (emitter, beforeRemoveListeners, currentRoutes, nextRoutes, action) => {\n  var _action$VISITED_ROUTE;\n\n  const nextRouteKeys = nextRoutes.map(route => route.key); // Call these in reverse order so last screens handle the event first\n\n  const removedRoutes = currentRoutes.filter(route => !nextRouteKeys.includes(route.key)).reverse();\n  const visitedRouteKeys = // @ts-expect-error: add this property to mark that we've already emitted this action\n  (_action$VISITED_ROUTE = action[VISITED_ROUTE_KEYS]) !== null && _action$VISITED_ROUTE !== void 0 ? _action$VISITED_ROUTE : new Set();\n  const beforeRemoveAction = { ...action,\n    [VISITED_ROUTE_KEYS]: visitedRouteKeys\n  };\n\n  for (const route of removedRoutes) {\n    var _beforeRemoveListener;\n\n    if (visitedRouteKeys.has(route.key)) {\n      // Skip if we've already emitted this action for this screen\n      continue;\n    } // First, we need to check if any child screens want to prevent it\n\n\n    const isPrevented = (_beforeRemoveListener = beforeRemoveListeners[route.key]) === null || _beforeRemoveListener === void 0 ? void 0 : _beforeRemoveListener.call(beforeRemoveListeners, beforeRemoveAction);\n\n    if (isPrevented) {\n      return true;\n    }\n\n    visitedRouteKeys.add(route.key);\n    const event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: {\n        action: beforeRemoveAction\n      },\n      canPreventDefault: true\n    });\n\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n\n  return false;\n};\nexport default function useOnPreventRemove(_ref) {\n  let {\n    getState,\n    emitter,\n    beforeRemoveListeners\n  } = _ref;\n  const {\n    addKeyedListener\n  } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const routeKey = route === null || route === void 0 ? void 0 : route.key;\n  React.useEffect(() => {\n    if (routeKey) {\n      return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('beforeRemove', routeKey, action => {\n        const state = getState();\n        return shouldPreventRemove(emitter, beforeRemoveListeners, state.routes, [], action);\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}\n//# sourceMappingURL=useOnPreventRemove.js.map"]},"metadata":{},"sourceType":"module"}