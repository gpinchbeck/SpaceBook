{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar getData = function getData(done) {\n  var jsonValue, data;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@spacebook_details'));\n\n        case 3:\n          jsonValue = _context.sent;\n          data = JSON.parse(jsonValue);\n          return _context.abrupt(\"return\", done(data));\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar FriendsScreen = function (_Component) {\n  _inherits(FriendsScreen, _Component);\n\n  var _super = _createSuper(FriendsScreen);\n\n  function FriendsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, FriendsScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: {},\n      friends: []\n    };\n    return _this;\n  }\n\n  _createClass(FriendsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getData(function (data) {\n        _this2.setState({\n          data: data\n        });\n\n        _this2.getFriends();\n      });\n    }\n  }, {\n    key: \"getFriends\",\n    value: function getFriends() {\n      var _this3 = this;\n\n      fetch('http://localhost:3333/api/1.0.0/user/' + this.state.data.id + '/friends', {\n        method: 'GET',\n        headers: {\n          'X-Authorization': this.state.data.token\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this3.setState({\n          friends: responseJson\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        children: _jsx(FlatList, {\n          data: this.state.friends,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsx(View, {\n              children: _jsx(Text, {\n                children: item.first_name\n              })\n            });\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return item[0].id.toString();\n          }\n        })\n      });\n    }\n  }]);\n\n  return FriendsScreen;\n}(Component);\n\nexport default FriendsScreen;","map":{"version":3,"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/components/FriendsScreen.js"],"names":["React","Component","AsyncStorage","getData","done","getItem","jsonValue","data","JSON","parse","console","log","FriendsScreen","props","state","friends","setState","getFriends","fetch","id","method","headers","token","then","response","json","responseJson","catch","error","item","first_name","index","toString"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEgBF,YAAY,CAACG,OAAb,CAAqB,oBAArB,CAFhB;;AAAA;AAEFC,UAAAA,SAFE;AAGFC,UAAAA,IAHE,GAGKC,IAAI,CAACC,KAAL,CAAWH,SAAX,CAHL;AAAA,2CAIDF,IAAI,CAACG,IAAD,CAJH;;AAAA;AAAA;AAAA;AAMRG,UAAAA,OAAO,CAACC,GAAR;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;IAUMC,a;;;;;AACF,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTP,MAAAA,IAAI,EAAE,EADG;AAETQ,MAAAA,OAAO,EAAE;AAFA,KAAb;AAHc;AAOjB;;;;WAED,6BAAmB;AAAA;;AACfZ,MAAAA,OAAO,CAAC,UAACI,IAAD,EAAU;AACd,QAAA,MAAI,CAACS,QAAL,CAAc;AACVT,UAAAA,IAAI,EAAEA;AADI,SAAd;;AAGA,QAAA,MAAI,CAACU,UAAL;AACH,OALM,CAAP;AAMH;;;WAED,sBAAY;AAAA;;AACRC,MAAAA,KAAK,CAAC,0CAA0C,KAAKJ,KAAL,CAAWP,IAAX,CAAgBY,EAA1D,GAA+D,UAAhE,EAA4E;AAC7EC,QAAAA,MAAM,EAAE,KADqE;AAE7EC,QAAAA,OAAO,EAAE;AACL,6BAAmB,KAAKP,KAAL,CAAWP,IAAX,CAAgBe;AAD9B;AAFoE,OAA5E,CAAL,CAMCC,IAND,CAMM,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OANN,EAOCF,IAPD,CAOM,UAACG,YAAD,EAAkB;AACpBhB,QAAAA,OAAO,CAACC,GAAR,CAAYe,YAAZ;;AACA,QAAA,MAAI,CAACV,QAAL,CAAc;AACVD,UAAAA,OAAO,EAAEW;AADC,SAAd;AAGH,OAZD,EAaCC,KAbD,CAaO,UAACC,KAAD,EAAW;AACdlB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACH,OAfD;AAgBH;;;WAED,kBAAS;AACL,aACI,KAAC,IAAD;AAAA,kBACI,KAAC,QAAD;AACI,UAAA,IAAI,EAAE,KAAKd,KAAL,CAAWC,OADrB;AAEI,UAAA,UAAU,EAAE;AAAA,gBAAEc,IAAF,QAAEA,IAAF;AAAA,mBACR,KAAC,IAAD;AAAA,wBACI,KAAC,IAAD;AAAA,0BAAOA,IAAI,CAACC;AAAZ;AADJ,cADQ;AAAA,WAFhB;AAOI,UAAA,YAAY,EAAE,sBAACD,IAAD,EAAME,KAAN;AAAA,mBAAgBF,IAAI,CAAC,CAAD,CAAJ,CAAQV,EAAR,CAAWa,QAAX,EAAhB;AAAA;AAPlB;AADJ,QADJ;AAaH;;;;EApDuB/B,S;;AAuD5B,eAAeW,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, FlatList } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst getData = async (done) => {\r\n    try {\r\n        const jsonValue = await AsyncStorage.getItem('@spacebook_details');\r\n        const data = JSON.parse(jsonValue);\r\n        return done(data);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nclass FriendsScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: {},\r\n            friends: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        getData((data) => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n            this.getFriends();\r\n        });\r\n    }\r\n\r\n    getFriends(){\r\n        fetch('http://localhost:3333/api/1.0.0/user/' + this.state.data.id + '/friends', {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-Authorization': this.state.data.token\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            console.log(responseJson);\r\n            this.setState({\r\n                friends: responseJson\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View>\r\n                <FlatList\r\n                    data={this.state.friends}\r\n                    renderItem={({item}) => (\r\n                        <View>\r\n                            <Text>{item.first_name}</Text>\r\n                        </View>\r\n                    )}\r\n                    keyExtractor={(item,index) => item[0].id.toString()}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FriendsScreen;"]},"metadata":{},"sourceType":"module"}