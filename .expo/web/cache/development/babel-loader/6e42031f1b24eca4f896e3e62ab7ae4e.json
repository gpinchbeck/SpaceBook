{"ast":null,"code":"import { useComboBox as useComboBoxWeb } from '@react-aria/combobox';\nimport { mapDomPropsToRN } from '@react-native-aria/utils';\nexport function useComboBox(props, state) {\n  var params = useComboBoxWeb(props, state);\n  var onKeyPress = params.inputProps.onKeyDown;\n  params.inputProps.onKeyDown = undefined;\n  params.inputProps.onKeyPress = onKeyPress;\n  params.inputProps.blurOnSubmit = false;\n  params.inputProps.onKeyDown = undefined;\n  return {\n    inputProps: mapDomPropsToRN(params.inputProps),\n    buttonProps: mapDomPropsToRN(params.buttonProps),\n    labelProps: mapDomPropsToRN(params.labelProps),\n    listBoxProps: mapDomPropsToRN(params.listBoxProps)\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,IAAIC,cAAxB,QAA8C,sBAA9C;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAQA,OAAO,SAASF,WAAT,CAAqBG,KAArB,EAA4BC,KAA5B,EAAmC;AAExC,MAAMC,MAAM,GAAGJ,cAAc,CAACE,KAAD,EAAQC,KAAR,CAA7B;AACA,MAAME,UAAU,GAAGD,MAAM,CAACE,UAAP,CAAkBC,SAArC;AACAH,QAAM,CAACE,UAAP,CAAkBC,SAAlB,GAA8BC,SAA9B;AAGAJ,QAAM,CAACE,UAAP,CAAkBD,UAAlB,GAA+BA,UAA/B;AAEAD,QAAM,CAACE,UAAP,CAAkBG,YAAlB,GAAiC,KAAjC;AACAL,QAAM,CAACE,UAAP,CAAkBC,SAAlB,GAA8BC,SAA9B;AACA,SAAO;AACLF,cAAU,EAAEL,eAAe,CAACG,MAAM,CAACE,UAAR,CADtB;AAELI,eAAW,EAAET,eAAe,CAACG,MAAM,CAACM,WAAR,CAFvB;AAGLC,cAAU,EAAEV,eAAe,CAACG,MAAM,CAACO,UAAR,CAHtB;AAILC,gBAAY,EAAEX,eAAe,CAACG,MAAM,CAACQ,YAAR;AAJxB,GAAP;AAMD","names":["useComboBox","useComboBoxWeb","mapDomPropsToRN","props","state","params","onKeyPress","inputProps","onKeyDown","undefined","blurOnSubmit","buttonProps","labelProps","listBoxProps"],"sources":["D:/Users/georg/Desktop/MAD/SpaceBook/node_modules/@react-native-aria/combobox/lib/module/useComboBox.web.js"],"sourcesContent":["import { useComboBox as useComboBoxWeb } from '@react-aria/combobox';\nimport { mapDomPropsToRN } from '@react-native-aria/utils';\n\n/**\n * Provides the behavior and accessibility implementation for a combo box component.\n * A combo box combines a text input with a listbox, allowing users to filter a list of options to items matching a query.\n * @param props - Props for the combo box.\n * @param state - State for the select, as returned by `useComboBoxState`.\n */\nexport function useComboBox(props, state) {\n  // @ts-ignore\n  const params = useComboBoxWeb(props, state);\n  const onKeyPress = params.inputProps.onKeyDown;\n  params.inputProps.onKeyDown = undefined; // RN Web supports onKeyPress. It's same as onKeyDown\n  // https://necolas.github.io/react-native-web/docs/text-input/\n\n  params.inputProps.onKeyPress = onKeyPress; // @ts-ignore\n\n  params.inputProps.blurOnSubmit = false;\n  params.inputProps.onKeyDown = undefined;\n  return {\n    inputProps: mapDomPropsToRN(params.inputProps),\n    buttonProps: mapDomPropsToRN(params.buttonProps),\n    labelProps: mapDomPropsToRN(params.labelProps),\n    listBoxProps: mapDomPropsToRN(params.listBoxProps)\n  };\n}\n//# sourceMappingURL=useComboBox.web.js.map"]},"metadata":{},"sourceType":"module"}