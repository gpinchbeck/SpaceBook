{"ast":null,"code":"import { useSlotId as $crOtA$useSlotId, mergeProps as $crOtA$mergeProps, useId as $crOtA$useId, useLabels as $crOtA$useLabels } from \"@react-aria/utils\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $8f1f06f2efd295ee$exports = {};\n$parcel$export($8f1f06f2efd295ee$exports, \"useField\", function () {\n  return $8f1f06f2efd295ee$export$294aa081a6c6f55d;\n});\nvar $6f8f5e0de5a77844$exports = {};\n$parcel$export($6f8f5e0de5a77844$exports, \"useLabel\", function () {\n  return $6f8f5e0de5a77844$export$8467354a121f1b9f;\n});\n\nfunction $6f8f5e0de5a77844$export$8467354a121f1b9f(props) {\n  var id = props.id,\n      label = props.label,\n      ariaLabelledby = props['aria-labelledby'],\n      ariaLabel = props['aria-label'],\n      _props$labelElementTy = props.labelElementType,\n      labelElementType = _props$labelElementTy === void 0 ? 'label' : _props$labelElementTy;\n  id = $crOtA$useId(id);\n  var labelId = $crOtA$useId();\n  var labelProps = {};\n\n  if (label) {\n    ariaLabelledby = ariaLabelledby ? ariaLabelledby + \" \" + labelId : labelId;\n    labelProps = {\n      id: labelId,\n      htmlFor: labelElementType === 'label' ? id : undefined\n    };\n  } else if (!ariaLabelledby && !ariaLabel) console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');\n\n  var fieldProps = $crOtA$useLabels({\n    id: id,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  });\n  return {\n    labelProps: labelProps,\n    fieldProps: fieldProps\n  };\n}\n\nfunction $8f1f06f2efd295ee$export$294aa081a6c6f55d(props) {\n  var description = props.description,\n      errorMessage = props.errorMessage,\n      validationState = props.validationState;\n\n  var _$6f8f5e0de5a77844$ex = $6f8f5e0de5a77844$export$8467354a121f1b9f(props),\n      labelProps = _$6f8f5e0de5a77844$ex.labelProps,\n      fieldProps = _$6f8f5e0de5a77844$ex.fieldProps;\n\n  var descriptionId = $crOtA$useSlotId([Boolean(description), Boolean(errorMessage), validationState]);\n  var errorMessageId = $crOtA$useSlotId([Boolean(description), Boolean(errorMessage), validationState]);\n  fieldProps = $crOtA$mergeProps(fieldProps, {\n    'aria-describedby': [descriptionId, errorMessageId, props['aria-describedby']].filter(Boolean).join(' ') || undefined\n  });\n  return {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: {\n      id: descriptionId\n    },\n    errorMessageProps: {\n      id: errorMessageId\n    }\n  };\n}\n\nexport { $8f1f06f2efd295ee$export$294aa081a6c6f55d as useField, $6f8f5e0de5a77844$export$8467354a121f1b9f as useLabel };","map":{"version":3,"mappings":"AAAA,SAAQA,SAAS,IAAIC,gBAArB,EAAuCC,UAAU,IAAIC,iBAArD,EAAwEC,KAAK,IAAIC,YAAjF,EAA+FC,SAAS,IAAIC,gBAA5G,QAAmI,mBAAnI;;AAEA,SAASC,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8BC,CAA9B,EAAiCC,CAAjC,EAAoC;AAClCC,QAAM,CAACC,cAAP,CAAsBL,CAAtB,EAAyBC,CAAzB,EAA4B;AAACK,OAAG,EAAEJ,CAAN;AAASK,OAAG,EAAEJ,CAAd;AAAiBK,cAAU,EAAE,IAA7B;AAAmCC,gBAAY,EAAE;AAAjD,GAA5B;AACD;;AACD,IAAIC,yBAAyB,GAAG,EAAhC;AAEAX,cAAc,CAACW,yBAAD,EAA4B,UAA5B,EAAwC;AAAA,SAAMC,yCAAN;AAAA,CAAxC,CAAd;AACA,IAAIC,yBAAyB,GAAG,EAAhC;AAEAb,cAAc,CAACa,yBAAD,EAA4B,UAA5B,EAAwC;AAAA,SAAMC,yCAAN;AAAA,CAAxC,CAAd;;AAEA,SAASA,yCAAT,CAAmDC,KAAnD,EAA0D;AACtD,MAAUC,EAAV,GAA8ID,KAA9I,CAAMC,EAAN;AAAA,MAAsBC,KAAtB,GAA8IF,KAA9I,CAAeE,KAAf;AAAA,MAAiDC,cAAjD,GAA8IH,KAA9I,CAA8B,iBAA9B;AAAA,MAAgFI,SAAhF,GAA8IJ,KAA9I,CAAkE,YAAlE;AAAA,8BAA8IA,KAA9I,CAA4FK,gBAA5F;AAAA,MAA8GA,gBAA9G,sCAAiI,OAAjI;AACAJ,IAAE,GAAGnB,YAAY,CAACmB,EAAD,CAAjB;AACA,MAAIK,OAAO,GAAGxB,YAAY,EAA1B;AACA,MAAIyB,UAAU,GAAG,EAAjB;;AAEA,MAAIL,KAAJ,EAAW;AACPC,kBAAc,GAAGA,cAAc,GAAMA,cAAN,SAAwBG,OAAxB,GAAoCA,OAAnE;AACAC,cAAU,GAAG;AACTN,QAAE,EAAEK,OADK;AAETE,aAAO,EAAEH,gBAAgB,KAAK,OAArB,GAA+BJ,EAA/B,GAAoCQ;AAFpC,KAAb;AAIH,GAND,MAMO,IAAI,CAACN,cAAD,IAAmB,CAACC,SAAxB,EAAmCM,OAAO,CAACC,IAAR,CAAa,sHAAb;;AAC1C,MAAIC,UAAU,GAAG5B,gBAAgB,CAAC;AAC9BiB,MAAE,EAAEA,EAD0B;AAE9B,kBAAcG,SAFgB;AAG9B,uBAAmBD;AAHW,GAAD,CAAjC;AAKA,SAAO;AACHI,cAAU,EAAEA,UADT;AAEHK,cAAU,EAAEA;AAFT,GAAP;AAIH;;AAID,SAASf,yCAAT,CAAmDG,KAAnD,EAA0D;AACtD,MAAmBa,WAAnB,GAAoGb,KAApG,CAAMa,WAAN;AAAA,MAA+CC,YAA/C,GAAoGd,KAApG,CAAiCc,YAAjC;AAAA,MAA+EC,eAA/E,GAAoGf,KAApG,CAA8De,eAA9D;;AACA,8BAA2DhB,yCAAyC,CAACC,KAAD,CAApG;AAAA,MAAkBO,UAAlB,yBAAMA,UAAN;AAAA,MAA2CK,UAA3C,yBAA+BA,UAA/B;;AACA,MAAII,aAAa,GAAGtC,gBAAgB,CAAC,CACjCuC,OAAO,CAACJ,WAAD,CAD0B,EAEjCI,OAAO,CAACH,YAAD,CAF0B,EAGjCC,eAHiC,CAAD,CAApC;AAKA,MAAIG,cAAc,GAAGxC,gBAAgB,CAAC,CAClCuC,OAAO,CAACJ,WAAD,CAD2B,EAElCI,OAAO,CAACH,YAAD,CAF2B,EAGlCC,eAHkC,CAAD,CAArC;AAKAH,YAAU,GAAGhC,iBAAiB,CAACgC,UAAD,EAAa;AACvC,wBAAoB,CAChBI,aADgB,EAGhBE,cAHgB,EAIhBlB,KAAK,CAAC,kBAAD,CAJW,EAKlBmB,MALkB,CAKXF,OALW,EAKFG,IALE,CAKG,GALH,KAKWX;AANQ,GAAb,CAA9B;AAQA,SAAO;AACHF,cAAU,EAAEA,UADT;AAEHK,cAAU,EAAEA,UAFT;AAGHS,oBAAgB,EAAE;AACdpB,QAAE,EAAEe;AADU,KAHf;AAMHM,qBAAiB,EAAE;AACfrB,QAAE,EAAEiB;AADW;AANhB,GAAP;AAUH;;AAMD,SAAQrB,yCAAyC,IAAI0B,QAArD,EAA+DxB,yCAAyC,IAAIyB,QAA5G","names":["useSlotId","$crOtA$useSlotId","mergeProps","$crOtA$mergeProps","useId","$crOtA$useId","useLabels","$crOtA$useLabels","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$8f1f06f2efd295ee$exports","$8f1f06f2efd295ee$export$294aa081a6c6f55d","$6f8f5e0de5a77844$exports","$6f8f5e0de5a77844$export$8467354a121f1b9f","props","id","label","ariaLabelledby","ariaLabel","labelElementType","labelId","labelProps","htmlFor","undefined","console","warn","fieldProps","description","errorMessage","validationState","descriptionId","Boolean","errorMessageId","filter","join","descriptionProps","errorMessageProps","useField","useLabel"],"sources":["C:/Users/georg/Documents/Coursework/SpaceBook/node_modules/@react-aria/label/dist/module.js"],"sourcesContent":["import {useSlotId as $crOtA$useSlotId, mergeProps as $crOtA$mergeProps, useId as $crOtA$useId, useLabels as $crOtA$useLabels} from \"@react-aria/utils\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $8f1f06f2efd295ee$exports = {};\n\n$parcel$export($8f1f06f2efd295ee$exports, \"useField\", () => $8f1f06f2efd295ee$export$294aa081a6c6f55d);\nvar $6f8f5e0de5a77844$exports = {};\n\n$parcel$export($6f8f5e0de5a77844$exports, \"useLabel\", () => $6f8f5e0de5a77844$export$8467354a121f1b9f);\n\nfunction $6f8f5e0de5a77844$export$8467354a121f1b9f(props) {\n    let { id: id , label: label , 'aria-labelledby': ariaLabelledby , 'aria-label': ariaLabel , labelElementType: labelElementType = 'label'  } = props;\n    id = $crOtA$useId(id);\n    let labelId = $crOtA$useId();\n    let labelProps = {\n    };\n    if (label) {\n        ariaLabelledby = ariaLabelledby ? `${ariaLabelledby} ${labelId}` : labelId;\n        labelProps = {\n            id: labelId,\n            htmlFor: labelElementType === 'label' ? id : undefined\n        };\n    } else if (!ariaLabelledby && !ariaLabel) console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');\n    let fieldProps = $crOtA$useLabels({\n        id: id,\n        'aria-label': ariaLabel,\n        'aria-labelledby': ariaLabelledby\n    });\n    return {\n        labelProps: labelProps,\n        fieldProps: fieldProps\n    };\n}\n\n\n\nfunction $8f1f06f2efd295ee$export$294aa081a6c6f55d(props) {\n    let { description: description , errorMessage: errorMessage , validationState: validationState  } = props;\n    let { labelProps: labelProps , fieldProps: fieldProps  } = $6f8f5e0de5a77844$export$8467354a121f1b9f(props);\n    let descriptionId = $crOtA$useSlotId([\n        Boolean(description),\n        Boolean(errorMessage),\n        validationState\n    ]);\n    let errorMessageId = $crOtA$useSlotId([\n        Boolean(description),\n        Boolean(errorMessage),\n        validationState\n    ]);\n    fieldProps = $crOtA$mergeProps(fieldProps, {\n        'aria-describedby': [\n            descriptionId,\n            // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268\n            errorMessageId,\n            props['aria-describedby']\n        ].filter(Boolean).join(' ') || undefined\n    });\n    return {\n        labelProps: labelProps,\n        fieldProps: fieldProps,\n        descriptionProps: {\n            id: descriptionId\n        },\n        errorMessageProps: {\n            id: errorMessageId\n        }\n    };\n}\n\n\n\n\n\nexport {$8f1f06f2efd295ee$export$294aa081a6c6f55d as useField, $6f8f5e0de5a77844$export$8467354a121f1b9f as useLabel};\n//# sourceMappingURL=module.js.map\n"]},"metadata":{},"sourceType":"module"}